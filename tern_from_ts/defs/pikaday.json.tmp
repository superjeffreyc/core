{
  "PikadayI18nConfig": {
    "previousMonth": "string",
    "nextMonth": "string",
    "months": "[string]",
    "weekdays": "[string]",
    "weekdaysShort": "[string]"
  },
  "PikadayOptions": {
    "field": "HTMLElement",
    "format": "string",
    "trigger": "HTMLElement",
    "bound": "bool",
    "position": "string",
    "reposition": "bool",
    "container": "HTMLElement",
    "defaultDate": "Date",
    "setDefaultDate": "bool",
    "firstDay": "number",
    "minDate": "Date",
    "maxDate": "Date",
    "disableWeekends": "bool",
    "disableDayFn": "fn(date: Date)",
    "yearRange": "[number]",
    "showWeekNumber": "bool",
    "isRTL": "bool",
    "i18n": "PikadayI18nConfig",
    "yearSuffix": "string",
    "showMonthAfterYear": "bool",
    "numberOfMonths": "number",
    "mainCalendar": "string",
    "theme": "string",
    "onSelect": "fn(date: Date)",
    "onOpen": "fn()",
    "onClose": "fn()",
    "onDraw": "fn()"
  },
  "Pikaday": {
    "!type": "fn(options: PikadayOptions)",
    "prototype": {
      "el": "HTMLElement",
      "getDate": "fn() -> Date",
      "void": "?",
      "setDate": "fn(date: string, Date: ?, triggerOnSelect?: bool)",
      "getMoment": "fn() -> moment.Moment",
      "setMoment": "fn(moment: ?)",
      "gotoDate": "fn(date: Date)",
      "gotoToday": "fn()",
      "gotoMonth": "fn(monthIndex: number)",
      "gotoYear": "fn(year: number)",
      "nextMonth": "fn()",
      "prevMonth": "fn()",
      "gogoYear": "fn(year: number)",
      "setMinDate": "fn(date: Date)",
      "setMaxDate": "fn(date: Date)",
      "isVisible": "fn() -> bool",
      "show": "fn()",
      "hide": "fn()",
      "adjustPosition": "fn()",
      "destroy": "fn()"
    }
  },
  "!name": "pikaday.d.ts"
}
