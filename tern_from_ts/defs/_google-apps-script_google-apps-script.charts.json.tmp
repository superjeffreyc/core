{
  "GoogleAppsScript": {
    "Charts": {
      "AreaChartBuilder": {
        "build": "fn() -> Chart",
        "reverseCategories": "fn() -> AreaChartBuilder",
        "setBackgroundColor": "fn(cssValue: string) -> AreaChartBuilder",
        "setColors": "fn(cssValues: [String]) -> AreaChartBuilder",
        "setDataSourceUrl": "fn(url: string) -> AreaChartBuilder",
        "setDataTable": "fn(tableBuilder: DataTableBuilder) -> AreaChartBuilder",
        "setDataViewDefinition": "fn(dataViewDefinition: DataViewDefinition) -> AreaChartBuilder",
        "setDimensions": "fn(width: Integer, height: Integer) -> AreaChartBuilder",
        "setLegendPosition": "fn(position: Position) -> AreaChartBuilder",
        "setLegendTextStyle": "fn(textStyle: TextStyle) -> AreaChartBuilder",
        "setOption": "fn(option: string, value: Object) -> AreaChartBuilder",
        "setPointStyle": "fn(style: PointStyle) -> AreaChartBuilder",
        "setRange": "fn(start: Number, end: Number) -> AreaChartBuilder",
        "setStacked": "fn() -> AreaChartBuilder",
        "setTitle": "fn(chartTitle: string) -> AreaChartBuilder",
        "setTitleTextStyle": "fn(textStyle: TextStyle) -> AreaChartBuilder",
        "setXAxisTextStyle": "fn(textStyle: TextStyle) -> AreaChartBuilder",
        "setXAxisTitle": "fn(title: string) -> AreaChartBuilder",
        "setXAxisTitleTextStyle": "fn(textStyle: TextStyle) -> AreaChartBuilder",
        "setYAxisTextStyle": "fn(textStyle: TextStyle) -> AreaChartBuilder",
        "setYAxisTitle": "fn(title: string) -> AreaChartBuilder",
        "setYAxisTitleTextStyle": "fn(textStyle: TextStyle) -> AreaChartBuilder",
        "useLogScale": "fn() -> AreaChartBuilder"
      },
      "BarChartBuilder": {
        "build": "fn() -> Chart",
        "reverseCategories": "fn() -> BarChartBuilder",
        "reverseDirection": "fn() -> BarChartBuilder",
        "setBackgroundColor": "fn(cssValue: string) -> BarChartBuilder",
        "setColors": "fn(cssValues: [String]) -> BarChartBuilder",
        "setDataSourceUrl": "fn(url: string) -> BarChartBuilder",
        "setDataTable": "fn(tableBuilder: DataTableBuilder) -> BarChartBuilder",
        "setDataViewDefinition": "fn(dataViewDefinition: DataViewDefinition) -> BarChartBuilder",
        "setDimensions": "fn(width: Integer, height: Integer) -> BarChartBuilder",
        "setLegendPosition": "fn(position: Position) -> BarChartBuilder",
        "setLegendTextStyle": "fn(textStyle: TextStyle) -> BarChartBuilder",
        "setOption": "fn(option: string, value: Object) -> BarChartBuilder",
        "setRange": "fn(start: Number, end: Number) -> BarChartBuilder",
        "setStacked": "fn() -> BarChartBuilder",
        "setTitle": "fn(chartTitle: string) -> BarChartBuilder",
        "setTitleTextStyle": "fn(textStyle: TextStyle) -> BarChartBuilder",
        "setXAxisTextStyle": "fn(textStyle: TextStyle) -> BarChartBuilder",
        "setXAxisTitle": "fn(title: string) -> BarChartBuilder",
        "setXAxisTitleTextStyle": "fn(textStyle: TextStyle) -> BarChartBuilder",
        "setYAxisTextStyle": "fn(textStyle: TextStyle) -> BarChartBuilder",
        "setYAxisTitle": "fn(title: string) -> BarChartBuilder",
        "setYAxisTitleTextStyle": "fn(textStyle: TextStyle) -> BarChartBuilder",
        "useLogScale": "fn() -> BarChartBuilder"
      },
      "CategoryFilterBuilder": {
        "build": "fn() -> Control",
        "setAllowMultiple": "fn(allowMultiple: bool) -> CategoryFilterBuilder",
        "setAllowNone": "fn(allowNone: bool) -> CategoryFilterBuilder",
        "setAllowTyping": "fn(allowTyping: bool) -> CategoryFilterBuilder",
        "setCaption": "fn(caption: string) -> CategoryFilterBuilder",
        "setDataTable": "fn(tableBuilder: DataTableBuilder) -> CategoryFilterBuilder",
        "setFilterColumnIndex": "fn(columnIndex: Integer) -> CategoryFilterBuilder",
        "setFilterColumnLabel": "fn(columnLabel: string) -> CategoryFilterBuilder",
        "setLabel": "fn(label: string) -> CategoryFilterBuilder",
        "setLabelSeparator": "fn(labelSeparator: string) -> CategoryFilterBuilder",
        "setLabelStacking": "fn(orientation: Orientation) -> CategoryFilterBuilder",
        "setSelectedValuesLayout": "fn(layout: PickerValuesLayout) -> CategoryFilterBuilder",
        "setSortValues": "fn(sortValues: bool) -> CategoryFilterBuilder",
        "setValues": "fn(values: [String]) -> CategoryFilterBuilder"
      },
      "Chart": {
        "getAs": "fn(contentType: string) -> Base.Blob",
        "getBlob": "fn() -> Base.Blob",
        "getId": "fn() -> string",
        "getOptions": "fn() -> ChartOptions",
        "getType": "fn() -> string",
        "setId": "fn(id: string) -> Chart"
      },
      "ChartOptions": {
        "get": "fn(option: string) -> Object"
      },
      "ChartType": "number",
      "Charts": {
        "ChartType": "ChartType",
        "ColumnType": "ColumnType",
        "CurveStyle": "CurveStyle",
        "MatchType": "MatchType",
        "Orientation": "Orientation",
        "PickerValuesLayout": "PickerValuesLayout",
        "PointStyle": "PointStyle",
        "Position": "Position",
        "newAreaChart": "fn() -> AreaChartBuilder",
        "newBarChart": "fn() -> BarChartBuilder",
        "newCategoryFilter": "fn() -> CategoryFilterBuilder",
        "newColumnChart": "fn() -> ColumnChartBuilder",
        "newDashboardPanel": "fn() -> DashboardPanelBuilder",
        "newDataTable": "fn() -> DataTableBuilder",
        "newDataViewDefinition": "fn() -> DataViewDefinitionBuilder",
        "newLineChart": "fn() -> LineChartBuilder",
        "newNumberRangeFilter": "fn() -> NumberRangeFilterBuilder",
        "newPieChart": "fn() -> PieChartBuilder",
        "newScatterChart": "fn() -> ScatterChartBuilder",
        "newStringFilter": "fn() -> StringFilterBuilder",
        "newTableChart": "fn() -> TableChartBuilder",
        "newTextStyle": "fn() -> TextStyleBuilder"
      },
      "ColumnChartBuilder": {
        "build": "fn() -> Chart",
        "reverseCategories": "fn() -> ColumnChartBuilder",
        "setBackgroundColor": "fn(cssValue: string) -> ColumnChartBuilder",
        "setColors": "fn(cssValues: [String]) -> ColumnChartBuilder",
        "setDataSourceUrl": "fn(url: string) -> ColumnChartBuilder",
        "setDataTable": "fn(tableBuilder: DataTableBuilder) -> ColumnChartBuilder",
        "setDataViewDefinition": "fn(dataViewDefinition: DataViewDefinition) -> ColumnChartBuilder",
        "setDimensions": "fn(width: Integer, height: Integer) -> ColumnChartBuilder",
        "setLegendPosition": "fn(position: Position) -> ColumnChartBuilder",
        "setLegendTextStyle": "fn(textStyle: TextStyle) -> ColumnChartBuilder",
        "setOption": "fn(option: string, value: Object) -> ColumnChartBuilder",
        "setRange": "fn(start: Number, end: Number) -> ColumnChartBuilder",
        "setStacked": "fn() -> ColumnChartBuilder",
        "setTitle": "fn(chartTitle: string) -> ColumnChartBuilder",
        "setTitleTextStyle": "fn(textStyle: TextStyle) -> ColumnChartBuilder",
        "setXAxisTextStyle": "fn(textStyle: TextStyle) -> ColumnChartBuilder",
        "setXAxisTitle": "fn(title: string) -> ColumnChartBuilder",
        "setXAxisTitleTextStyle": "fn(textStyle: TextStyle) -> ColumnChartBuilder",
        "setYAxisTextStyle": "fn(textStyle: TextStyle) -> ColumnChartBuilder",
        "setYAxisTitle": "fn(title: string) -> ColumnChartBuilder",
        "setYAxisTitleTextStyle": "fn(textStyle: TextStyle) -> ColumnChartBuilder",
        "useLogScale": "fn() -> ColumnChartBuilder"
      },
      "ColumnType": "number",
      "Control": {
        "getId": "fn() -> string",
        "getType": "fn() -> string",
        "setId": "fn(id: string) -> Control"
      },
      "CurveStyle": "number",
      "DashboardPanel": {
        "add": "fn(widget: UI.Widget) -> DashboardPanel",
        "getId": "fn() -> string",
        "getType": "fn() -> string",
        "setId": "fn(id: string) -> DashboardPanel"
      },
      "DashboardPanelBuilder": {
        "bind": "fn(control: Control, chart: Chart, controls: [Control], charts: [Chart]) -> DashboardPanelBuilder",
        "build": "fn() -> DashboardPanel",
        "setDataTable": "fn(tableBuilder: DataTableBuilder) -> DashboardPanelBuilder"
      },
      "DataTable": {},
      "DataTableBuilder": {
        "addColumn": "fn(type: ColumnType, label: string) -> DataTableBuilder",
        "addRow": "fn(values: [Object]) -> DataTableBuilder",
        "build": "fn() -> DataTable",
        "setValue": "fn(row: Integer, column: Integer, value: Object) -> DataTableBuilder"
      },
      "DataTableSource": {
        "getDataTable": "fn() -> DataTable"
      },
      "DataViewDefinition": {},
      "DataViewDefinitionBuilder": {
        "build": "fn() -> DataViewDefinition",
        "setColumns": "fn(columns: [Object]) -> DataViewDefinitionBuilder"
      },
      "LineChartBuilder": {
        "build": "fn() -> Chart",
        "reverseCategories": "fn() -> LineChartBuilder",
        "setBackgroundColor": "fn(cssValue: string) -> LineChartBuilder",
        "setColors": "fn(cssValues: [String]) -> LineChartBuilder",
        "setCurveStyle": "fn(style: CurveStyle) -> LineChartBuilder",
        "setDataSourceUrl": "fn(url: string) -> LineChartBuilder",
        "setDataTable": "fn(tableBuilder: DataTableBuilder) -> LineChartBuilder",
        "setDataViewDefinition": "fn(dataViewDefinition: DataViewDefinition) -> LineChartBuilder",
        "setDimensions": "fn(width: Integer, height: Integer) -> LineChartBuilder",
        "setLegendPosition": "fn(position: Position) -> LineChartBuilder",
        "setLegendTextStyle": "fn(textStyle: TextStyle) -> LineChartBuilder",
        "setOption": "fn(option: string, value: Object) -> LineChartBuilder",
        "setPointStyle": "fn(style: PointStyle) -> LineChartBuilder",
        "setRange": "fn(start: Number, end: Number) -> LineChartBuilder",
        "setTitle": "fn(chartTitle: string) -> LineChartBuilder",
        "setTitleTextStyle": "fn(textStyle: TextStyle) -> LineChartBuilder",
        "setXAxisTextStyle": "fn(textStyle: TextStyle) -> LineChartBuilder",
        "setXAxisTitle": "fn(title: string) -> LineChartBuilder",
        "setXAxisTitleTextStyle": "fn(textStyle: TextStyle) -> LineChartBuilder",
        "setYAxisTextStyle": "fn(textStyle: TextStyle) -> LineChartBuilder",
        "setYAxisTitle": "fn(title: string) -> LineChartBuilder",
        "setYAxisTitleTextStyle": "fn(textStyle: TextStyle) -> LineChartBuilder",
        "useLogScale": "fn() -> LineChartBuilder"
      },
      "MatchType": "number",
      "NumberRangeFilterBuilder": {
        "build": "fn() -> Control",
        "setDataTable": "fn(tableBuilder: DataTableBuilder) -> NumberRangeFilterBuilder",
        "setFilterColumnIndex": "fn(columnIndex: Integer) -> NumberRangeFilterBuilder",
        "setFilterColumnLabel": "fn(columnLabel: string) -> NumberRangeFilterBuilder",
        "setLabel": "fn(label: string) -> NumberRangeFilterBuilder",
        "setLabelSeparator": "fn(labelSeparator: string) -> NumberRangeFilterBuilder",
        "setLabelStacking": "fn(orientation: Orientation) -> NumberRangeFilterBuilder",
        "setMaxValue": "fn(maxValue: Integer) -> NumberRangeFilterBuilder",
        "setMinValue": "fn(minValue: Integer) -> NumberRangeFilterBuilder",
        "setOrientation": "fn(orientation: Orientation) -> NumberRangeFilterBuilder",
        "setShowRangeValues": "fn(showRangeValues: bool) -> NumberRangeFilterBuilder",
        "setTicks": "fn(ticks: Integer) -> NumberRangeFilterBuilder"
      },
      "Orientation": "number",
      "PickerValuesLayout": "number",
      "PieChartBuilder": {
        "build": "fn() -> Chart",
        "reverseCategories": "fn() -> PieChartBuilder",
        "set3D": "fn() -> PieChartBuilder",
        "setBackgroundColor": "fn(cssValue: string) -> PieChartBuilder",
        "setColors": "fn(cssValues: [String]) -> PieChartBuilder",
        "setDataSourceUrl": "fn(url: string) -> PieChartBuilder",
        "setDataTable": "fn(tableBuilder: DataTableBuilder) -> PieChartBuilder",
        "setDataViewDefinition": "fn(dataViewDefinition: DataViewDefinition) -> PieChartBuilder",
        "setDimensions": "fn(width: Integer, height: Integer) -> PieChartBuilder",
        "setLegendPosition": "fn(position: Position) -> PieChartBuilder",
        "setLegendTextStyle": "fn(textStyle: TextStyle) -> PieChartBuilder",
        "setOption": "fn(option: string, value: Object) -> PieChartBuilder",
        "setTitle": "fn(chartTitle: string) -> PieChartBuilder",
        "setTitleTextStyle": "fn(textStyle: TextStyle) -> PieChartBuilder"
      },
      "PointStyle": "number",
      "Position": "number",
      "ScatterChartBuilder": {
        "build": "fn() -> Chart",
        "setBackgroundColor": "fn(cssValue: string) -> ScatterChartBuilder",
        "setColors": "fn(cssValues: [String]) -> ScatterChartBuilder",
        "setDataSourceUrl": "fn(url: string) -> ScatterChartBuilder",
        "setDataTable": "fn(tableBuilder: DataTableBuilder) -> ScatterChartBuilder",
        "setDataViewDefinition": "fn(dataViewDefinition: DataViewDefinition) -> ScatterChartBuilder",
        "setDimensions": "fn(width: Integer, height: Integer) -> ScatterChartBuilder",
        "setLegendPosition": "fn(position: Position) -> ScatterChartBuilder",
        "setLegendTextStyle": "fn(textStyle: TextStyle) -> ScatterChartBuilder",
        "setOption": "fn(option: string, value: Object) -> ScatterChartBuilder",
        "setPointStyle": "fn(style: PointStyle) -> ScatterChartBuilder",
        "setTitle": "fn(chartTitle: string) -> ScatterChartBuilder",
        "setTitleTextStyle": "fn(textStyle: TextStyle) -> ScatterChartBuilder",
        "setXAxisLogScale": "fn() -> ScatterChartBuilder",
        "setXAxisRange": "fn(start: Number, end: Number) -> ScatterChartBuilder",
        "setXAxisTextStyle": "fn(textStyle: TextStyle) -> ScatterChartBuilder",
        "setXAxisTitle": "fn(title: string) -> ScatterChartBuilder",
        "setXAxisTitleTextStyle": "fn(textStyle: TextStyle) -> ScatterChartBuilder",
        "setYAxisLogScale": "fn() -> ScatterChartBuilder",
        "setYAxisRange": "fn(start: Number, end: Number) -> ScatterChartBuilder",
        "setYAxisTextStyle": "fn(textStyle: TextStyle) -> ScatterChartBuilder",
        "setYAxisTitle": "fn(title: string) -> ScatterChartBuilder",
        "setYAxisTitleTextStyle": "fn(textStyle: TextStyle) -> ScatterChartBuilder"
      },
      "StringFilterBuilder": {
        "build": "fn() -> Control",
        "setCaseSensitive": "fn(caseSensitive: bool) -> StringFilterBuilder",
        "setDataTable": "fn(tableBuilder: DataTableBuilder) -> StringFilterBuilder",
        "setFilterColumnIndex": "fn(columnIndex: Integer) -> StringFilterBuilder",
        "setFilterColumnLabel": "fn(columnLabel: string) -> StringFilterBuilder",
        "setLabel": "fn(label: string) -> StringFilterBuilder",
        "setLabelSeparator": "fn(labelSeparator: string) -> StringFilterBuilder",
        "setLabelStacking": "fn(orientation: Orientation) -> StringFilterBuilder",
        "setMatchType": "fn(matchType: MatchType) -> StringFilterBuilder",
        "setRealtimeTrigger": "fn(realtimeTrigger: bool) -> StringFilterBuilder"
      },
      "TableChartBuilder": {
        "build": "fn() -> Chart",
        "enablePaging": "fn(enablePaging: bool) -> TableChartBuilder",
        "enableRtlTable": "fn(rtlEnabled: bool) -> TableChartBuilder",
        "enableSorting": "fn(enableSorting: bool) -> TableChartBuilder",
        "setDataSourceUrl": "fn(url: string) -> TableChartBuilder",
        "setDataTable": "fn(tableBuilder: DataTableBuilder) -> TableChartBuilder",
        "setDataViewDefinition": "fn(dataViewDefinition: DataViewDefinition) -> TableChartBuilder",
        "setDimensions": "fn(width: Integer, height: Integer) -> TableChartBuilder",
        "setFirstRowNumber": "fn(number: Integer) -> TableChartBuilder",
        "setInitialSortingAscending": "fn(column: Integer) -> TableChartBuilder",
        "setInitialSortingDescending": "fn(column: Integer) -> TableChartBuilder",
        "setOption": "fn(option: string, value: Object) -> TableChartBuilder",
        "showRowNumberColumn": "fn(showRowNumber: bool) -> TableChartBuilder",
        "useAlternatingRowStyle": "fn(alternate: bool) -> TableChartBuilder"
      },
      "TextStyle": {
        "getColor": "fn() -> string",
        "getFontName": "fn() -> string",
        "getFontSize": "fn() -> Number"
      },
      "TextStyleBuilder": {
        "build": "fn() -> TextStyle",
        "setColor": "fn(cssValue: string) -> TextStyleBuilder",
        "setFontName": "fn(fontName: string) -> TextStyleBuilder",
        "setFontSize": "fn(fontSize: Number) -> TextStyleBuilder"
      }
    }
  },
  "Charts": "GoogleAppsScript.Charts.Charts",
  "!name": "google-apps-script.charts.d.ts"
}
