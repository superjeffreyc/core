{
  "createjs": {
    "CSSPlugin": {
      "!type": "fn()",
      "cssSuffixMap": "Object",
      "install": "fn()",
      "prototype": {}
    },
    "Ease": {
      "backIn": "fn(amount: number)",
      "backInOut": "fn(amount: number)",
      "backOut": "fn(amount: number)",
      "bounceIn": "fn(amount: number)",
      "bounceInOut": "fn(amount: number)",
      "bounceOut": "fn(amount: number)",
      "circIn": "fn(amount: number)",
      "circInOut": "fn(amount: number)",
      "circOut": "fn(amount: number)",
      "cubicIn": "fn(amount: number)",
      "cubicInOut": "fn(amount: number)",
      "cubicOut": "fn(amount: number)",
      "elasticIn": "fn(amount: number)",
      "elasticInOut": "fn(amount: number)",
      "elasticOut": "fn(amount: number)",
      "get": "fn(amount: number) -> fn(amount: number)",
      "getBackIn": "fn(amount: number) -> fn(amount: number)",
      "getBackInOut": "fn(amount: number) -> fn(amount: number)",
      "getBackOut": "fn(amount: number) -> fn(amount: number)",
      "getElasticIn": "fn(amplitude: number, period: number) -> fn(amount: number)",
      "getElasticInOut": "fn(amplitude: number, period: number) -> fn(amount: number)",
      "getElasticOut": "fn(amplitude: number, period: number) -> fn(amount: number)",
      "getPowIn": "fn(pow: number) -> fn(amount: number)",
      "getPowInOut": "fn(pow: number) -> fn(amount: number)",
      "getPowOut": "fn(pow: number) -> fn(amount: number)",
      "linear": "fn(amount: number)",
      "none": "fn(amount: number)",
      "quadIn": "fn(amount: number)",
      "quadInOut": "fn(amount: number)",
      "quadOut": "fn(amount: number)",
      "quartIn": "fn(amount: number)",
      "quartInOut": "fn(amount: number)",
      "quartOut": "fn(amount: number)",
      "quintIn": "fn(amount: number)",
      "quintInOut": "fn(amount: number)",
      "quintOut": "fn(amount: number)",
      "sineIn": "fn(amount: number)",
      "sineInOut": "fn(amount: number)",
      "sineOut": "fn(amount: number)",
      "prototype": {}
    },
    "MotionGuidePlugin": {
      "!type": "fn()",
      "install": "fn() -> Object",
      "prototype": {}
    },
    "Timeline": {
      "!type": "fn(tweens: [Tween], labels: Object, props: Object)",
      "prototype": {
        "duration": "number",
        "ignoreGlobalPause": "bool",
        "loop": "bool",
        "position": "Object",
        "addLabel": "fn(label: string, position: number)",
        "addTween": "fn(tween: [Tween])",
        "getCurrentLabel": "fn() -> string",
        "getLabels": "fn() -> [Object]",
        "gotoAndPlay": "fn(positionOrLabel: string, number: ?)",
        "gotoAndStop": "fn(positionOrLabel: string, number: ?)",
        "removeTween": "fn(tween: [Tween])",
        "resolve": "fn(positionOrLabel: string, number: ?) -> number",
        "setLabels": "fn(o: Object)",
        "setPaused": "fn(value: bool)",
        "setPosition": "fn(value: number, actionsMode?: number) -> bool",
        "tick": "fn(delta: number)",
        "updateDuration": "fn()"
      }
    },
    "Tween": {
      "!type": "fn(target: Object, props?: Object, pluginData?: Object)",
      "IGNORE": "Object",
      "LOOP": "number",
      "NONE": "number",
      "REVERSE": "number",
      "get": "fn(target: Object, props?: Object, pluginData?: Object, override?: bool) -> Tween",
      "hasActiveTweens": "fn(target?: Object) -> bool",
      "installPlugin": "fn(plugin: Object, properties: [?])",
      "removeAllTweens": "fn()",
      "removeTweens": "fn(target: Object)",
      "tick": "fn(delta: number, paused: bool)",
      "prototype": {
        "duration": "number",
        "ignoreGlobalPause": "bool",
        "loop": "bool",
        "onChange": "Function",
        "passive": "bool",
        "pluginData": "Object",
        "position": "number",
        "target": "Object",
        "call": "fn(callback: fn(tweenObject: Tween), params?: [?], scope?: Object) -> Tween",
        "pause": "fn(tween: Tween) -> Tween",
        "play": "fn(tween: Tween) -> Tween",
        "set": "fn(props: Object, target?: Object) -> Tween",
        "setPaused": "fn(value: bool) -> Tween",
        "setPosition": "fn(value: number, actionsMode: number) -> bool",
        "tick": "fn(delta: number)",
        "to": "fn(props: Object, duration?: number, ease?: fn(t: number)) -> Tween",
        "wait": "fn(duration: number, passive?: bool) -> Tween"
      }
    },
    "TweenJS": {
      "buildDate": "string",
      "version": "string",
      "prototype": {}
    }
  },
  "!name": "tweenjs"
}
