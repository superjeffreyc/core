{
  "dojox": {
    "calc": {
      "GraphPro": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "aFloatingPane": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret",
          "attachScope": "Object",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "contextRequire": "Function",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "funcMaker": "Object",
          "functions": "[?]",
          "grapher": "Object",
          "hasDisplay": "bool",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "readStore": "Object",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "widgetsInTemplate": "bool",
          "writeStore": "Object",
          "buildRendering": "fn()",
          "clearText": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "cycleCommandDown": "fn()",
          "cycleCommands": "fn(count: ?, node: ?, event: ?)",
          "cycleCommandUp": "fn()",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "executorLoaded": "fn()",
          "getChildren": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "insertMinus": "fn()",
          "insertOperator": "fn(newText: ?)",
          "insertText": "fn(newText: ?)",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "loadStore": "fn(store: ?, isReadOnly: ?)",
          "makeFunctionWindow": "fn()",
          "makeGrapherWindow": "fn()",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "parseTextbox": "fn()",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "print": "fn(text: ?, isRight: ?)",
          "putInAnsIfTextboxIsHighlighted": "fn(node: ?) -> bool",
          "saveFunction": "fn(name: ?, args: ?, body: ?)",
          "setTextboxValue": "fn(widget: ?, val: ?)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onFocus": "fn()",
          "onKeyPress": "fn(e: ?)"
        }
      },
      "Standard": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attachScope": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret28",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "contextRequire": "Function",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "functions": "[?]",
          "hasDisplay": "bool",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "readStore": "Object",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "widgetsInTemplate": "bool",
          "writeStore": "Object",
          "buildRendering": "fn()",
          "clearText": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "cycleCommandDown": "fn()",
          "cycleCommands": "fn(count: ?, node: ?, event: ?)",
          "cycleCommandUp": "fn()",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "executorLoaded": "fn()",
          "getChildren": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "insertMinus": "fn()",
          "insertOperator": "fn(newText: ?)",
          "insertText": "fn(newText: ?)",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "loadStore": "fn(store: ?, isReadOnly: ?)",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "parseTextbox": "fn()",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "print": "fn(text: ?, isRight: ?)",
          "putInAnsIfTextboxIsHighlighted": "fn(node: ?) -> bool",
          "saveFunction": "fn(name: ?, args: ?, body: ?)",
          "setTextboxValue": "fn(widget: ?, val: ?)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onFocus": "fn()",
          "onKeyPress": "fn(e: ?)"
        }
      },
      "_Executor": {
        "approx": "fn(r: number) -> number",
        "draw": "fn(chart: dojox.charting.Chart2D, functionToGraph: Function, params: Object) -> ?",
        "FuncGen": {
          "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
          "prototype": {
            "attachScope": "Object",
            "set": "fn(property: string, value: Object)",
            "get": "fn(property: string) -> Object",
            "watch": "fn(property: string, callback: ?) -> ret72",
            "attributeMap": "Object",
            "baseClass": "string",
            "class": "string",
            "containerNode": "HTMLElement",
            "contextRequire": "Function",
            "dir": "string",
            "domNode": "HTMLElement",
            "focused": "bool",
            "functions": "Object",
            "id": "string",
            "lang": "string",
            "ownerDocument": "Object",
            "readStore": "Object",
            "searchContainerNode": "bool",
            "srcNodeRef": "HTMLElement",
            "style": "string",
            "templatePath": "string",
            "templateString": "string",
            "title": "string",
            "tooltip": "string",
            "widgetsInTemplate": "bool",
            "writeStore": "Object",
            "buildRendering": "fn()",
            "clear": "fn()",
            "connect": "fn(obj: Object, event: String, method: String) -> ?",
            "defer": "fn(fcn: Function, delay: number) -> Object",
            "deleteFunction": "fn(name: ?)",
            "deleteThing": "fn(item: ?)",
            "destroy": "fn(preserveDom?: bool)",
            "destroyDescendants": "fn(preserveDom: bool)",
            "destroyRecursive": "fn(preserveDom: bool)",
            "destroyRendering": "fn(preserveDom?: bool)",
            "disconnect": "fn(handle: ?)",
            "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
            "getChildren": "fn() -> [?]",
            "getParent": "fn() -> ?",
            "isFocusable": "fn() -> ?",
            "isLeftToRight": "fn() -> ?",
            "on": "fn(type: String, func: Function) -> ?",
            "own": "fn() -> ?",
            "placeAt": "fn(reference: String, position: String) -> ?",
            "postCreate": "fn()",
            "postMixInProperties": "fn()",
            "readyStatus": "fn()",
            "reset": "fn()",
            "saveFunction": "fn(name: ?, args: ?, body: ?)",
            "startup": "fn()",
            "subscribe": "fn(t: String, method: Function) -> ?",
            "uninitialize": "fn() -> bool",
            "unsubscribe": "fn(handle: Object)",
            "getCachedTemplate": "fn() -> ?",
            "onBlur": "fn()",
            "onClear": "fn()",
            "onDelete": "fn()",
            "onFocus": "fn()",
            "onReset": "fn()",
            "onSaved": "fn()",
            "onSelect": "fn()"
          }
        },
        "generatePoints": "fn(funcToGraph: Function, x: String, y: String, width: number, minX: number, maxX: number, minY: number, maxY: number) -> Object",
        "Grapher": {
          "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
          "prototype": {
            "attachScope": "Object",
            "set": "fn(property: string, value: Object)",
            "get": "fn(property: string) -> Object",
            "watch": "fn(property: string, callback: ?) -> ret96",
            "attributeMap": "Object",
            "baseClass": "string",
            "chartIndex": "number",
            "checkboxIndex": "number",
            "class": "string",
            "colorBoxFieldsetIndex": "number",
            "colorIndex": "number",
            "containerNode": "HTMLElement",
            "contextRequire": "Function",
            "dir": "string",
            "domNode": "HTMLElement",
            "dropDownIndex": "number",
            "evaluatedExpression": "number",
            "expressionIndex": "number",
            "focused": "bool",
            "funcNumberIndex": "number",
            "functionMode": "number",
            "functionRef": "number",
            "id": "string",
            "lang": "string",
            "ownerDocument": "Object",
            "searchContainerNode": "bool",
            "srcNodeRef": "HTMLElement",
            "statusIndex": "number",
            "style": "string",
            "templatePath": "string",
            "templateString": "string",
            "title": "string",
            "tooltip": "string",
            "tooltipIndex": "number",
            "widgetsInTemplate": "bool",
            "addXYAxes": "fn(chart: dojox.charting.Chart2D) -> ?",
            "buildRendering": "fn()",
            "changedColor": "fn()",
            "checkDirty": "fn()",
            "checkDirty1": "fn()",
            "connect": "fn(obj: Object, event: String, method: String) -> ?",
            "createFunction": "fn()",
            "defer": "fn(fcn: Function, delay: number) -> Object",
            "deselectAll": "fn()",
            "destroy": "fn(preserveDom?: bool)",
            "destroyDescendants": "fn(preserveDom: bool)",
            "destroyRecursive": "fn(preserveDom: bool)",
            "destroyRendering": "fn(preserveDom?: bool)",
            "disconnect": "fn(handle: ?)",
            "drawOne": "fn(i: ?)",
            "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
            "erase": "fn(i: number)",
            "getChildren": "fn() -> [?]",
            "getParent": "fn() -> ?",
            "isFocusable": "fn() -> ?",
            "isLeftToRight": "fn() -> ?",
            "makeDirty": "fn()",
            "on": "fn(type: String, func: Function) -> ?",
            "own": "fn() -> ?",
            "placeAt": "fn(reference: String, position: String) -> ?",
            "postCreate": "fn()",
            "postMixInProperties": "fn()",
            "selectAll": "fn()",
            "setStatus": "fn(i: number, status: String)",
            "startup": "fn()",
            "subscribe": "fn(t: String, method: Function) -> ?",
            "uninitialize": "fn() -> bool",
            "unsubscribe": "fn(handle: Object)",
            "getCachedTemplate": "fn() -> ?",
            "onBlur": "fn()",
            "onDelete": "fn()",
            "onDraw": "fn()",
            "onErase": "fn()",
            "onFocus": "fn()"
          }
        },
        "pow": "fn(base: ?, exponent: ?) -> ?",
        "toFrac": "fn(number: ?) -> ?",
        "_Executor": {
          "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
          "prototype": {
            "attachScope": "Object",
            "set": "fn(property: string, value: Object)",
            "get": "fn(property: string) -> Object",
            "watch": "fn(property: string, callback: ?) -> ret53",
            "attributeMap": "Object",
            "baseClass": "string",
            "class": "string",
            "containerNode": "HTMLElement",
            "dir": "string",
            "domNode": "HTMLElement",
            "focused": "bool",
            "id": "string",
            "lang": "string",
            "ownerDocument": "Object",
            "searchContainerNode": "bool",
            "srcNodeRef": "HTMLElement",
            "style": "string",
            "templatePath": "string",
            "templateString": "string",
            "title": "string",
            "tooltip": "string",
            "buildRendering": "fn()",
            "connect": "fn(obj: Object, event: String, method: String) -> ?",
            "defer": "fn(fcn: Function, delay: number) -> Object",
            "deleteFunction": "fn(name: ?)",
            "destroy": "fn()",
            "destroyDescendants": "fn(preserveDom: bool)",
            "destroyRecursive": "fn(preserveDom: bool)",
            "destroyRendering": "fn(preserveDom?: bool)",
            "disconnect": "fn(handle: ?)",
            "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
            "eval": "fn(text: String) -> ?",
            "Function": "fn(name: ?, args: String, body: String) -> ?",
            "getChildren": "fn() -> [?]",
            "getParent": "fn() -> ?",
            "isFocusable": "fn() -> ?",
            "isLeftToRight": "fn() -> ?",
            "normalizedFunction": "fn(name: ?, args: ?, body: ?) -> ?",
            "on": "fn(type: String, func: Function) -> ?",
            "own": "fn() -> ?",
            "placeAt": "fn(reference: String, position: String) -> ?",
            "postCreate": "fn()",
            "postMixInProperties": "fn()",
            "startup": "fn()",
            "subscribe": "fn(t: String, method: Function) -> ?",
            "uninitialize": "fn() -> bool",
            "unsubscribe": "fn(handle: Object)",
            "getCachedTemplate": "fn() -> ?",
            "onBlur": "fn()",
            "onFocus": "fn()",
            "onLoad": "fn()"
          }
        }
      },
      "FuncGen": {
        "approx": "fn(r: number) -> number",
        "draw": "fn(chart: dojox.charting.Chart2D, functionToGraph: Function, params: Object) -> ?",
        "FuncGen": {
          "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
          "prototype": {
            "attachScope": "Object",
            "set": "fn(property: string, value: Object)",
            "get": "fn(property: string) -> Object",
            "watch": "fn(property: string, callback: ?) -> ret148",
            "attributeMap": "Object",
            "baseClass": "string",
            "class": "string",
            "containerNode": "HTMLElement",
            "contextRequire": "Function",
            "dir": "string",
            "domNode": "HTMLElement",
            "focused": "bool",
            "functions": "Object",
            "id": "string",
            "lang": "string",
            "ownerDocument": "Object",
            "readStore": "Object",
            "searchContainerNode": "bool",
            "srcNodeRef": "HTMLElement",
            "style": "string",
            "templatePath": "string",
            "templateString": "string",
            "title": "string",
            "tooltip": "string",
            "widgetsInTemplate": "bool",
            "writeStore": "Object",
            "buildRendering": "fn()",
            "clear": "fn()",
            "connect": "fn(obj: Object, event: String, method: String) -> ?",
            "defer": "fn(fcn: Function, delay: number) -> Object",
            "deleteFunction": "fn(name: ?)",
            "deleteThing": "fn(item: ?)",
            "destroy": "fn(preserveDom?: bool)",
            "destroyDescendants": "fn(preserveDom: bool)",
            "destroyRecursive": "fn(preserveDom: bool)",
            "destroyRendering": "fn(preserveDom?: bool)",
            "disconnect": "fn(handle: ?)",
            "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
            "getChildren": "fn() -> [?]",
            "getParent": "fn() -> ?",
            "isFocusable": "fn() -> ?",
            "isLeftToRight": "fn() -> ?",
            "on": "fn(type: String, func: Function) -> ?",
            "own": "fn() -> ?",
            "placeAt": "fn(reference: String, position: String) -> ?",
            "postCreate": "fn()",
            "postMixInProperties": "fn()",
            "readyStatus": "fn()",
            "reset": "fn()",
            "saveFunction": "fn(name: ?, args: ?, body: ?)",
            "startup": "fn()",
            "subscribe": "fn(t: String, method: Function) -> ?",
            "uninitialize": "fn() -> bool",
            "unsubscribe": "fn(handle: Object)",
            "getCachedTemplate": "fn() -> ?",
            "onBlur": "fn()",
            "onClear": "fn()",
            "onDelete": "fn()",
            "onFocus": "fn()",
            "onReset": "fn()",
            "onSaved": "fn()",
            "onSelect": "fn()"
          }
        },
        "generatePoints": "fn(funcToGraph: Function, x: String, y: String, width: number, minX: number, maxX: number, minY: number, maxY: number) -> Object",
        "Grapher": {
          "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
          "prototype": {
            "attachScope": "Object",
            "set": "fn(property: string, value: Object)",
            "get": "fn(property: string) -> Object",
            "watch": "fn(property: string, callback: ?) -> ret172",
            "attributeMap": "Object",
            "baseClass": "string",
            "chartIndex": "number",
            "checkboxIndex": "number",
            "class": "string",
            "colorBoxFieldsetIndex": "number",
            "colorIndex": "number",
            "containerNode": "HTMLElement",
            "contextRequire": "Function",
            "dir": "string",
            "domNode": "HTMLElement",
            "dropDownIndex": "number",
            "evaluatedExpression": "number",
            "expressionIndex": "number",
            "focused": "bool",
            "funcNumberIndex": "number",
            "functionMode": "number",
            "functionRef": "number",
            "id": "string",
            "lang": "string",
            "ownerDocument": "Object",
            "searchContainerNode": "bool",
            "srcNodeRef": "HTMLElement",
            "statusIndex": "number",
            "style": "string",
            "templatePath": "string",
            "templateString": "string",
            "title": "string",
            "tooltip": "string",
            "tooltipIndex": "number",
            "widgetsInTemplate": "bool",
            "addXYAxes": "fn(chart: dojox.charting.Chart2D) -> ?",
            "buildRendering": "fn()",
            "changedColor": "fn()",
            "checkDirty": "fn()",
            "checkDirty1": "fn()",
            "connect": "fn(obj: Object, event: String, method: String) -> ?",
            "createFunction": "fn()",
            "defer": "fn(fcn: Function, delay: number) -> Object",
            "deselectAll": "fn()",
            "destroy": "fn(preserveDom?: bool)",
            "destroyDescendants": "fn(preserveDom: bool)",
            "destroyRecursive": "fn(preserveDom: bool)",
            "destroyRendering": "fn(preserveDom?: bool)",
            "disconnect": "fn(handle: ?)",
            "drawOne": "fn(i: ?)",
            "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
            "erase": "fn(i: number)",
            "getChildren": "fn() -> [?]",
            "getParent": "fn() -> ?",
            "isFocusable": "fn() -> ?",
            "isLeftToRight": "fn() -> ?",
            "makeDirty": "fn()",
            "on": "fn(type: String, func: Function) -> ?",
            "own": "fn() -> ?",
            "placeAt": "fn(reference: String, position: String) -> ?",
            "postCreate": "fn()",
            "postMixInProperties": "fn()",
            "selectAll": "fn()",
            "setStatus": "fn(i: number, status: String)",
            "startup": "fn()",
            "subscribe": "fn(t: String, method: Function) -> ?",
            "uninitialize": "fn() -> bool",
            "unsubscribe": "fn(handle: Object)",
            "getCachedTemplate": "fn() -> ?",
            "onBlur": "fn()",
            "onDelete": "fn()",
            "onDraw": "fn()",
            "onErase": "fn()",
            "onFocus": "fn()"
          }
        },
        "pow": "fn(base: ?, exponent: ?) -> ?",
        "toFrac": "fn(number: ?) -> ?",
        "_Executor": {
          "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
          "prototype": {
            "attachScope": "Object",
            "set": "fn(property: string, value: Object)",
            "get": "fn(property: string) -> Object",
            "watch": "fn(property: string, callback: ?) -> ret129",
            "attributeMap": "Object",
            "baseClass": "string",
            "class": "string",
            "containerNode": "HTMLElement",
            "dir": "string",
            "domNode": "HTMLElement",
            "focused": "bool",
            "id": "string",
            "lang": "string",
            "ownerDocument": "Object",
            "searchContainerNode": "bool",
            "srcNodeRef": "HTMLElement",
            "style": "string",
            "templatePath": "string",
            "templateString": "string",
            "title": "string",
            "tooltip": "string",
            "buildRendering": "fn()",
            "connect": "fn(obj: Object, event: String, method: String) -> ?",
            "defer": "fn(fcn: Function, delay: number) -> Object",
            "deleteFunction": "fn(name: ?)",
            "destroy": "fn()",
            "destroyDescendants": "fn(preserveDom: bool)",
            "destroyRecursive": "fn(preserveDom: bool)",
            "destroyRendering": "fn(preserveDom?: bool)",
            "disconnect": "fn(handle: ?)",
            "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
            "eval": "fn(text: String) -> ?",
            "Function": "fn(name: ?, args: String, body: String) -> ?",
            "getChildren": "fn() -> [?]",
            "getParent": "fn() -> ?",
            "isFocusable": "fn() -> ?",
            "isLeftToRight": "fn() -> ?",
            "normalizedFunction": "fn(name: ?, args: ?, body: ?) -> ?",
            "on": "fn(type: String, func: Function) -> ?",
            "own": "fn() -> ?",
            "placeAt": "fn(reference: String, position: String) -> ?",
            "postCreate": "fn()",
            "postMixInProperties": "fn()",
            "startup": "fn()",
            "subscribe": "fn(t: String, method: Function) -> ?",
            "uninitialize": "fn() -> bool",
            "unsubscribe": "fn(handle: Object)",
            "getCachedTemplate": "fn() -> ?",
            "onBlur": "fn()",
            "onFocus": "fn()",
            "onLoad": "fn()"
          }
        }
      },
      "Grapher": {
        "approx": "fn(r: number) -> number",
        "draw": "fn(chart: dojox.charting.Chart2D, functionToGraph: Function, params: Object) -> ?",
        "FuncGen": {
          "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
          "prototype": {
            "attachScope": "Object",
            "set": "fn(property: string, value: Object)",
            "get": "fn(property: string) -> Object",
            "watch": "fn(property: string, callback: ?) -> ret224",
            "attributeMap": "Object",
            "baseClass": "string",
            "class": "string",
            "containerNode": "HTMLElement",
            "contextRequire": "Function",
            "dir": "string",
            "domNode": "HTMLElement",
            "focused": "bool",
            "functions": "Object",
            "id": "string",
            "lang": "string",
            "ownerDocument": "Object",
            "readStore": "Object",
            "searchContainerNode": "bool",
            "srcNodeRef": "HTMLElement",
            "style": "string",
            "templatePath": "string",
            "templateString": "string",
            "title": "string",
            "tooltip": "string",
            "widgetsInTemplate": "bool",
            "writeStore": "Object",
            "buildRendering": "fn()",
            "clear": "fn()",
            "connect": "fn(obj: Object, event: String, method: String) -> ?",
            "defer": "fn(fcn: Function, delay: number) -> Object",
            "deleteFunction": "fn(name: ?)",
            "deleteThing": "fn(item: ?)",
            "destroy": "fn(preserveDom?: bool)",
            "destroyDescendants": "fn(preserveDom: bool)",
            "destroyRecursive": "fn(preserveDom: bool)",
            "destroyRendering": "fn(preserveDom?: bool)",
            "disconnect": "fn(handle: ?)",
            "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
            "getChildren": "fn() -> [?]",
            "getParent": "fn() -> ?",
            "isFocusable": "fn() -> ?",
            "isLeftToRight": "fn() -> ?",
            "on": "fn(type: String, func: Function) -> ?",
            "own": "fn() -> ?",
            "placeAt": "fn(reference: String, position: String) -> ?",
            "postCreate": "fn()",
            "postMixInProperties": "fn()",
            "readyStatus": "fn()",
            "reset": "fn()",
            "saveFunction": "fn(name: ?, args: ?, body: ?)",
            "startup": "fn()",
            "subscribe": "fn(t: String, method: Function) -> ?",
            "uninitialize": "fn() -> bool",
            "unsubscribe": "fn(handle: Object)",
            "getCachedTemplate": "fn() -> ?",
            "onBlur": "fn()",
            "onClear": "fn()",
            "onDelete": "fn()",
            "onFocus": "fn()",
            "onReset": "fn()",
            "onSaved": "fn()",
            "onSelect": "fn()"
          }
        },
        "generatePoints": "fn(funcToGraph: Function, x: String, y: String, width: number, minX: number, maxX: number, minY: number, maxY: number) -> Object",
        "Grapher": {
          "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
          "prototype": {
            "attachScope": "Object",
            "set": "fn(property: string, value: Object)",
            "get": "fn(property: string) -> Object",
            "watch": "fn(property: string, callback: ?) -> ret248",
            "attributeMap": "Object",
            "baseClass": "string",
            "chartIndex": "number",
            "checkboxIndex": "number",
            "class": "string",
            "colorBoxFieldsetIndex": "number",
            "colorIndex": "number",
            "containerNode": "HTMLElement",
            "contextRequire": "Function",
            "dir": "string",
            "domNode": "HTMLElement",
            "dropDownIndex": "number",
            "evaluatedExpression": "number",
            "expressionIndex": "number",
            "focused": "bool",
            "funcNumberIndex": "number",
            "functionMode": "number",
            "functionRef": "number",
            "id": "string",
            "lang": "string",
            "ownerDocument": "Object",
            "searchContainerNode": "bool",
            "srcNodeRef": "HTMLElement",
            "statusIndex": "number",
            "style": "string",
            "templatePath": "string",
            "templateString": "string",
            "title": "string",
            "tooltip": "string",
            "tooltipIndex": "number",
            "widgetsInTemplate": "bool",
            "addXYAxes": "fn(chart: dojox.charting.Chart2D) -> ?",
            "buildRendering": "fn()",
            "changedColor": "fn()",
            "checkDirty": "fn()",
            "checkDirty1": "fn()",
            "connect": "fn(obj: Object, event: String, method: String) -> ?",
            "createFunction": "fn()",
            "defer": "fn(fcn: Function, delay: number) -> Object",
            "deselectAll": "fn()",
            "destroy": "fn(preserveDom?: bool)",
            "destroyDescendants": "fn(preserveDom: bool)",
            "destroyRecursive": "fn(preserveDom: bool)",
            "destroyRendering": "fn(preserveDom?: bool)",
            "disconnect": "fn(handle: ?)",
            "drawOne": "fn(i: ?)",
            "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
            "erase": "fn(i: number)",
            "getChildren": "fn() -> [?]",
            "getParent": "fn() -> ?",
            "isFocusable": "fn() -> ?",
            "isLeftToRight": "fn() -> ?",
            "makeDirty": "fn()",
            "on": "fn(type: String, func: Function) -> ?",
            "own": "fn() -> ?",
            "placeAt": "fn(reference: String, position: String) -> ?",
            "postCreate": "fn()",
            "postMixInProperties": "fn()",
            "selectAll": "fn()",
            "setStatus": "fn(i: number, status: String)",
            "startup": "fn()",
            "subscribe": "fn(t: String, method: Function) -> ?",
            "uninitialize": "fn() -> bool",
            "unsubscribe": "fn(handle: Object)",
            "getCachedTemplate": "fn() -> ?",
            "onBlur": "fn()",
            "onDelete": "fn()",
            "onDraw": "fn()",
            "onErase": "fn()",
            "onFocus": "fn()"
          }
        },
        "pow": "fn(base: ?, exponent: ?) -> ?",
        "toFrac": "fn(number: ?) -> ?",
        "_Executor": {
          "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
          "prototype": {
            "attachScope": "Object",
            "set": "fn(property: string, value: Object)",
            "get": "fn(property: string) -> Object",
            "watch": "fn(property: string, callback: ?) -> ret205",
            "attributeMap": "Object",
            "baseClass": "string",
            "class": "string",
            "containerNode": "HTMLElement",
            "dir": "string",
            "domNode": "HTMLElement",
            "focused": "bool",
            "id": "string",
            "lang": "string",
            "ownerDocument": "Object",
            "searchContainerNode": "bool",
            "srcNodeRef": "HTMLElement",
            "style": "string",
            "templatePath": "string",
            "templateString": "string",
            "title": "string",
            "tooltip": "string",
            "buildRendering": "fn()",
            "connect": "fn(obj: Object, event: String, method: String) -> ?",
            "defer": "fn(fcn: Function, delay: number) -> Object",
            "deleteFunction": "fn(name: ?)",
            "destroy": "fn()",
            "destroyDescendants": "fn(preserveDom: bool)",
            "destroyRecursive": "fn(preserveDom: bool)",
            "destroyRendering": "fn(preserveDom?: bool)",
            "disconnect": "fn(handle: ?)",
            "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
            "eval": "fn(text: String) -> ?",
            "Function": "fn(name: ?, args: String, body: String) -> ?",
            "getChildren": "fn() -> [?]",
            "getParent": "fn() -> ?",
            "isFocusable": "fn() -> ?",
            "isLeftToRight": "fn() -> ?",
            "normalizedFunction": "fn(name: ?, args: ?, body: ?) -> ?",
            "on": "fn(type: String, func: Function) -> ?",
            "own": "fn() -> ?",
            "placeAt": "fn(reference: String, position: String) -> ?",
            "postCreate": "fn()",
            "postMixInProperties": "fn()",
            "startup": "fn()",
            "subscribe": "fn(t: String, method: Function) -> ?",
            "uninitialize": "fn() -> bool",
            "unsubscribe": "fn(handle: Object)",
            "getCachedTemplate": "fn() -> ?",
            "onBlur": "fn()",
            "onFocus": "fn()",
            "onLoad": "fn()"
          }
        }
      },
      "toFrac": {
        "approx": "fn(r: number) -> number",
        "draw": "fn(chart: dojox.charting.Chart2D, functionToGraph: Function, params: Object) -> ?",
        "FuncGen": {
          "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
          "prototype": {
            "attachScope": "Object",
            "set": "fn(property: string, value: Object)",
            "get": "fn(property: string) -> Object",
            "watch": "fn(property: string, callback: ?) -> ret300",
            "attributeMap": "Object",
            "baseClass": "string",
            "class": "string",
            "containerNode": "HTMLElement",
            "contextRequire": "Function",
            "dir": "string",
            "domNode": "HTMLElement",
            "focused": "bool",
            "functions": "Object",
            "id": "string",
            "lang": "string",
            "ownerDocument": "Object",
            "readStore": "Object",
            "searchContainerNode": "bool",
            "srcNodeRef": "HTMLElement",
            "style": "string",
            "templatePath": "string",
            "templateString": "string",
            "title": "string",
            "tooltip": "string",
            "widgetsInTemplate": "bool",
            "writeStore": "Object",
            "buildRendering": "fn()",
            "clear": "fn()",
            "connect": "fn(obj: Object, event: String, method: String) -> ?",
            "defer": "fn(fcn: Function, delay: number) -> Object",
            "deleteFunction": "fn(name: ?)",
            "deleteThing": "fn(item: ?)",
            "destroy": "fn(preserveDom?: bool)",
            "destroyDescendants": "fn(preserveDom: bool)",
            "destroyRecursive": "fn(preserveDom: bool)",
            "destroyRendering": "fn(preserveDom?: bool)",
            "disconnect": "fn(handle: ?)",
            "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
            "getChildren": "fn() -> [?]",
            "getParent": "fn() -> ?",
            "isFocusable": "fn() -> ?",
            "isLeftToRight": "fn() -> ?",
            "on": "fn(type: String, func: Function) -> ?",
            "own": "fn() -> ?",
            "placeAt": "fn(reference: String, position: String) -> ?",
            "postCreate": "fn()",
            "postMixInProperties": "fn()",
            "readyStatus": "fn()",
            "reset": "fn()",
            "saveFunction": "fn(name: ?, args: ?, body: ?)",
            "startup": "fn()",
            "subscribe": "fn(t: String, method: Function) -> ?",
            "uninitialize": "fn() -> bool",
            "unsubscribe": "fn(handle: Object)",
            "getCachedTemplate": "fn() -> ?",
            "onBlur": "fn()",
            "onClear": "fn()",
            "onDelete": "fn()",
            "onFocus": "fn()",
            "onReset": "fn()",
            "onSaved": "fn()",
            "onSelect": "fn()"
          }
        },
        "generatePoints": "fn(funcToGraph: Function, x: String, y: String, width: number, minX: number, maxX: number, minY: number, maxY: number) -> Object",
        "Grapher": {
          "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
          "prototype": {
            "attachScope": "Object",
            "set": "fn(property: string, value: Object)",
            "get": "fn(property: string) -> Object",
            "watch": "fn(property: string, callback: ?) -> ret324",
            "attributeMap": "Object",
            "baseClass": "string",
            "chartIndex": "number",
            "checkboxIndex": "number",
            "class": "string",
            "colorBoxFieldsetIndex": "number",
            "colorIndex": "number",
            "containerNode": "HTMLElement",
            "contextRequire": "Function",
            "dir": "string",
            "domNode": "HTMLElement",
            "dropDownIndex": "number",
            "evaluatedExpression": "number",
            "expressionIndex": "number",
            "focused": "bool",
            "funcNumberIndex": "number",
            "functionMode": "number",
            "functionRef": "number",
            "id": "string",
            "lang": "string",
            "ownerDocument": "Object",
            "searchContainerNode": "bool",
            "srcNodeRef": "HTMLElement",
            "statusIndex": "number",
            "style": "string",
            "templatePath": "string",
            "templateString": "string",
            "title": "string",
            "tooltip": "string",
            "tooltipIndex": "number",
            "widgetsInTemplate": "bool",
            "addXYAxes": "fn(chart: dojox.charting.Chart2D) -> ?",
            "buildRendering": "fn()",
            "changedColor": "fn()",
            "checkDirty": "fn()",
            "checkDirty1": "fn()",
            "connect": "fn(obj: Object, event: String, method: String) -> ?",
            "createFunction": "fn()",
            "defer": "fn(fcn: Function, delay: number) -> Object",
            "deselectAll": "fn()",
            "destroy": "fn(preserveDom?: bool)",
            "destroyDescendants": "fn(preserveDom: bool)",
            "destroyRecursive": "fn(preserveDom: bool)",
            "destroyRendering": "fn(preserveDom?: bool)",
            "disconnect": "fn(handle: ?)",
            "drawOne": "fn(i: ?)",
            "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
            "erase": "fn(i: number)",
            "getChildren": "fn() -> [?]",
            "getParent": "fn() -> ?",
            "isFocusable": "fn() -> ?",
            "isLeftToRight": "fn() -> ?",
            "makeDirty": "fn()",
            "on": "fn(type: String, func: Function) -> ?",
            "own": "fn() -> ?",
            "placeAt": "fn(reference: String, position: String) -> ?",
            "postCreate": "fn()",
            "postMixInProperties": "fn()",
            "selectAll": "fn()",
            "setStatus": "fn(i: number, status: String)",
            "startup": "fn()",
            "subscribe": "fn(t: String, method: Function) -> ?",
            "uninitialize": "fn() -> bool",
            "unsubscribe": "fn(handle: Object)",
            "getCachedTemplate": "fn() -> ?",
            "onBlur": "fn()",
            "onDelete": "fn()",
            "onDraw": "fn()",
            "onErase": "fn()",
            "onFocus": "fn()"
          }
        },
        "pow": "fn(base: ?, exponent: ?) -> ?",
        "toFrac": "fn(number: ?) -> ?",
        "_Executor": {
          "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
          "prototype": {
            "attachScope": "Object",
            "set": "fn(property: string, value: Object)",
            "get": "fn(property: string) -> Object",
            "watch": "fn(property: string, callback: ?) -> ret281",
            "attributeMap": "Object",
            "baseClass": "string",
            "class": "string",
            "containerNode": "HTMLElement",
            "dir": "string",
            "domNode": "HTMLElement",
            "focused": "bool",
            "id": "string",
            "lang": "string",
            "ownerDocument": "Object",
            "searchContainerNode": "bool",
            "srcNodeRef": "HTMLElement",
            "style": "string",
            "templatePath": "string",
            "templateString": "string",
            "title": "string",
            "tooltip": "string",
            "buildRendering": "fn()",
            "connect": "fn(obj: Object, event: String, method: String) -> ?",
            "defer": "fn(fcn: Function, delay: number) -> Object",
            "deleteFunction": "fn(name: ?)",
            "destroy": "fn()",
            "destroyDescendants": "fn(preserveDom: bool)",
            "destroyRecursive": "fn(preserveDom: bool)",
            "destroyRendering": "fn(preserveDom?: bool)",
            "disconnect": "fn(handle: ?)",
            "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
            "eval": "fn(text: String) -> ?",
            "Function": "fn(name: ?, args: String, body: String) -> ?",
            "getChildren": "fn() -> [?]",
            "getParent": "fn() -> ?",
            "isFocusable": "fn() -> ?",
            "isLeftToRight": "fn() -> ?",
            "normalizedFunction": "fn(name: ?, args: ?, body: ?) -> ?",
            "on": "fn(type: String, func: Function) -> ?",
            "own": "fn() -> ?",
            "placeAt": "fn(reference: String, position: String) -> ?",
            "postCreate": "fn()",
            "postMixInProperties": "fn()",
            "startup": "fn()",
            "subscribe": "fn(t: String, method: Function) -> ?",
            "uninitialize": "fn() -> bool",
            "unsubscribe": "fn(handle: Object)",
            "getCachedTemplate": "fn() -> ?",
            "onBlur": "fn()",
            "onFocus": "fn()",
            "onLoad": "fn()"
          }
        }
      }
    }
  },
  "dojox/calc/_Executor": "exp",
  "dojox/calc/_Executor._Executor": "exp",
  "dojox/calc/_Executor.FuncGen": "exp",
  "dojox/calc/_Executor.Grapher": "exp",
  "dojox/calc/FuncGen": "exp",
  "dojox/calc/FuncGen._Executor": "exp",
  "dojox/calc/FuncGen.FuncGen": "exp",
  "dojox/calc/FuncGen.Grapher": "exp",
  "dojox/calc/Grapher": "exp",
  "dojox/calc/Grapher._Executor": "exp",
  "dojox/calc/Grapher.FuncGen": "exp",
  "dojox/calc/Grapher.Grapher": "exp",
  "dojox/calc/toFrac": "exp",
  "dojox/calc/toFrac._Executor": "exp",
  "dojox/calc/toFrac.FuncGen": "exp",
  "dojox/calc/toFrac.Grapher": "exp",
  "dojox/calc/GraphPro": "exp",
  "dojox/calc/Standard": "exp",
  "!name": "dojox.calc.d.ts",
  "!define": {
    "ret": {
      "unwatch": "fn()"
    },
    "ret1": {
      "unwatch": "fn()"
    },
    "ret2": {
      "unwatch": "fn()"
    },
    "ret3": {
      "unwatch": "fn()"
    },
    "ret4": {
      "unwatch": "fn()"
    },
    "ret5": {
      "unwatch": "fn()"
    },
    "ret6": {
      "unwatch": "fn()"
    },
    "ret7": {
      "unwatch": "fn()"
    },
    "ret8": {
      "unwatch": "fn()"
    },
    "ret9": {
      "unwatch": "fn()"
    },
    "ret10": {
      "unwatch": "fn()"
    },
    "ret11": {
      "unwatch": "fn()"
    },
    "ret12": {
      "unwatch": "fn()"
    },
    "ret13": {
      "unwatch": "fn()"
    },
    "ret14": {
      "unwatch": "fn()"
    },
    "ret15": {
      "unwatch": "fn()"
    },
    "ret16": {
      "unwatch": "fn()"
    },
    "ret17": {
      "unwatch": "fn()"
    },
    "ret18": {
      "unwatch": "fn()"
    },
    "ret19": {
      "unwatch": "fn()"
    },
    "ret20": {
      "unwatch": "fn()"
    },
    "ret21": {
      "unwatch": "fn()"
    },
    "ret22": {
      "unwatch": "fn()"
    },
    "ret23": {
      "unwatch": "fn()"
    },
    "ret24": {
      "unwatch": "fn()"
    },
    "ret25": {
      "unwatch": "fn()"
    },
    "ret26": {
      "unwatch": "fn()"
    },
    "ret27": {
      "unwatch": "fn()"
    },
    "ret28": {
      "unwatch": "fn()"
    },
    "ret29": {
      "unwatch": "fn()"
    },
    "ret30": {
      "unwatch": "fn()"
    },
    "ret31": {
      "unwatch": "fn()"
    },
    "ret32": {
      "unwatch": "fn()"
    },
    "ret33": {
      "unwatch": "fn()"
    },
    "ret34": {
      "unwatch": "fn()"
    },
    "ret35": {
      "unwatch": "fn()"
    },
    "ret36": {
      "unwatch": "fn()"
    },
    "ret37": {
      "unwatch": "fn()"
    },
    "ret38": {
      "unwatch": "fn()"
    },
    "ret39": {
      "unwatch": "fn()"
    },
    "ret40": {
      "unwatch": "fn()"
    },
    "ret41": {
      "unwatch": "fn()"
    },
    "ret42": {
      "unwatch": "fn()"
    },
    "ret43": {
      "unwatch": "fn()"
    },
    "ret44": {
      "unwatch": "fn()"
    },
    "ret45": {
      "unwatch": "fn()"
    },
    "ret46": {
      "unwatch": "fn()"
    },
    "ret47": {
      "unwatch": "fn()"
    },
    "ret48": {
      "unwatch": "fn()"
    },
    "ret49": {
      "unwatch": "fn()"
    },
    "ret50": {
      "unwatch": "fn()"
    },
    "ret51": {
      "unwatch": "fn()"
    },
    "ret52": {
      "unwatch": "fn()"
    },
    "ret53": {
      "unwatch": "fn()"
    },
    "ret54": {
      "unwatch": "fn()"
    },
    "ret55": {
      "unwatch": "fn()"
    },
    "ret56": {
      "unwatch": "fn()"
    },
    "ret57": {
      "unwatch": "fn()"
    },
    "ret58": {
      "unwatch": "fn()"
    },
    "ret59": {
      "unwatch": "fn()"
    },
    "ret60": {
      "unwatch": "fn()"
    },
    "ret61": {
      "unwatch": "fn()"
    },
    "ret62": {
      "unwatch": "fn()"
    },
    "ret63": {
      "unwatch": "fn()"
    },
    "ret64": {
      "unwatch": "fn()"
    },
    "ret65": {
      "unwatch": "fn()"
    },
    "ret66": {
      "unwatch": "fn()"
    },
    "ret67": {
      "unwatch": "fn()"
    },
    "ret68": {
      "unwatch": "fn()"
    },
    "ret69": {
      "unwatch": "fn()"
    },
    "ret70": {
      "unwatch": "fn()"
    },
    "ret71": {
      "unwatch": "fn()"
    },
    "ret72": {
      "unwatch": "fn()"
    },
    "ret73": {
      "unwatch": "fn()"
    },
    "ret74": {
      "unwatch": "fn()"
    },
    "ret75": {
      "unwatch": "fn()"
    },
    "ret76": {
      "unwatch": "fn()"
    },
    "ret77": {
      "unwatch": "fn()"
    },
    "ret78": {
      "unwatch": "fn()"
    },
    "ret79": {
      "unwatch": "fn()"
    },
    "ret80": {
      "unwatch": "fn()"
    },
    "ret81": {
      "unwatch": "fn()"
    },
    "ret82": {
      "unwatch": "fn()"
    },
    "ret83": {
      "unwatch": "fn()"
    },
    "ret84": {
      "unwatch": "fn()"
    },
    "ret85": {
      "unwatch": "fn()"
    },
    "ret86": {
      "unwatch": "fn()"
    },
    "ret87": {
      "unwatch": "fn()"
    },
    "ret88": {
      "unwatch": "fn()"
    },
    "ret89": {
      "unwatch": "fn()"
    },
    "ret90": {
      "unwatch": "fn()"
    },
    "ret91": {
      "unwatch": "fn()"
    },
    "ret92": {
      "unwatch": "fn()"
    },
    "ret93": {
      "unwatch": "fn()"
    },
    "ret94": {
      "unwatch": "fn()"
    },
    "ret95": {
      "unwatch": "fn()"
    },
    "ret96": {
      "unwatch": "fn()"
    },
    "ret97": {
      "unwatch": "fn()"
    },
    "ret98": {
      "unwatch": "fn()"
    },
    "ret99": {
      "unwatch": "fn()"
    },
    "ret100": {
      "unwatch": "fn()"
    },
    "ret101": {
      "unwatch": "fn()"
    },
    "ret102": {
      "unwatch": "fn()"
    },
    "ret103": {
      "unwatch": "fn()"
    },
    "ret104": {
      "unwatch": "fn()"
    },
    "ret105": {
      "unwatch": "fn()"
    },
    "ret106": {
      "unwatch": "fn()"
    },
    "ret107": {
      "unwatch": "fn()"
    },
    "ret108": {
      "unwatch": "fn()"
    },
    "ret109": {
      "unwatch": "fn()"
    },
    "ret110": {
      "unwatch": "fn()"
    },
    "ret111": {
      "unwatch": "fn()"
    },
    "ret112": {
      "unwatch": "fn()"
    },
    "ret113": {
      "unwatch": "fn()"
    },
    "ret114": {
      "unwatch": "fn()"
    },
    "ret115": {
      "unwatch": "fn()"
    },
    "ret116": {
      "unwatch": "fn()"
    },
    "ret117": {
      "unwatch": "fn()"
    },
    "ret118": {
      "unwatch": "fn()"
    },
    "ret119": {
      "unwatch": "fn()"
    },
    "ret120": {
      "unwatch": "fn()"
    },
    "ret121": {
      "unwatch": "fn()"
    },
    "ret122": {
      "unwatch": "fn()"
    },
    "ret123": {
      "unwatch": "fn()"
    },
    "ret124": {
      "unwatch": "fn()"
    },
    "ret125": {
      "unwatch": "fn()"
    },
    "ret126": {
      "unwatch": "fn()"
    },
    "ret127": {
      "unwatch": "fn()"
    },
    "ret128": {
      "unwatch": "fn()"
    },
    "ret129": {
      "unwatch": "fn()"
    },
    "ret130": {
      "unwatch": "fn()"
    },
    "ret131": {
      "unwatch": "fn()"
    },
    "ret132": {
      "unwatch": "fn()"
    },
    "ret133": {
      "unwatch": "fn()"
    },
    "ret134": {
      "unwatch": "fn()"
    },
    "ret135": {
      "unwatch": "fn()"
    },
    "ret136": {
      "unwatch": "fn()"
    },
    "ret137": {
      "unwatch": "fn()"
    },
    "ret138": {
      "unwatch": "fn()"
    },
    "ret139": {
      "unwatch": "fn()"
    },
    "ret140": {
      "unwatch": "fn()"
    },
    "ret141": {
      "unwatch": "fn()"
    },
    "ret142": {
      "unwatch": "fn()"
    },
    "ret143": {
      "unwatch": "fn()"
    },
    "ret144": {
      "unwatch": "fn()"
    },
    "ret145": {
      "unwatch": "fn()"
    },
    "ret146": {
      "unwatch": "fn()"
    },
    "ret147": {
      "unwatch": "fn()"
    },
    "ret148": {
      "unwatch": "fn()"
    },
    "ret149": {
      "unwatch": "fn()"
    },
    "ret150": {
      "unwatch": "fn()"
    },
    "ret151": {
      "unwatch": "fn()"
    },
    "ret152": {
      "unwatch": "fn()"
    },
    "ret153": {
      "unwatch": "fn()"
    },
    "ret154": {
      "unwatch": "fn()"
    },
    "ret155": {
      "unwatch": "fn()"
    },
    "ret156": {
      "unwatch": "fn()"
    },
    "ret157": {
      "unwatch": "fn()"
    },
    "ret158": {
      "unwatch": "fn()"
    },
    "ret159": {
      "unwatch": "fn()"
    },
    "ret160": {
      "unwatch": "fn()"
    },
    "ret161": {
      "unwatch": "fn()"
    },
    "ret162": {
      "unwatch": "fn()"
    },
    "ret163": {
      "unwatch": "fn()"
    },
    "ret164": {
      "unwatch": "fn()"
    },
    "ret165": {
      "unwatch": "fn()"
    },
    "ret166": {
      "unwatch": "fn()"
    },
    "ret167": {
      "unwatch": "fn()"
    },
    "ret168": {
      "unwatch": "fn()"
    },
    "ret169": {
      "unwatch": "fn()"
    },
    "ret170": {
      "unwatch": "fn()"
    },
    "ret171": {
      "unwatch": "fn()"
    },
    "ret172": {
      "unwatch": "fn()"
    },
    "ret173": {
      "unwatch": "fn()"
    },
    "ret174": {
      "unwatch": "fn()"
    },
    "ret175": {
      "unwatch": "fn()"
    },
    "ret176": {
      "unwatch": "fn()"
    },
    "ret177": {
      "unwatch": "fn()"
    },
    "ret178": {
      "unwatch": "fn()"
    },
    "ret179": {
      "unwatch": "fn()"
    },
    "ret180": {
      "unwatch": "fn()"
    },
    "ret181": {
      "unwatch": "fn()"
    },
    "ret182": {
      "unwatch": "fn()"
    },
    "ret183": {
      "unwatch": "fn()"
    },
    "ret184": {
      "unwatch": "fn()"
    },
    "ret185": {
      "unwatch": "fn()"
    },
    "ret186": {
      "unwatch": "fn()"
    },
    "ret187": {
      "unwatch": "fn()"
    },
    "ret188": {
      "unwatch": "fn()"
    },
    "ret189": {
      "unwatch": "fn()"
    },
    "ret190": {
      "unwatch": "fn()"
    },
    "ret191": {
      "unwatch": "fn()"
    },
    "ret192": {
      "unwatch": "fn()"
    },
    "ret193": {
      "unwatch": "fn()"
    },
    "ret194": {
      "unwatch": "fn()"
    },
    "ret195": {
      "unwatch": "fn()"
    },
    "ret196": {
      "unwatch": "fn()"
    },
    "ret197": {
      "unwatch": "fn()"
    },
    "ret198": {
      "unwatch": "fn()"
    },
    "ret199": {
      "unwatch": "fn()"
    },
    "ret200": {
      "unwatch": "fn()"
    },
    "ret201": {
      "unwatch": "fn()"
    },
    "ret202": {
      "unwatch": "fn()"
    },
    "ret203": {
      "unwatch": "fn()"
    },
    "ret204": {
      "unwatch": "fn()"
    },
    "ret205": {
      "unwatch": "fn()"
    },
    "ret206": {
      "unwatch": "fn()"
    },
    "ret207": {
      "unwatch": "fn()"
    },
    "ret208": {
      "unwatch": "fn()"
    },
    "ret209": {
      "unwatch": "fn()"
    },
    "ret210": {
      "unwatch": "fn()"
    },
    "ret211": {
      "unwatch": "fn()"
    },
    "ret212": {
      "unwatch": "fn()"
    },
    "ret213": {
      "unwatch": "fn()"
    },
    "ret214": {
      "unwatch": "fn()"
    },
    "ret215": {
      "unwatch": "fn()"
    },
    "ret216": {
      "unwatch": "fn()"
    },
    "ret217": {
      "unwatch": "fn()"
    },
    "ret218": {
      "unwatch": "fn()"
    },
    "ret219": {
      "unwatch": "fn()"
    },
    "ret220": {
      "unwatch": "fn()"
    },
    "ret221": {
      "unwatch": "fn()"
    },
    "ret222": {
      "unwatch": "fn()"
    },
    "ret223": {
      "unwatch": "fn()"
    },
    "ret224": {
      "unwatch": "fn()"
    },
    "ret225": {
      "unwatch": "fn()"
    },
    "ret226": {
      "unwatch": "fn()"
    },
    "ret227": {
      "unwatch": "fn()"
    },
    "ret228": {
      "unwatch": "fn()"
    },
    "ret229": {
      "unwatch": "fn()"
    },
    "ret230": {
      "unwatch": "fn()"
    },
    "ret231": {
      "unwatch": "fn()"
    },
    "ret232": {
      "unwatch": "fn()"
    },
    "ret233": {
      "unwatch": "fn()"
    },
    "ret234": {
      "unwatch": "fn()"
    },
    "ret235": {
      "unwatch": "fn()"
    },
    "ret236": {
      "unwatch": "fn()"
    },
    "ret237": {
      "unwatch": "fn()"
    },
    "ret238": {
      "unwatch": "fn()"
    },
    "ret239": {
      "unwatch": "fn()"
    },
    "ret240": {
      "unwatch": "fn()"
    },
    "ret241": {
      "unwatch": "fn()"
    },
    "ret242": {
      "unwatch": "fn()"
    },
    "ret243": {
      "unwatch": "fn()"
    },
    "ret244": {
      "unwatch": "fn()"
    },
    "ret245": {
      "unwatch": "fn()"
    },
    "ret246": {
      "unwatch": "fn()"
    },
    "ret247": {
      "unwatch": "fn()"
    },
    "ret248": {
      "unwatch": "fn()"
    },
    "ret249": {
      "unwatch": "fn()"
    },
    "ret250": {
      "unwatch": "fn()"
    },
    "ret251": {
      "unwatch": "fn()"
    },
    "ret252": {
      "unwatch": "fn()"
    },
    "ret253": {
      "unwatch": "fn()"
    },
    "ret254": {
      "unwatch": "fn()"
    },
    "ret255": {
      "unwatch": "fn()"
    },
    "ret256": {
      "unwatch": "fn()"
    },
    "ret257": {
      "unwatch": "fn()"
    },
    "ret258": {
      "unwatch": "fn()"
    },
    "ret259": {
      "unwatch": "fn()"
    },
    "ret260": {
      "unwatch": "fn()"
    },
    "ret261": {
      "unwatch": "fn()"
    },
    "ret262": {
      "unwatch": "fn()"
    },
    "ret263": {
      "unwatch": "fn()"
    },
    "ret264": {
      "unwatch": "fn()"
    },
    "ret265": {
      "unwatch": "fn()"
    },
    "ret266": {
      "unwatch": "fn()"
    },
    "ret267": {
      "unwatch": "fn()"
    },
    "ret268": {
      "unwatch": "fn()"
    },
    "ret269": {
      "unwatch": "fn()"
    },
    "ret270": {
      "unwatch": "fn()"
    },
    "ret271": {
      "unwatch": "fn()"
    },
    "ret272": {
      "unwatch": "fn()"
    },
    "ret273": {
      "unwatch": "fn()"
    },
    "ret274": {
      "unwatch": "fn()"
    },
    "ret275": {
      "unwatch": "fn()"
    },
    "ret276": {
      "unwatch": "fn()"
    },
    "ret277": {
      "unwatch": "fn()"
    },
    "ret278": {
      "unwatch": "fn()"
    },
    "ret279": {
      "unwatch": "fn()"
    },
    "ret280": {
      "unwatch": "fn()"
    },
    "ret281": {
      "unwatch": "fn()"
    },
    "ret282": {
      "unwatch": "fn()"
    },
    "ret283": {
      "unwatch": "fn()"
    },
    "ret284": {
      "unwatch": "fn()"
    },
    "ret285": {
      "unwatch": "fn()"
    },
    "ret286": {
      "unwatch": "fn()"
    },
    "ret287": {
      "unwatch": "fn()"
    },
    "ret288": {
      "unwatch": "fn()"
    },
    "ret289": {
      "unwatch": "fn()"
    },
    "ret290": {
      "unwatch": "fn()"
    },
    "ret291": {
      "unwatch": "fn()"
    },
    "ret292": {
      "unwatch": "fn()"
    },
    "ret293": {
      "unwatch": "fn()"
    },
    "ret294": {
      "unwatch": "fn()"
    },
    "ret295": {
      "unwatch": "fn()"
    },
    "ret296": {
      "unwatch": "fn()"
    },
    "ret297": {
      "unwatch": "fn()"
    },
    "ret298": {
      "unwatch": "fn()"
    },
    "ret299": {
      "unwatch": "fn()"
    },
    "ret300": {
      "unwatch": "fn()"
    },
    "ret301": {
      "unwatch": "fn()"
    },
    "ret302": {
      "unwatch": "fn()"
    },
    "ret303": {
      "unwatch": "fn()"
    },
    "ret304": {
      "unwatch": "fn()"
    },
    "ret305": {
      "unwatch": "fn()"
    },
    "ret306": {
      "unwatch": "fn()"
    },
    "ret307": {
      "unwatch": "fn()"
    },
    "ret308": {
      "unwatch": "fn()"
    },
    "ret309": {
      "unwatch": "fn()"
    },
    "ret310": {
      "unwatch": "fn()"
    },
    "ret311": {
      "unwatch": "fn()"
    },
    "ret312": {
      "unwatch": "fn()"
    },
    "ret313": {
      "unwatch": "fn()"
    },
    "ret314": {
      "unwatch": "fn()"
    },
    "ret315": {
      "unwatch": "fn()"
    },
    "ret316": {
      "unwatch": "fn()"
    },
    "ret317": {
      "unwatch": "fn()"
    },
    "ret318": {
      "unwatch": "fn()"
    },
    "ret319": {
      "unwatch": "fn()"
    },
    "ret320": {
      "unwatch": "fn()"
    },
    "ret321": {
      "unwatch": "fn()"
    },
    "ret322": {
      "unwatch": "fn()"
    },
    "ret323": {
      "unwatch": "fn()"
    },
    "ret324": {
      "unwatch": "fn()"
    },
    "ret325": {
      "unwatch": "fn()"
    },
    "ret326": {
      "unwatch": "fn()"
    },
    "ret327": {
      "unwatch": "fn()"
    },
    "ret328": {
      "unwatch": "fn()"
    },
    "ret329": {
      "unwatch": "fn()"
    },
    "ret330": {
      "unwatch": "fn()"
    },
    "ret331": {
      "unwatch": "fn()"
    },
    "ret332": {
      "unwatch": "fn()"
    },
    "ret333": {
      "unwatch": "fn()"
    },
    "ret334": {
      "unwatch": "fn()"
    },
    "ret335": {
      "unwatch": "fn()"
    },
    "ret336": {
      "unwatch": "fn()"
    },
    "ret337": {
      "unwatch": "fn()"
    },
    "ret338": {
      "unwatch": "fn()"
    },
    "ret339": {
      "unwatch": "fn()"
    },
    "ret340": {
      "unwatch": "fn()"
    },
    "ret341": {
      "unwatch": "fn()"
    },
    "ret342": {
      "unwatch": "fn()"
    },
    "ret343": {
      "unwatch": "fn()"
    },
    "ret344": {
      "unwatch": "fn()"
    },
    "ret345": {
      "unwatch": "fn()"
    },
    "ret346": {
      "unwatch": "fn()"
    },
    "ret347": {
      "unwatch": "fn()"
    },
    "ret348": {
      "unwatch": "fn()"
    },
    "ret349": {
      "unwatch": "fn()"
    },
    "ret350": {
      "unwatch": "fn()"
    },
    "ret351": {
      "unwatch": "fn()"
    },
    "ret352": {
      "unwatch": "fn()"
    },
    "ret353": {
      "unwatch": "fn()"
    },
    "ret354": {
      "unwatch": "fn()"
    },
    "ret355": {
      "unwatch": "fn()"
    },
    "ret356": {
      "unwatch": "fn()"
    }
  }
}
