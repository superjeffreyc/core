{
  "ChocolateChipStatic": {
    "concat": "fn(string: [string]) -> string",
    "forEach": "fn(obj: ?, callback: Function, args?: ?) -> ?",
    "eventStart": "ChUIEventInterface",
    "eventEnd": "ChUIEventInterface",
    "eventMove": "ChUIEventInterface",
    "eventCancel": "ChUIEventInterface",
    "isIEEdge": "bool",
    "isWideScreen": "bool",
    "isWideScreenPortrait": "bool",
    "browserVersion": "fn() -> number",
    "UIHideNavBar": "fn()",
    "UIShowNavBar": "fn()",
    "isNavigating": "bool",
    "UIBrowserHashModification": "bool",
    "UIEnableBrowserHashModification": "fn()",
    "UIGoToArticle": "fn(destination: string)",
    "UIGoBack": "fn()",
    "UIGoBackToArticle": "fn(articleID: string)",
    "UIBlock": "fn(opacity?: number)",
    "UIUnblock": "fn()",
    "UIPopup": "fn(options?: ?)",
    "UIPopover": "fn(options?: ?)",
    "UIPopoverClose": "fn()",
    "UICreateSegmented": "fn(options?: ?) -> ChocolateChipElementArray",
    "UIPaging": "fn()",
    "UISheet": "fn(options: ?)",
    "UIShowSheet": "fn(id: string)",
    "UIHideSheet": "fn()",
    "body": "ChocolateChipElementArray",
    "UINavigationHistory": "[string]",
    "UISlideout": {
      "populate": "fn(array: [Object])"
    },
    "UIResetStepper": "fn(stepper: [HTMLElement])",
    "UICreateSwitch": "fn(options?: ?)",
    "UITabbar": "fn(options?: ?)",
    "UISearch": "fn(options?: ?)",
    "UISetupCarousel": "fn(options: ?)",
    "UIBindData": "fn(controller?: string)",
    "UIUnBindData": "fn(controller?: string)"
  },
  "ChocolateChipElementArray": {
    "forEach": "fn(func: fn(ctx: ?, idx: number))",
    "iz": "fn(selector: string) -> ChocolateChipElementArray",
    "iznt": "fn(selector: string) -> ChocolateChipElementArray",
    "haz": "fn(selector: string) -> ChocolateChipElementArray",
    "haznt": "fn(selector: string) -> ChocolateChipElementArray",
    "hazClass": "fn(className: string) -> ChocolateChipElementArray",
    "hazntClass": "fn(className: string) -> ChocolateChipElementArray",
    "hazAttr": "fn(attributeName: string) -> ChocolateChipElementArray",
    "hazntAttr": "fn(attributeName: string) -> ChocolateChipElementArray",
    "bind": "fn(eventType: string, ChUIEventInterface: ?, handler: fn(eventObject: Event), useCapture?: bool) -> ChocolateChipStatic",
    "unbind": "fn(eventType: string, ChUIEventInterface: ?, handler: fn(eventObject: Event), useCapture?: bool) -> ChocolateChipStatic",
    "delegate": "fn(selector: ?, eventType: string, ChUIEventInterface: ?, handler: fn(eventObject: Event), useCapture?: bool) -> ChocolateChipStatic",
    "undelegate": "fn(selector: ?, eventType: string, ChUIEventInterface: ?, handler: fn(eventObject: Event), useCapture?: bool) -> ChocolateChipStatic",
    "on": "fn(eventType: string, ChUIEventInterface: ?, selector: ?, handler?: fn(eventObject: Event), capturePhase?: bool) -> ChocolateChipStatic",
    "off": "fn(eventType?: string, ChUIEventInterface: ?, selector?: ?, handler?: fn(eventObject: Event), capturePhase?: bool) -> ChocolateChipStatic",
    "trigger": "fn(eventType: string, ChUIEventInterface: ?)",
    "UICenter": "fn()",
    "UIBusy": "fn(options?: ?)",
    "UIPopupClose": "fn()",
    "UISegmented": "fn(options?: ?)",
    "UIPanelToggle": "fn(panelsContainer: string, callback: fn())",
    "UIEditList": "fn(options?: ?)",
    "UISelectList": "fn(options?: ?)",
    "UIStepper": "fn(options: ?)",
    "UISwitch": "fn()",
    "UIRange": "fn()"
  },
  "JQueryStatic": {
    "concat": "fn(string: [string]) -> string",
    "forEach": "fn(obj: ?, callback: Function, args?: ?) -> ?",
    "eventStart": "ChUIEventInterface",
    "eventEnd": "ChUIEventInterface",
    "eventMove": "ChUIEventInterface",
    "eventCancel": "ChUIEventInterface",
    "isiPhone": "bool",
    "isiPad": "bool",
    "isiPod": "bool",
    "isiOS": "bool",
    "isAndroid": "bool",
    "isWebOS": "bool",
    "isBlackberry": "bool",
    "isTouchEnabled": "bool",
    "isOnline": "bool",
    "isStandalone": "bool",
    "isiOS6": "bool",
    "isiOS7": "bool",
    "isWin": "bool",
    "isWinPhone": "bool",
    "isIE10": "bool",
    "isIE11": "bool",
    "isIEEdge": "bool",
    "isWebkit": "bool",
    "isMobile": "bool",
    "isDesktop": "bool",
    "isSafari": "bool",
    "isChrome": "bool",
    "isNativeAndroid": "bool",
    "isWideScreen": "bool",
    "isWideScreenPortrait": "bool",
    "browserVersion": "fn() -> number",
    "UIHideNavBar": "fn()",
    "UIShowNavBar": "fn()",
    "isNavigating": "bool",
    "UIBrowserHashModification": "bool",
    "UIEnableBrowserHashModification": "fn()",
    "UIGoToArticle": "fn(destination: string)",
    "UIGoBack": "fn()",
    "UIGoBackToArticle": "fn(articleID: string)",
    "UIBlock": "fn(opacity?: number)",
    "UIUnblock": "fn()",
    "UIPopup": "fn(options?: ?)",
    "UIPopover": "fn(options?: ?)",
    "UIPopoverClose": "fn()",
    "UICreateSegmented": "fn(options: ?) -> JQuery",
    "UIPaging": "fn()",
    "UISheet": "fn(options: ?)",
    "UIShowSheet": "fn(id: string)",
    "UIHideSheet": "fn()",
    "body": "JQuery",
    "UINavigationHistory": "[string]",
    "UISlideout": {
      "populate": "fn(array: [Object])"
    },
    "UIResetStepper": "fn(stepper: JQuery)",
    "UICreateSwitch": "fn(options?: ?)",
    "UITabbar": "fn(options?: ?)",
    "UISearch": "fn(options?: ?)",
    "UISetupCarousel": "fn(options: ?)",
    "UIBindData": "fn(controller?: string)",
    "UIUnBindData": "fn(controller?: string)",
    "templates": "Object",
    "template": {
      "repeater": "fn(element: JQuery, template: string, data: ?)",
      "data": {
        "repeaterName": "?"
      },
      "index": "number"
    }
  },
  "JQuery": {
    "forEach": "fn(callback: fn(ctx: HTMLElement, idx: number)) -> JQuery",
    "iz": "fn(selector: string) -> JQuery",
    "iznt": "fn(selector: string) -> JQuery",
    "haz": "fn(selector: string) -> JQuery",
    "haznt": "fn(selector: string) -> JQuery",
    "hazClass": "fn(className: string) -> JQuery",
    "hazntClass": "fn(className: string) -> JQuery",
    "hazAttr": "fn(attributeName: string) -> JQuery",
    "hazntAttr": "fn(attributeName: string) -> JQuery",
    "UICenter": "fn()",
    "UIBusy": "fn(options?: ?)",
    "UIPopupClose": "fn()",
    "UISegmented": "fn(options?: ?)",
    "UIPanelToggle": "fn(panelsContainer: string, callback: fn())",
    "UIEditList": "fn(options?: ?)",
    "UISelectList": "fn(options?: ?)",
    "UIStepper": "fn(options: ?)",
    "UISwitch": "fn()",
    "UIRange": "fn()",
    "bind": "fn(eventType: string, ChUIEventInterface: ?, eventData: ?, handler: fn(eventObject: JQueryEventObject)) -> JQuery",
    "delegate": "fn(selector: ?, eventType: string, ChUIEventInterface: ?, handler: fn(eventObject: JQueryEventObject)) -> JQuery",
    "off": "fn(events: string, ChUIEventInterface: ?, selector?: string, handler?: fn(eventObject: JQueryEventObject)) -> JQuery",
    "on": "fn(events: string, ChUIEventInterface: ?, handler: fn(eventObject: JQueryEventObject, args: [?])) -> JQuery",
    "one": "fn(events: string, ChUIEventInterface: ?, handler: fn(eventObject: JQueryEventObject)) -> JQuery",
    "trigger": "fn(eventType: string, ChUIEventInterface: ?, extraParameters?: [?], Object: ?) -> JQuery",
    "triggerHandler": "fn(eventType: string, ChUIEventInterface: ?, extraParameters: [?]) -> Object",
    "unbind": "fn(eventType?: string, ChUIEventInterface: ?, handler?: fn(eventObject: JQueryEventObject)) -> JQuery",
    "undelegate": "fn(selector: string, ChUIEventInterface: ?, eventType: string, handler?: fn(eventObject: JQueryEventObject)) -> JQuery"
  },
  "ChUIEventInterface": {
    "eventStart": "string",
    "eventEnd": "string",
    "eventMove": "string",
    "eventCancel": "string",
    "tap": "string",
    "singletap": "string",
    "doubletap": "string",
    "longtap": "string",
    "swipe": "string",
    "swipeleft": "string",
    "swiperight": "string",
    "swipeup": "string",
    "swipedown": "string"
  },
  "JQueryEventConstructor": {},
  "JQueryEventInterface": {
    "Event": "JQueryEventConstructor"
  },
  "BaseJQueryEventObject": {},
  "JQueryEventObject": {},
  "JQueryInputEventObject": {},
  "JQueryMouseEventObject": {},
  "JQueryKeyEventObject": {},
  "!name": "chui"
}
