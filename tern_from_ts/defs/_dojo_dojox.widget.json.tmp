{
  "dojox": {
    "widget": {
      "_CalendarDay": {
        "!type": "fn()",
        "prototype": {
          "parent": "Object"
        }
      },
      "_CalendarBase": {
        "!type": "fn()",
        "prototype": {
          "attachScope": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "constraints": "Object",
          "containerNode": "HTMLElement",
          "contextRequire": "Function",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "footerFormat": "string",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "useFx": "bool",
          "value": "Date",
          "widgetsInTemplate": "bool",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "addFx": "fn(query: ?, fromNode: ?)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getClassForDate": "fn(dateObject: Date, locale: String) -> String",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getParent": "fn() -> ?",
          "goToToday": "fn()",
          "hasChildren": "fn() -> bool",
          "isDisabledDate": "fn(date: Date, locale: String) -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "parseInitialValue": "fn(value: ?) -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn(date: Date)",
          "onFocus": "fn()",
          "onHeaderClick": "fn(e: ?)",
          "onValueSelected": "fn(date: Date)"
        }
      },
      "_CalendarMonth": {
        "!type": "fn()",
        "prototype": {}
      },
      "_CalendarDayView": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attachScope": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret25",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "datePart": "string",
          "dayWidth": "string",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "headerClass": "string",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "useHeader": "bool",
          "adjustDate": "fn(date: ?, amount: ?) -> ?",
          "buildRendering": "fn()",
          "cloneClass": "fn(clazz: ?, n: ?, before: ?)",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getHeader": "fn() -> ?",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBeforeDisplay": "fn()",
          "onBeforeUnDisplay": "fn()",
          "onBlur": "fn()",
          "onDisplay": "fn()",
          "onFocus": "fn()",
          "onValueSelected": "fn(date: ?)"
        }
      },
      "_CalendarMonthYear": {
        "!type": "fn()",
        "prototype": {}
      },
      "_CalendarMonthView": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attachScope": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret48",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "datePart": "string",
          "dir": "string",
          "displayedYear": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "headerClass": "string",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "useHeader": "bool",
          "adjustDate": "fn(date: ?, amount: ?) -> ?",
          "buildRendering": "fn()",
          "cloneClass": "fn(clazz: ?, n: ?, before: ?)",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getHeader": "fn() -> ?",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBeforeDisplay": "fn()",
          "onBeforeUnDisplay": "fn()",
          "onBlur": "fn()",
          "onClick": "fn(evt: ?)",
          "onDisplay": "fn()",
          "onFocus": "fn()",
          "onValueSelected": "fn(date: ?)"
        }
      },
      "_CalendarMonthYearView": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attachScope": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret71",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "datePart": "string",
          "dir": "string",
          "displayedYears": "number",
          "domNode": "HTMLElement",
          "focused": "bool",
          "headerClass": "string",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "useHeader": "bool",
          "adjustDate": "fn(date: ?, amount: ?) -> ?",
          "buildRendering": "fn()",
          "cloneClass": "fn(clazz: ?, n: ?, before: ?)",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getHeader": "fn() -> ?",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBeforeDisplay": "fn()",
          "onBeforeUnDisplay": "fn()",
          "onBlur": "fn()",
          "onCancel": "fn(evt: ?) -> bool",
          "onClick": "fn(evt: ?) -> bool",
          "onDisplay": "fn()",
          "onFocus": "fn()",
          "onOk": "fn(evt: ?) -> bool",
          "onValueSelected": "fn(date: ?)"
        }
      },
      "_CalendarYear": {
        "!type": "fn()",
        "prototype": {
          "parent": "Object"
        }
      },
      "_CalendarView": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret94",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "headerClass": "string",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "useHeader": "bool",
          "adjustDate": "fn(date: ?, amount: ?) -> ?",
          "buildRendering": "fn()",
          "cloneClass": "fn(clazz: ?, n: ?, before: ?)",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getHeader": "fn() -> ?",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBeforeDisplay": "fn()",
          "onBeforeUnDisplay": "fn()",
          "onBlur": "fn()",
          "onDisplay": "fn()",
          "onFocus": "fn()",
          "onValueSelected": "fn(date: ?)"
        }
      },
      "_FisheyeFX": {
        "!type": "fn()",
        "prototype": {
          "addFx": "fn(theQuery: ?, fromNode: ?)"
        }
      },
      "_CalendarYearView": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attachScope": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret111",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "displayedYears": "number",
          "domNode": "HTMLElement",
          "focused": "bool",
          "headerClass": "string",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "useHeader": "bool",
          "adjustDate": "fn(date: ?, amount: ?) -> ?",
          "buildRendering": "fn()",
          "cloneClass": "fn(clazz: ?, n: ?, before: ?)",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getHeader": "fn() -> ?",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBeforeDisplay": "fn()",
          "onBeforeUnDisplay": "fn()",
          "onBlur": "fn()",
          "onClick": "fn(evt: ?)",
          "onDisplay": "fn()",
          "onFocus": "fn()",
          "onValueSelected": "fn(date: ?)"
        }
      },
      "AutoRotator": {
        "!type": "fn()",
        "prototype": {
          "autoStart": "bool",
          "cycles": "number",
          "duration": "number",
          "panes": "Object",
          "pauseOnManualChange": "bool",
          "random": "bool",
          "reverse": "bool",
          "suspendOnHover": "bool",
          "transition": "string",
          "transitionParams": "string",
          "control": "fn(action: String)",
          "destroy": "fn()",
          "go": "fn(p: number) -> ?",
          "next": "fn() -> ?",
          "pause": "fn()",
          "play": "fn(skipCycleDecrement: bool, skipDuration: bool)",
          "prev": "fn() -> ?",
          "resize": "fn(width: number, height: number)",
          "onManualChange": "fn(action?: String)",
          "onUpdate": "fn(type: String, params: Object)"
        }
      },
      "_Invalidating": {
        "!type": "fn()",
        "prototype": {
          "invalidatingProperties": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret133",
          "invalidRendering": "bool",
          "addInvalidatingProperties": "fn(properties: [String])",
          "invalidateRendering": "fn()",
          "postscript": "fn(mixin: ?)",
          "refreshRendering": "fn()",
          "validateRendering": "fn()"
        }
      },
      "Calendar2Pane": {
        "!type": "fn()",
        "prototype": {
          "attachScope": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret136",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "constraints": "Object",
          "containerNode": "HTMLElement",
          "contextRequire": "Function",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "footerFormat": "string",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "parent": "Object",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "useFx": "bool",
          "value": "Date",
          "widgetsInTemplate": "bool",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "addFx": "fn(query: ?, fromNode: ?)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getClassForDate": "fn(dateObject: Date, locale: String) -> String",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getParent": "fn() -> ?",
          "goToToday": "fn()",
          "hasChildren": "fn() -> bool",
          "isDisabledDate": "fn(date: Date, locale: String) -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "parseInitialValue": "fn(value: ?) -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn(date: Date)",
          "onFocus": "fn()",
          "onHeaderClick": "fn(e: ?)",
          "onValueSelected": "fn(date: Date)"
        }
      },
      "Calendar": {
        "!type": "fn()",
        "prototype": {
          "attachScope": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret162",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "constraints": "Object",
          "containerNode": "HTMLElement",
          "contextRequire": "Function",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "footerFormat": "string",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "parent": "Object",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "useFx": "bool",
          "value": "Date",
          "widgetsInTemplate": "bool",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "addFx": "fn(query: ?, fromNode: ?)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getClassForDate": "fn(dateObject: Date, locale: String) -> String",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getParent": "fn() -> ?",
          "goToToday": "fn()",
          "hasChildren": "fn() -> bool",
          "isDisabledDate": "fn(date: Date, locale: String) -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "parseInitialValue": "fn(value: ?) -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn(date: Date)",
          "onFocus": "fn()",
          "onHeaderClick": "fn(e: ?)",
          "onValueSelected": "fn(date: Date)"
        }
      },
      "Calendar3Pane": {
        "!type": "fn()",
        "prototype": {
          "attachScope": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret188",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "constraints": "Object",
          "containerNode": "HTMLElement",
          "contextRequire": "Function",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "footerFormat": "string",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "parent": "Object",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "useFx": "bool",
          "value": "Date",
          "widgetsInTemplate": "bool",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "addFx": "fn(query: ?, fromNode: ?)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getClassForDate": "fn(dateObject: Date, locale: String) -> String",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getParent": "fn() -> ?",
          "goToToday": "fn()",
          "hasChildren": "fn() -> bool",
          "isDisabledDate": "fn(date: Date, locale: String) -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "parseInitialValue": "fn(value: ?) -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn(date: Date)",
          "onFocus": "fn()",
          "onHeaderClick": "fn(e: ?)",
          "onValueSelected": "fn(date: Date)"
        }
      },
      "CalendarFisheye": {
        "!type": "fn()",
        "prototype": {
          "attachScope": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret214",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "constraints": "Object",
          "containerNode": "HTMLElement",
          "contextRequire": "Function",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "footerFormat": "string",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "parent": "Object",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "useFx": "bool",
          "value": "Date",
          "widgetsInTemplate": "bool",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "addFx": "fn(query: ?, fromNode: ?)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getClassForDate": "fn(dateObject: Date, locale: String) -> String",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getParent": "fn() -> ?",
          "goToToday": "fn()",
          "hasChildren": "fn() -> bool",
          "isDisabledDate": "fn(date: Date, locale: String) -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "parseInitialValue": "fn(value: ?) -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn(date: Date)",
          "onFocus": "fn()",
          "onHeaderClick": "fn(e: ?)",
          "onValueSelected": "fn(date: Date)"
        }
      },
      "CalendarFx": {
        "!type": "fn()",
        "prototype": {
          "attachScope": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret240",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "constraints": "Object",
          "containerNode": "HTMLElement",
          "contextRequire": "Function",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "footerFormat": "string",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "parent": "Object",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "useFx": "bool",
          "value": "Date",
          "widgetsInTemplate": "bool",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "addFx": "fn(query: ?, fromNode: ?)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getClassForDate": "fn(dateObject: Date, locale: String) -> String",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getParent": "fn() -> ?",
          "goToToday": "fn()",
          "hasChildren": "fn() -> bool",
          "isDisabledDate": "fn(date: Date, locale: String) -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "parseInitialValue": "fn(value: ?) -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn(date: Date)",
          "onFocus": "fn()",
          "onHeaderClick": "fn(e: ?)",
          "onValueSelected": "fn(date: Date)"
        }
      },
      "DailyCalendar": {
        "!type": "fn()",
        "prototype": {
          "attachScope": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret266",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "constraints": "Object",
          "containerNode": "HTMLElement",
          "contextRequire": "Function",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "footerFormat": "string",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "parent": "Object",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "useFx": "bool",
          "value": "Date",
          "widgetsInTemplate": "bool",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "addFx": "fn(query: ?, fromNode: ?)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getClassForDate": "fn(dateObject: Date, locale: String) -> String",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getParent": "fn() -> ?",
          "goToToday": "fn()",
          "hasChildren": "fn() -> bool",
          "isDisabledDate": "fn(date: Date, locale: String) -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "parseInitialValue": "fn(value: ?) -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn(date: Date)",
          "onFocus": "fn()",
          "onHeaderClick": "fn(e: ?)",
          "onValueSelected": "fn(date: Date)"
        }
      },
      "ColorPicker": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "active": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret292",
          "alt": "string",
          "animatePoint": "bool",
          "aria-label": "string",
          "attachScope": "Object",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "cssStateNodes": "Object",
          "dir": "string",
          "disabled": "bool",
          "domNode": "HTMLElement",
          "focused": "bool",
          "hovering": "bool",
          "id": "string",
          "intermediateChanges": "bool",
          "lang": "string",
          "liveUpdate": "bool",
          "name": "string",
          "ownerDocument": "Object",
          "PICKER_HUE_H": "number",
          "PICKER_HUE_SELECTOR_H": "number",
          "PICKER_SAT_SELECTOR_H": "number",
          "PICKER_SAT_SELECTOR_W": "number",
          "PICKER_SAT_VAL_H": "number",
          "PICKER_SAT_VAL_W": "number",
          "scrollOnFocus": "bool",
          "searchContainerNode": "bool",
          "showHex": "bool",
          "showHsv": "bool",
          "showRgb": "bool",
          "slideDuration": "number",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tabIndex": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "type": "string",
          "value": "string",
          "webSafe": "bool",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "compare": "fn(val1: ?, val2: ?) -> number",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn()",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "focus": "fn()",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "getValue": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "setAttribute": "fn(attr: String, value: ?)",
          "setColor": "fn(col: String, force: ?)",
          "setDisabled": "fn(disabled: bool)",
          "setValue": "fn(value: String)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onClick": "fn(event: ?)",
          "onClose": "fn() -> bool",
          "onDblClick": "fn(event: ?)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onShow": "fn()"
        }
      },
      "Dialog": {
        "!type": "fn(props: ?, node: ?)",
        "prototype": {
          "dimensions": "[?]",
          "draggable": "bool",
          "easing": "Object",
          "modal": "bool",
          "showTitle": "bool",
          "sizeDuration": "number",
          "sizeMethod": "string",
          "sizeToViewport": "bool",
          "templateString": "string",
          "viewportPadding": "number",
          "layout": "fn(e: ?)",
          "show": "fn()"
        }
      },
      "DialogSimple": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "active": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret336",
          "adjustPaths": "bool",
          "attachScope": "Object",
          "attributeMap": "Object",
          "autofocus": "bool",
          "baseClass": "string",
          "class": "string",
          "cleanContent": "bool",
          "closable": "bool",
          "containerNode": "HTMLElement",
          "content": "string",
          "cssStateNodes": "Object",
          "dir": "string",
          "doLayout": "bool",
          "domNode": "HTMLElement",
          "draggable": "bool",
          "duration": "number",
          "errorMessage": "string",
          "executeScripts": "bool",
          "extractContent": "bool",
          "focused": "bool",
          "hovering": "bool",
          "href": "string",
          "id": "string",
          "ioArgs": "Object",
          "isLayoutContainer": "bool",
          "isLoaded": "bool",
          "lang": "string",
          "loadingMessage": "string",
          "maxRatio": "number",
          "onLoadDeferred": "Object",
          "open": "bool",
          "ownerDocument": "Object",
          "parseOnLoad": "bool",
          "parserScope": "string",
          "preload": "bool",
          "preventCache": "bool",
          "refocus": "bool",
          "refreshOnShow": "bool",
          "renderStyles": "bool",
          "scriptHasHooks": "bool",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "state": "string",
          "stopParser": "bool",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "cancel": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "connectChildren": "fn(inStartup: bool)",
          "create": "fn(params: ?, srcNodeRef: ?)",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn()",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "disconnectChildren": "fn()",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "execute": "fn(formContents: Object)",
          "focus": "fn()",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getParent": "fn() -> ?",
          "getValues": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "hide": "fn() -> ?",
          "ioMethod": "fn(args: Object) -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "isValid": {},
          "markupFactory": "fn(params: ?, node: ?, ctor: ?) -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "refresh": "fn() -> ?",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "reset": "fn()",
          "resize": "fn(changeSize: ?, resultSize: ?)",
          "setAttribute": "fn(attr: String, value: ?)",
          "setContent": "fn(data: String)",
          "setHref": "fn(href: String) -> ?",
          "setValues": "fn(val: ?) -> ?",
          "show": "fn() -> ?",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "validate": "fn() -> ?",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onCancel": "fn()",
          "onClick": "fn(event: ?)",
          "onClose": "fn() -> bool",
          "onContentError": "fn(error: Error)",
          "onDblClick": "fn(event: ?)",
          "onDownloadEnd": "fn()",
          "onDownloadError": "fn(error: Error) -> ?",
          "onDownloadStart": "fn() -> ?",
          "onExecError": "fn(e: Event)",
          "onExecute": "fn()",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onLoad": "fn(data: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onShow": "fn()",
          "onUnload": "fn()",
          "onValidStateChange": "fn(isValid: bool)"
        }
      },
      "FisheyeListItem": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attachScope": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret387",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "iconSrc": "string",
          "id": "string",
          "label": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "isValid": {},
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onClick": "fn(e: Event)",
          "onFocus": "fn()",
          "onMouseOut": "fn(e: Event)",
          "onMouseOver": "fn(e: Event)"
        }
      },
      "FisheyeList": {
        "!type": "fn()",
        "prototype": {
          "attachEdge": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret408",
          "attachScope": "Object",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "conservativeTrigger": "bool",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "EDGE": "Object",
          "effectUnits": "number",
          "focused": "bool",
          "id": "string",
          "imgNode": "Object",
          "isFixed": "bool",
          "itemHeight": "number",
          "itemMaxHeight": "number",
          "itemMaxWidth": "number",
          "itemPadding": "number",
          "itemWidth": "number",
          "labelEdge": "string",
          "lang": "string",
          "orientation": "string",
          "ownerDocument": "Object",
          "searchContainerNode": "bool",
          "snarfChildDomOutput": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getParent": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "isValid": {},
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onFocus": "fn()",
          "onResized": "fn()"
        }
      },
      "FisheyeLite": {
        "!type": "fn(props: ?, node: ?)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret441",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "durationIn": "number",
          "durationOut": "number",
          "focused": "bool",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "properties": "Object",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "units": "string",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "easeIn": "fn(n: number) -> number",
          "easeOut": "fn(n: number) -> ?",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "hide": "fn()",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "isValid": {},
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "show": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onClick": "fn(e: Event)",
          "onFocus": "fn()",
          "onSelected": "fn(e: Object)"
        }
      },
      "MonthAndYearlyCalendar": {
        "!type": "fn()",
        "prototype": {
          "attachScope": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret460",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "constraints": "Object",
          "containerNode": "HTMLElement",
          "contextRequire": "Function",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "footerFormat": "string",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "useFx": "bool",
          "value": "Date",
          "widgetsInTemplate": "bool",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "addFx": "fn(query: ?, fromNode: ?)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getClassForDate": "fn(dateObject: Date, locale: String) -> String",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getParent": "fn() -> ?",
          "goToToday": "fn()",
          "hasChildren": "fn() -> bool",
          "isDisabledDate": "fn(date: Date, locale: String) -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "parseInitialValue": "fn(value: ?) -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn(date: Date)",
          "onFocus": "fn()",
          "onHeaderClick": "fn(e: ?)",
          "onValueSelected": "fn(date: Date)"
        }
      },
      "MonthlyCalendar": {
        "!type": "fn()",
        "prototype": {
          "attachScope": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret485",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "constraints": "Object",
          "containerNode": "HTMLElement",
          "contextRequire": "Function",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "footerFormat": "string",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "useFx": "bool",
          "value": "Date",
          "widgetsInTemplate": "bool",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "addFx": "fn(query: ?, fromNode: ?)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getClassForDate": "fn(dateObject: Date, locale: String) -> String",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getParent": "fn() -> ?",
          "goToToday": "fn()",
          "hasChildren": "fn() -> bool",
          "isDisabledDate": "fn(date: Date, locale: String) -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "parseInitialValue": "fn(value: ?) -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn(date: Date)",
          "onFocus": "fn()",
          "onHeaderClick": "fn(e: ?)",
          "onValueSelected": "fn(date: Date)"
        }
      },
      "Pager": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attachScope": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret510",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "duration": "number",
          "focused": "bool",
          "iconNext": "Object",
          "iconPage": "Object",
          "iconPageActive": "Object",
          "iconPrevious": "Object",
          "id": "string",
          "itemSpace": "number",
          "itemsPage": "number",
          "lang": "string",
          "orientation": "string",
          "ownerDocument": "Object",
          "pagerPos": "string",
          "resizeChildren": "bool",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "statusPos": "string",
          "store": "Object",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "generatePagerItem": "fn(item: ?, cnt: number) -> ?",
          "getChildren": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "isValid": {},
          "itemClass": "fn()",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onFocus": "fn()",
          "onScrollEnd": "fn()"
        }
      },
      "MultiSelectCalendar": {
        "!type": "fn(args: Object)",
        "prototype": {
          "active": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret541",
          "attachScope": "Object",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "contextRequire": "Function",
          "cssStateNodes": "Object",
          "currentFocus": "Date",
          "datePackage": "string",
          "dayWidth": "string",
          "dir": "string",
          "dndType": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "hovering": "bool",
          "id": "string",
          "lang": "string",
          "observer": "string",
          "ownerDocument": "Object",
          "returnIsoRanges": "bool",
          "searchContainerNode": "bool",
          "slideFrom": "string",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tabIndex": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "value": "Date",
          "widgetsInTemplate": "bool",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "focus": "fn()",
          "focusOnLastDate": "fn(lastElement: ?)",
          "getChildren": "fn() -> [?]",
          "getClassForDate": "fn(dateObject: Date, locale: String) -> String",
          "getDescendants": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "goToToday": "fn()",
          "handleKey": "fn(evt: Event) -> ?",
          "isDisabledDate": "fn(dateObject: Date, locale: String) -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "selectDate": "fn(dateToSelect: dojo.date, selectedDates: [Date])",
          "setAttribute": "fn(attr: String, value: ?)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "toggleDate": "fn(dateToToggle: dojo.date, selectedDates: [Date], unselectedDates: [Date])",
          "uninitialize": "fn() -> bool",
          "unselectDate": "fn(dateToUnselect: dojo.date, unselectedDates: [Date])",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn(date: Date)",
          "onClick": "fn(event: ?)",
          "onClose": "fn() -> bool",
          "onDblClick": "fn(event: ?)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onShow": "fn()",
          "onValueSelected": "fn(dates: [Date])",
          "onValueUnselected": "fn(dates: [Date])"
        },
        "_MonthDropDown": {
          "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
          "prototype": {
            "attachScope": "Object",
            "set": "fn(property: string, value: Object)",
            "get": "fn(property: string) -> Object",
            "watch": "fn(property: string, callback: ?) -> ret574",
            "attributeMap": "Object",
            "baseClass": "string",
            "class": "string",
            "containerNode": "HTMLElement",
            "contextRequire": "Function",
            "dir": "string",
            "dndType": "string",
            "domNode": "HTMLElement",
            "focused": "bool",
            "id": "string",
            "lang": "string",
            "months": "Object",
            "observer": "string",
            "ownerDocument": "Object",
            "searchContainerNode": "bool",
            "slideFrom": "string",
            "srcNodeRef": "HTMLElement",
            "style": "string",
            "templatePath": "string",
            "templateString": "string",
            "title": "string",
            "tooltip": "string",
            "widgetsInTemplate": "bool",
            "attr": "fn(name: String, value: Object) -> ?",
            "buildRendering": "fn()",
            "connect": "fn(obj: Object, event: String, method: String) -> ?",
            "defer": "fn(fcn: Function, delay: number) -> Object",
            "destroy": "fn(preserveDom?: bool)",
            "destroyDescendants": "fn(preserveDom: bool)",
            "destroyRecursive": "fn(preserveDom: bool)",
            "destroyRendering": "fn(preserveDom?: bool)",
            "disconnect": "fn(handle: ?)",
            "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
            "getChildren": "fn() -> [?]",
            "getDescendants": "fn() -> [?]",
            "getParent": "fn() -> ?",
            "isFocusable": "fn() -> ?",
            "isLeftToRight": "fn() -> ?",
            "on": "fn(type: String, func: Function) -> ?",
            "own": "fn() -> ?",
            "placeAt": "fn(reference: String, position: String) -> ?",
            "postCreate": "fn()",
            "postMixInProperties": "fn()",
            "setAttribute": "fn(attr: String, value: ?)",
            "startup": "fn()",
            "subscribe": "fn(t: String, method: Function) -> ?",
            "uninitialize": "fn() -> bool",
            "unsubscribe": "fn(handle: Object)",
            "getCachedTemplate": "fn() -> ?",
            "onBlur": "fn()",
            "onChange": "fn(month: number)",
            "onClick": "fn(event: ?)",
            "onClose": "fn() -> bool",
            "onDblClick": "fn(event: ?)",
            "onFocus": "fn()",
            "onHide": "fn()",
            "onKeyDown": "fn(event: ?)",
            "onKeyPress": "fn(event: ?)",
            "onKeyUp": "fn(event: ?)",
            "onMouseDown": "fn(event: ?)",
            "onMouseEnter": "fn(event: ?)",
            "onMouseLeave": "fn(event: ?)",
            "onMouseMove": "fn(event: ?)",
            "onMouseOut": "fn(event: ?)",
            "onMouseOver": "fn(event: ?)",
            "onMouseUp": "fn(event: ?)",
            "onShow": "fn()"
          }
        }
      },
      "PagerItem": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attachScope": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret599",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "isValid": {},
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "parseChildren": "fn()",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "resizeChildren": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "PlaceholderMenuItem": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "accelKey": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret618",
          "active": "bool",
          "attachScope": "Object",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "cssStateNodes": "Object",
          "dir": "string",
          "disabled": "bool",
          "domNode": "HTMLElement",
          "focused": "bool",
          "hovering": "bool",
          "iconClass": "string",
          "id": "string",
          "label": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "searchContainerNode": "bool",
          "shortcutKey": "string",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "focus": "fn()",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "replace": "fn(menuItems: [dijit.MenuItem]) -> ?",
          "setAttribute": "fn(attr: String, value: ?)",
          "setDisabled": "fn(disabled: bool)",
          "setLabel": "fn(content: String)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unReplace": "fn(destroy: bool) -> ?",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onClick": "fn()",
          "onClose": "fn() -> bool",
          "onDblClick": "fn(event: ?)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onShow": "fn()"
        }
      },
      "Portlet": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "active": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret645",
          "attachScope": "Object",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "closable": "bool",
          "containerNode": "HTMLElement",
          "content": "string",
          "cssStateNodes": "Object",
          "dir": "string",
          "doLayout": "bool",
          "domNode": "HTMLElement",
          "dragRestriction": "bool",
          "duration": "number",
          "errorMessage": "string",
          "extractContent": "bool",
          "focused": "bool",
          "hovering": "bool",
          "href": "string",
          "id": "string",
          "ioArgs": "Object",
          "isLayoutContainer": "bool",
          "isLoaded": "bool",
          "lang": "string",
          "loadingMessage": "string",
          "onLoadDeferred": "Object",
          "open": "bool",
          "ownerDocument": "Object",
          "parseOnLoad": "bool",
          "parserScope": "string",
          "preload": "bool",
          "preventCache": "bool",
          "refreshOnShow": "bool",
          "resizeChildren": "bool",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "stopParser": "bool",
          "style": "string",
          "tabIndex": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "toggleable": "bool",
          "tooltip": "string",
          "addChild": "fn(child: ?)",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "cancel": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "create": "fn(params: ?, srcNodeRef: ?)",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn()",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getParent": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "ioMethod": "fn(args: Object) -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "markupFactory": "fn(params: ?, node: ?, ctor: ?) -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "refresh": "fn() -> ?",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "resize": "fn(changeSize: ?, resultSize: ?)",
          "setAttribute": "fn(attr: String, value: ?)",
          "setContent": "fn(data: String)",
          "setHref": "fn(href: String) -> ?",
          "setTitle": "fn(title: String)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onClick": "fn(event: ?)",
          "onClose": "fn(evt?: ?) -> bool",
          "onContentError": "fn(error: Error)",
          "onDblClick": "fn(event: ?)",
          "onDownloadEnd": "fn()",
          "onDownloadError": "fn(error: Error) -> ?",
          "onDownloadStart": "fn() -> ?",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onLoad": "fn(data: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onShow": "fn()",
          "onSizeChange": "fn(widget: ?)",
          "onUnload": "fn()",
          "onUpdateSize": "fn()"
        }
      },
      "PortletDialogSettings": {
        "!type": "fn(props: ?, node: ?)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret690",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "content": "string",
          "dimensions": "[?]",
          "dir": "string",
          "doLayout": "bool",
          "domNode": "HTMLElement",
          "errorMessage": "string",
          "extractContent": "bool",
          "focused": "bool",
          "href": "string",
          "id": "string",
          "ioArgs": "Object",
          "isLayoutContainer": "bool",
          "isLoaded": "bool",
          "lang": "string",
          "loadingMessage": "string",
          "onLoadDeferred": "Object",
          "ownerDocument": "Object",
          "parseOnLoad": "bool",
          "parserScope": "string",
          "portletIconClass": "string",
          "portletIconHoverClass": "string",
          "preload": "bool",
          "preventCache": "bool",
          "refreshOnShow": "bool",
          "srcNodeRef": "HTMLElement",
          "stopParser": "bool",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "cancel": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "create": "fn(params: ?, srcNodeRef: ?)",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn()",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getParent": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "ioMethod": "fn(args: Object) -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "markupFactory": "fn(params: ?, node: ?, ctor: ?) -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "refresh": "fn() -> ?",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "resize": "fn(changeSize: ?, resultSize: ?)",
          "setAttribute": "fn(attr: String, value: ?)",
          "setContent": "fn(data: String)",
          "setHref": "fn(href: String) -> ?",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "toggle": "fn()",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onClick": "fn(event: ?)",
          "onClose": "fn() -> bool",
          "onContentError": "fn(error: Error)",
          "onDblClick": "fn(event: ?)",
          "onDownloadEnd": "fn()",
          "onDownloadError": "fn(error: Error) -> ?",
          "onDownloadStart": "fn() -> ?",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onLoad": "fn(data: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onShow": "fn()",
          "onUnload": "fn()"
        }
      },
      "Roller": {
        "!type": "fn()",
        "prototype": {
          "autoStart": "bool",
          "delay": "number",
          "durationIn": "number",
          "durationOut": "number",
          "items": "[?]",
          "itemSelector": "string",
          "makeAnims": "fn()",
          "postCreate": "fn()",
          "RollerSlide": "fn()",
          "start": "fn()",
          "stop": "fn()"
        },
        "_Hover": {
          "!type": "fn()",
          "prototype": {
            "postCreate": "fn()"
          }
        },
        "RollerSlide": {
          "!type": "fn()",
          "prototype": {
            "autoStart": "bool",
            "delay": "number",
            "durationIn": "number",
            "durationOut": "number",
            "items": "[?]",
            "itemSelector": "string",
            "makeAnims": "fn()",
            "postCreate": "fn()",
            "start": "fn()",
            "stop": "fn()"
          }
        }
      },
      "Rotator": {
        "!type": "fn(params: Object, node: HTMLElement)",
        "prototype": {
          "panes": "Object",
          "transition": "string",
          "transitionParams": "string",
          "control": "fn(action: String)",
          "destroy": "fn()",
          "go": "fn(p: number) -> ?",
          "next": "fn() -> ?",
          "prev": "fn() -> ?",
          "resize": "fn(width: number, height: number)",
          "onManualChange": "fn()",
          "onUpdate": "fn(type: String, params: Object)"
        }
      },
      "PortletSettings": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "inherited": {},
          "a11yclick": "Object",
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret724",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "content": "string",
          "dir": "string",
          "dndType": "string",
          "doLayout": "bool",
          "domNode": "HTMLElement",
          "errorMessage": "string",
          "extractContent": "bool",
          "focused": "bool",
          "href": "string",
          "id": "string",
          "ioArgs": "Object",
          "isLayoutContainer": "bool",
          "isLoaded": "bool",
          "lang": "string",
          "loadingMessage": "string",
          "observer": "string",
          "onLoadDeferred": "Object",
          "ownerDocument": "Object",
          "parseOnLoad": "bool",
          "parserScope": "string",
          "portletIconClass": "string",
          "portletIconHoverClass": "string",
          "preload": "bool",
          "preventCache": "bool",
          "refreshOnShow": "bool",
          "slideFrom": "string",
          "srcNodeRef": "HTMLElement",
          "stopParser": "bool",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "isValid": "?",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "cancel": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "create": "fn(params: ?, srcNodeRef: ?)",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn()",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getParent": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "ioMethod": "fn(args: Object) -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "markupFactory": "fn(params: ?, node: ?, ctor: ?) -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "postscript": "fn(params: Object)",
          "refresh": "fn() -> ?",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "resize": "fn(changeSize: ?, resultSize: ?)",
          "setAttribute": "fn(attr: String, value: ?)",
          "setContent": "fn(data: String)",
          "setHref": "fn(href: String) -> ?",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "toggle": "fn()",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onClick": "fn(event: ?)",
          "onClose": "fn() -> bool",
          "onContentError": "fn(error: Error)",
          "onDblClick": "fn(event: ?)",
          "onDownloadEnd": "fn()",
          "onDownloadError": "fn(error: Error) -> ?",
          "onDownloadStart": "fn() -> ?",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onLoad": "fn(data: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onShow": "fn()",
          "onUnload": "fn()"
        }
      },
      "Selection": {
        "!type": "fn()",
        "prototype": {
          "selectedItem": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret760",
          "selectedItems": "Object",
          "selectionMode": "string",
          "dispatchChange": "fn(oldSelectedItem: Object, newSelectedItem: Object, renderer: Object, triggerEvent: Event)",
          "getIdentity": "fn(item: Object)",
          "isItemSelected": "fn(item: Object) -> ?",
          "postscript": "fn(params: Object)",
          "selectFromEvent": "fn(e: Event, item: Object, renderer: Object, dispatch: bool) -> ?",
          "setItemSelected": "fn(item: Object, value: bool)",
          "onChange": "fn()"
        }
      },
      "TitleGroup": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret764",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "dndType": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "lang": "string",
          "observer": "string",
          "ownerDocument": "Object",
          "slideFrom": "string",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "addChild": "fn(widget: dijit.TitlePane, position: String) -> ?",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: ?) -> ?",
          "selectChild": "fn(widget: ?) -> ?",
          "setAttribute": "fn(attr: String, value: ?)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onClick": "fn(event: ?)",
          "onClose": "fn() -> bool",
          "onDblClick": "fn(event: ?)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onShow": "fn()"
        }
      },
      "Standby": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attachScope": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret782",
          "attributeMap": "Object",
          "baseClass": "string",
          "centerIndicator": "string",
          "class": "string",
          "color": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "dndType": "string",
          "domNode": "HTMLElement",
          "duration": "number",
          "focused": "bool",
          "id": "string",
          "image": "string",
          "imageText": "string",
          "lang": "string",
          "observer": "string",
          "opacity": "number",
          "ownerDocument": "Object",
          "searchContainerNode": "bool",
          "slideFrom": "string",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "target": "string",
          "templatePath": "string",
          "templateString": "string",
          "text": "string",
          "title": "string",
          "tooltip": "string",
          "zIndex": "string",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "hide": "fn()",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "isVisible": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "setAttribute": "fn(attr: String, value: ?)",
          "show": "fn()",
          "startup": "fn(args?: ?)",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onClick": "fn(event: ?)",
          "onClose": "fn() -> bool",
          "onDblClick": "fn(event: ?)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onShow": "fn()"
        }
      },
      "Toaster": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attachScope": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret813",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "defaultType": "string",
          "dir": "string",
          "domNode": "HTMLElement",
          "duration": "number",
          "focused": "bool",
          "id": "string",
          "lang": "string",
          "messageTopic": "string",
          "messageTypes": "Object",
          "ownerDocument": "Object",
          "positionDirection": "string",
          "positionDirectionTypes": "[?]",
          "searchContainerNode": "bool",
          "separator": "string",
          "slideDuration": "number",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "hide": "fn()",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "isValid": {},
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "setContent": "fn(message: String, messageType: String, duration: number)",
          "show": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onFocus": "fn()",
          "onSelect": "fn(e: Event)"
        }
      },
      "UpgradeBar": {
        "!type": "fn(props: ?, node: ?)",
        "prototype": {
          "attachScope": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret840",
          "attributeMap": "Object",
          "baseClass": "string",
          "buttonCancel": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "lang": "string",
          "noRemindButton": "string",
          "notifications": "[?]",
          "ownerDocument": "Object",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "hide": "fn()",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "isValid": {},
          "notify": "fn(msg: ?)",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "Wizard": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attachScope": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret862",
          "attributeMap": "Object",
          "baseClass": "string",
          "cancelButtonLabel": "string",
          "cancelFunction": "Function",
          "class": "string",
          "containerNode": "HTMLElement",
          "contextRequire": "Function",
          "dir": "string",
          "doLayout": "bool",
          "domNode": "HTMLElement",
          "doneButtonLabel": "string",
          "focused": "bool",
          "hideDisabled": "bool",
          "id": "string",
          "isLayoutContainer": "bool",
          "lang": "string",
          "nextButtonLabel": "string",
          "ownerDocument": "Object",
          "persist": "bool",
          "previousButtonLabel": "string",
          "searchContainerNode": "bool",
          "selectedChildWidget": "Object",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "widgetsInTemplate": "bool",
          "addChild": "fn(child: dijit._WidgetBase, insertIndex: number)",
          "attr": "fn(name: String, value: Object) -> ?",
          "back": "fn() -> ?",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn()",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "done": "fn()",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "forward": "fn() -> ?",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "layout": "fn()",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "resize": "fn()",
          "selectChild": "fn(page: dijit._WidgetBase, animate: bool) -> ?",
          "setAttribute": "fn(attr: String, value: ?)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onClick": "fn(event: ?)",
          "onClose": "fn() -> bool",
          "onDblClick": "fn(event: ?)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onShow": "fn()"
        }
      },
      "YearlyCalendar": {
        "!type": "fn()",
        "prototype": {
          "attachScope": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret893",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "constraints": "Object",
          "containerNode": "HTMLElement",
          "contextRequire": "Function",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "footerFormat": "string",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "parent": "Object",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "useFx": "bool",
          "value": "Date",
          "widgetsInTemplate": "bool",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "addFx": "fn(query: ?, fromNode: ?)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getClassForDate": "fn(dateObject: Date, locale: String) -> String",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getParent": "fn() -> ?",
          "goToToday": "fn()",
          "hasChildren": "fn() -> bool",
          "isDisabledDate": "fn(date: Date, locale: String) -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "parseInitialValue": "fn(value: ?) -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn(date: Date)",
          "onFocus": "fn()",
          "onHeaderClick": "fn(e: ?)",
          "onValueSelected": "fn(date: Date)"
        }
      },
      "WizardPane": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret919",
          "baseClass": "string",
          "canGoBack": "bool",
          "class": "string",
          "containerNode": "HTMLElement",
          "content": "string",
          "dir": "string",
          "doLayout": "bool",
          "domNode": "HTMLElement",
          "doneFunction": "string",
          "errorMessage": "string",
          "extractContent": "bool",
          "focused": "bool",
          "href": "string",
          "id": "string",
          "ioArgs": "Object",
          "isLayoutContainer": "bool",
          "isLoaded": "bool",
          "lang": "string",
          "loadingMessage": "string",
          "onLoadDeferred": "Object",
          "ownerDocument": "Object",
          "parseOnLoad": "bool",
          "parserScope": "string",
          "passFunction": "string",
          "preload": "bool",
          "preventCache": "bool",
          "refreshOnShow": "bool",
          "srcNodeRef": "HTMLElement",
          "stopParser": "bool",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "cancel": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "create": "fn(params: ?, srcNodeRef: ?)",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn()",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "done": "fn()",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getParent": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "ioMethod": "fn(args: Object) -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "markupFactory": "fn(params: ?, node: ?, ctor: ?) -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "refresh": "fn() -> ?",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "resize": "fn(changeSize: ?, resultSize: ?)",
          "setAttribute": "fn(attr: String, value: ?)",
          "setContent": "fn(data: String)",
          "setHref": "fn(href: String) -> ?",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onClick": "fn(event: ?)",
          "onClose": "fn() -> bool",
          "onContentError": "fn(error: Error)",
          "onDblClick": "fn(event: ?)",
          "onDownloadEnd": "fn()",
          "onDownloadError": "fn(error: Error) -> ?",
          "onDownloadStart": "fn() -> ?",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onLoad": "fn(data: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onShow": "fn()",
          "onUnload": "fn()"
        }
      },
      "rotator": {
        "Controller": {
          "!type": "fn(params: Object, node: HTMLElement)",
          "prototype": {
            "commands": "string",
            "rotator": "Object",
            "destroy": "fn()"
          }
        },
        "ThumbnailController": {
          "!type": "fn(params: Object, node: HTMLElement)",
          "prototype": {
            "rotator": "Object",
            "destroy": "fn()"
          }
        },
        "Fade": {
          "crossFade": "fn(args: Object) -> ?",
          "fade": "fn(args: Object) -> ?"
        },
        "Pan": {
          "pan": "fn(args: Object) -> ?",
          "panDown": "fn(args: Object) -> ?",
          "panLeft": "fn(args: Object) -> ?",
          "panRight": "fn(args: Object) -> ?",
          "panUp": "fn(args: Object) -> ?"
        },
        "Slide": {
          "slideDown": "fn(args: Object) -> ?",
          "slideLeft": "fn(args: Object) -> ?",
          "slideRight": "fn(args: Object) -> ?",
          "slideUp": "fn(args: Object) -> ?"
        },
        "PanFade": {
          "panFade": "fn(args: Object) -> ?",
          "panFadeDown": "fn(args: Object) -> ?",
          "panFadeLeft": "fn(args: Object) -> ?",
          "panFadeRight": "fn(args: Object) -> ?",
          "panFadeUp": "fn(args: Object) -> ?"
        },
        "Wipe": {
          "wipeDown": "fn(args: Object) -> ?",
          "wipeLeft": "fn(args: Object) -> ?",
          "wipeRight": "fn(args: Object) -> ?",
          "wipeUp": "fn(args: Object) -> ?"
        }
      },
      "CalendarViews": {},
      "FilePicker": {}
    }
  },
  "dojox/widget/CalendarViews": "exp",
  "dojox/widget/FilePicker": "exp",
  "dojox/widget/_CalendarDay": "exp",
  "dojox/widget/_CalendarMonthYear": "exp",
  "dojox/widget/_CalendarMonth": "exp",
  "dojox/widget/_CalendarBase": "exp",
  "dojox/widget/_CalendarDayView": "exp",
  "dojox/widget/_CalendarMonthView": "exp",
  "dojox/widget/_CalendarYear": "exp",
  "dojox/widget/_FisheyeFX": "exp",
  "dojox/widget/_CalendarView": "exp",
  "dojox/widget/AutoRotator": "exp",
  "dojox/widget/_Invalidating": "exp",
  "dojox/widget/_CalendarYearView": "exp",
  "dojox/widget/_CalendarMonthYearView": "exp",
  "dojox/widget/Calendar2Pane": "exp",
  "dojox/widget/CalendarFisheye": "exp",
  "dojox/widget/Calendar": "exp",
  "dojox/widget/Dialog": "exp",
  "dojox/widget/Calendar3Pane": "exp",
  "dojox/widget/CalendarFx": "exp",
  "dojox/widget/DailyCalendar": "exp",
  "dojox/widget/FisheyeLite": "exp",
  "dojox/widget/FisheyeListItem": "exp",
  "dojox/widget/ColorPicker": "exp",
  "dojox/widget/FisheyeList": "exp",
  "dojox/widget/DialogSimple": "exp",
  "dojox/widget/MonthAndYearlyCalendar": "exp",
  "dojox/widget/MonthlyCalendar": "exp",
  "dojox/widget/PagerItem": "exp",
  "dojox/widget/Pager": "exp",
  "dojox/widget/MultiSelectCalendar": "exp",
  "dojox/widget/MultiSelectCalendar._MonthDropDown": "exp",
  "dojox/widget/Roller": "exp",
  "dojox/widget/Roller._Hover": "exp",
  "dojox/widget/Roller.RollerSlide": "exp",
  "dojox/widget/PlaceholderMenuItem": "exp",
  "dojox/widget/Rotator": "exp",
  "dojox/widget/PortletDialogSettings": "exp",
  "dojox/widget/Portlet": "exp",
  "dojox/widget/PortletSettings": "exp",
  "dojox/widget/Selection": "exp",
  "dojox/widget/TitleGroup": "exp",
  "dojox/widget/UpgradeBar": "exp",
  "dojox/widget/Toaster": "exp",
  "dojox/widget/Wizard": "exp",
  "dojox/widget/Standby": "exp",
  "dojox/widget/YearlyCalendar": "exp",
  "dojox/widget/WizardPane": "exp",
  "dojox/widget/rotator/Fade": "exp",
  "dojox/widget/rotator/PanFade": "exp",
  "dojox/widget/rotator/Pan": "exp",
  "dojox/widget/rotator/Slide": "exp",
  "dojox/widget/rotator/Wipe": "exp",
  "dojox/widget/rotator/Controller": "exp",
  "dojox/widget/rotator/ThumbnailController": "exp",
  "!name": "dojox.widget.d.ts",
  "!define": {
    "ret": {
      "unwatch": "fn()"
    },
    "ret1": {
      "unwatch": "fn()"
    },
    "ret2": {
      "unwatch": "fn()"
    },
    "ret3": {
      "unwatch": "fn()"
    },
    "ret4": {
      "unwatch": "fn()"
    },
    "ret5": {
      "unwatch": "fn()"
    },
    "ret6": {
      "unwatch": "fn()"
    },
    "ret7": {
      "unwatch": "fn()"
    },
    "ret8": {
      "unwatch": "fn()"
    },
    "ret9": {
      "unwatch": "fn()"
    },
    "ret10": {
      "unwatch": "fn()"
    },
    "ret11": {
      "unwatch": "fn()"
    },
    "ret12": {
      "unwatch": "fn()"
    },
    "ret13": {
      "unwatch": "fn()"
    },
    "ret14": {
      "unwatch": "fn()"
    },
    "ret15": {
      "unwatch": "fn()"
    },
    "ret16": {
      "unwatch": "fn()"
    },
    "ret17": {
      "unwatch": "fn()"
    },
    "ret18": {
      "unwatch": "fn()"
    },
    "ret19": {
      "unwatch": "fn()"
    },
    "ret20": {
      "unwatch": "fn()"
    },
    "ret21": {
      "unwatch": "fn()"
    },
    "ret22": {
      "unwatch": "fn()"
    },
    "ret23": {
      "unwatch": "fn()"
    },
    "ret24": {
      "unwatch": "fn()"
    },
    "ret25": {
      "unwatch": "fn()"
    },
    "ret26": {
      "unwatch": "fn()"
    },
    "ret27": {
      "unwatch": "fn()"
    },
    "ret28": {
      "unwatch": "fn()"
    },
    "ret29": {
      "unwatch": "fn()"
    },
    "ret30": {
      "unwatch": "fn()"
    },
    "ret31": {
      "unwatch": "fn()"
    },
    "ret32": {
      "unwatch": "fn()"
    },
    "ret33": {
      "unwatch": "fn()"
    },
    "ret34": {
      "unwatch": "fn()"
    },
    "ret35": {
      "unwatch": "fn()"
    },
    "ret36": {
      "unwatch": "fn()"
    },
    "ret37": {
      "unwatch": "fn()"
    },
    "ret38": {
      "unwatch": "fn()"
    },
    "ret39": {
      "unwatch": "fn()"
    },
    "ret40": {
      "unwatch": "fn()"
    },
    "ret41": {
      "unwatch": "fn()"
    },
    "ret42": {
      "unwatch": "fn()"
    },
    "ret43": {
      "unwatch": "fn()"
    },
    "ret44": {
      "unwatch": "fn()"
    },
    "ret45": {
      "unwatch": "fn()"
    },
    "ret46": {
      "unwatch": "fn()"
    },
    "ret47": {
      "unwatch": "fn()"
    },
    "ret48": {
      "unwatch": "fn()"
    },
    "ret49": {
      "unwatch": "fn()"
    },
    "ret50": {
      "unwatch": "fn()"
    },
    "ret51": {
      "unwatch": "fn()"
    },
    "ret52": {
      "unwatch": "fn()"
    },
    "ret53": {
      "unwatch": "fn()"
    },
    "ret54": {
      "unwatch": "fn()"
    },
    "ret55": {
      "unwatch": "fn()"
    },
    "ret56": {
      "unwatch": "fn()"
    },
    "ret57": {
      "unwatch": "fn()"
    },
    "ret58": {
      "unwatch": "fn()"
    },
    "ret59": {
      "unwatch": "fn()"
    },
    "ret60": {
      "unwatch": "fn()"
    },
    "ret61": {
      "unwatch": "fn()"
    },
    "ret62": {
      "unwatch": "fn()"
    },
    "ret63": {
      "unwatch": "fn()"
    },
    "ret64": {
      "unwatch": "fn()"
    },
    "ret65": {
      "unwatch": "fn()"
    },
    "ret66": {
      "unwatch": "fn()"
    },
    "ret67": {
      "unwatch": "fn()"
    },
    "ret68": {
      "unwatch": "fn()"
    },
    "ret69": {
      "unwatch": "fn()"
    },
    "ret70": {
      "unwatch": "fn()"
    },
    "ret71": {
      "unwatch": "fn()"
    },
    "ret72": {
      "unwatch": "fn()"
    },
    "ret73": {
      "unwatch": "fn()"
    },
    "ret74": {
      "unwatch": "fn()"
    },
    "ret75": {
      "unwatch": "fn()"
    },
    "ret76": {
      "unwatch": "fn()"
    },
    "ret77": {
      "unwatch": "fn()"
    },
    "ret78": {
      "unwatch": "fn()"
    },
    "ret79": {
      "unwatch": "fn()"
    },
    "ret80": {
      "unwatch": "fn()"
    },
    "ret81": {
      "unwatch": "fn()"
    },
    "ret82": {
      "unwatch": "fn()"
    },
    "ret83": {
      "unwatch": "fn()"
    },
    "ret84": {
      "unwatch": "fn()"
    },
    "ret85": {
      "unwatch": "fn()"
    },
    "ret86": {
      "unwatch": "fn()"
    },
    "ret87": {
      "unwatch": "fn()"
    },
    "ret88": {
      "unwatch": "fn()"
    },
    "ret89": {
      "unwatch": "fn()"
    },
    "ret90": {
      "unwatch": "fn()"
    },
    "ret91": {
      "unwatch": "fn()"
    },
    "ret92": {
      "unwatch": "fn()"
    },
    "ret93": {
      "unwatch": "fn()"
    },
    "ret94": {
      "unwatch": "fn()"
    },
    "ret95": {
      "unwatch": "fn()"
    },
    "ret96": {
      "unwatch": "fn()"
    },
    "ret97": {
      "unwatch": "fn()"
    },
    "ret98": {
      "unwatch": "fn()"
    },
    "ret99": {
      "unwatch": "fn()"
    },
    "ret100": {
      "unwatch": "fn()"
    },
    "ret101": {
      "unwatch": "fn()"
    },
    "ret102": {
      "unwatch": "fn()"
    },
    "ret103": {
      "unwatch": "fn()"
    },
    "ret104": {
      "unwatch": "fn()"
    },
    "ret105": {
      "unwatch": "fn()"
    },
    "ret106": {
      "unwatch": "fn()"
    },
    "ret107": {
      "unwatch": "fn()"
    },
    "ret108": {
      "unwatch": "fn()"
    },
    "ret109": {
      "unwatch": "fn()"
    },
    "ret110": {
      "unwatch": "fn()"
    },
    "ret111": {
      "unwatch": "fn()"
    },
    "ret112": {
      "unwatch": "fn()"
    },
    "ret113": {
      "unwatch": "fn()"
    },
    "ret114": {
      "unwatch": "fn()"
    },
    "ret115": {
      "unwatch": "fn()"
    },
    "ret116": {
      "unwatch": "fn()"
    },
    "ret117": {
      "unwatch": "fn()"
    },
    "ret118": {
      "unwatch": "fn()"
    },
    "ret119": {
      "unwatch": "fn()"
    },
    "ret120": {
      "unwatch": "fn()"
    },
    "ret121": {
      "unwatch": "fn()"
    },
    "ret122": {
      "unwatch": "fn()"
    },
    "ret123": {
      "unwatch": "fn()"
    },
    "ret124": {
      "unwatch": "fn()"
    },
    "ret125": {
      "unwatch": "fn()"
    },
    "ret126": {
      "unwatch": "fn()"
    },
    "ret127": {
      "unwatch": "fn()"
    },
    "ret128": {
      "unwatch": "fn()"
    },
    "ret129": {
      "unwatch": "fn()"
    },
    "ret130": {
      "unwatch": "fn()"
    },
    "ret131": {
      "unwatch": "fn()"
    },
    "ret132": {
      "unwatch": "fn()"
    },
    "ret133": {
      "unwatch": "fn()"
    },
    "ret134": {
      "unwatch": "fn()"
    },
    "ret135": {
      "unwatch": "fn()"
    },
    "ret136": {
      "unwatch": "fn()"
    },
    "ret137": {
      "unwatch": "fn()"
    },
    "ret138": {
      "unwatch": "fn()"
    },
    "ret139": {
      "unwatch": "fn()"
    },
    "ret140": {
      "unwatch": "fn()"
    },
    "ret141": {
      "unwatch": "fn()"
    },
    "ret142": {
      "unwatch": "fn()"
    },
    "ret143": {
      "unwatch": "fn()"
    },
    "ret144": {
      "unwatch": "fn()"
    },
    "ret145": {
      "unwatch": "fn()"
    },
    "ret146": {
      "unwatch": "fn()"
    },
    "ret147": {
      "unwatch": "fn()"
    },
    "ret148": {
      "unwatch": "fn()"
    },
    "ret149": {
      "unwatch": "fn()"
    },
    "ret150": {
      "unwatch": "fn()"
    },
    "ret151": {
      "unwatch": "fn()"
    },
    "ret152": {
      "unwatch": "fn()"
    },
    "ret153": {
      "unwatch": "fn()"
    },
    "ret154": {
      "unwatch": "fn()"
    },
    "ret155": {
      "unwatch": "fn()"
    },
    "ret156": {
      "unwatch": "fn()"
    },
    "ret157": {
      "unwatch": "fn()"
    },
    "ret158": {
      "unwatch": "fn()"
    },
    "ret159": {
      "unwatch": "fn()"
    },
    "ret160": {
      "unwatch": "fn()"
    },
    "ret161": {
      "unwatch": "fn()"
    },
    "ret162": {
      "unwatch": "fn()"
    },
    "ret163": {
      "unwatch": "fn()"
    },
    "ret164": {
      "unwatch": "fn()"
    },
    "ret165": {
      "unwatch": "fn()"
    },
    "ret166": {
      "unwatch": "fn()"
    },
    "ret167": {
      "unwatch": "fn()"
    },
    "ret168": {
      "unwatch": "fn()"
    },
    "ret169": {
      "unwatch": "fn()"
    },
    "ret170": {
      "unwatch": "fn()"
    },
    "ret171": {
      "unwatch": "fn()"
    },
    "ret172": {
      "unwatch": "fn()"
    },
    "ret173": {
      "unwatch": "fn()"
    },
    "ret174": {
      "unwatch": "fn()"
    },
    "ret175": {
      "unwatch": "fn()"
    },
    "ret176": {
      "unwatch": "fn()"
    },
    "ret177": {
      "unwatch": "fn()"
    },
    "ret178": {
      "unwatch": "fn()"
    },
    "ret179": {
      "unwatch": "fn()"
    },
    "ret180": {
      "unwatch": "fn()"
    },
    "ret181": {
      "unwatch": "fn()"
    },
    "ret182": {
      "unwatch": "fn()"
    },
    "ret183": {
      "unwatch": "fn()"
    },
    "ret184": {
      "unwatch": "fn()"
    },
    "ret185": {
      "unwatch": "fn()"
    },
    "ret186": {
      "unwatch": "fn()"
    },
    "ret187": {
      "unwatch": "fn()"
    },
    "ret188": {
      "unwatch": "fn()"
    },
    "ret189": {
      "unwatch": "fn()"
    },
    "ret190": {
      "unwatch": "fn()"
    },
    "ret191": {
      "unwatch": "fn()"
    },
    "ret192": {
      "unwatch": "fn()"
    },
    "ret193": {
      "unwatch": "fn()"
    },
    "ret194": {
      "unwatch": "fn()"
    },
    "ret195": {
      "unwatch": "fn()"
    },
    "ret196": {
      "unwatch": "fn()"
    },
    "ret197": {
      "unwatch": "fn()"
    },
    "ret198": {
      "unwatch": "fn()"
    },
    "ret199": {
      "unwatch": "fn()"
    },
    "ret200": {
      "unwatch": "fn()"
    },
    "ret201": {
      "unwatch": "fn()"
    },
    "ret202": {
      "unwatch": "fn()"
    },
    "ret203": {
      "unwatch": "fn()"
    },
    "ret204": {
      "unwatch": "fn()"
    },
    "ret205": {
      "unwatch": "fn()"
    },
    "ret206": {
      "unwatch": "fn()"
    },
    "ret207": {
      "unwatch": "fn()"
    },
    "ret208": {
      "unwatch": "fn()"
    },
    "ret209": {
      "unwatch": "fn()"
    },
    "ret210": {
      "unwatch": "fn()"
    },
    "ret211": {
      "unwatch": "fn()"
    },
    "ret212": {
      "unwatch": "fn()"
    },
    "ret213": {
      "unwatch": "fn()"
    },
    "ret214": {
      "unwatch": "fn()"
    },
    "ret215": {
      "unwatch": "fn()"
    },
    "ret216": {
      "unwatch": "fn()"
    },
    "ret217": {
      "unwatch": "fn()"
    },
    "ret218": {
      "unwatch": "fn()"
    },
    "ret219": {
      "unwatch": "fn()"
    },
    "ret220": {
      "unwatch": "fn()"
    },
    "ret221": {
      "unwatch": "fn()"
    },
    "ret222": {
      "unwatch": "fn()"
    },
    "ret223": {
      "unwatch": "fn()"
    },
    "ret224": {
      "unwatch": "fn()"
    },
    "ret225": {
      "unwatch": "fn()"
    },
    "ret226": {
      "unwatch": "fn()"
    },
    "ret227": {
      "unwatch": "fn()"
    },
    "ret228": {
      "unwatch": "fn()"
    },
    "ret229": {
      "unwatch": "fn()"
    },
    "ret230": {
      "unwatch": "fn()"
    },
    "ret231": {
      "unwatch": "fn()"
    },
    "ret232": {
      "unwatch": "fn()"
    },
    "ret233": {
      "unwatch": "fn()"
    },
    "ret234": {
      "unwatch": "fn()"
    },
    "ret235": {
      "unwatch": "fn()"
    },
    "ret236": {
      "unwatch": "fn()"
    },
    "ret237": {
      "unwatch": "fn()"
    },
    "ret238": {
      "unwatch": "fn()"
    },
    "ret239": {
      "unwatch": "fn()"
    },
    "ret240": {
      "unwatch": "fn()"
    },
    "ret241": {
      "unwatch": "fn()"
    },
    "ret242": {
      "unwatch": "fn()"
    },
    "ret243": {
      "unwatch": "fn()"
    },
    "ret244": {
      "unwatch": "fn()"
    },
    "ret245": {
      "unwatch": "fn()"
    },
    "ret246": {
      "unwatch": "fn()"
    },
    "ret247": {
      "unwatch": "fn()"
    },
    "ret248": {
      "unwatch": "fn()"
    },
    "ret249": {
      "unwatch": "fn()"
    },
    "ret250": {
      "unwatch": "fn()"
    },
    "ret251": {
      "unwatch": "fn()"
    },
    "ret252": {
      "unwatch": "fn()"
    },
    "ret253": {
      "unwatch": "fn()"
    },
    "ret254": {
      "unwatch": "fn()"
    },
    "ret255": {
      "unwatch": "fn()"
    },
    "ret256": {
      "unwatch": "fn()"
    },
    "ret257": {
      "unwatch": "fn()"
    },
    "ret258": {
      "unwatch": "fn()"
    },
    "ret259": {
      "unwatch": "fn()"
    },
    "ret260": {
      "unwatch": "fn()"
    },
    "ret261": {
      "unwatch": "fn()"
    },
    "ret262": {
      "unwatch": "fn()"
    },
    "ret263": {
      "unwatch": "fn()"
    },
    "ret264": {
      "unwatch": "fn()"
    },
    "ret265": {
      "unwatch": "fn()"
    },
    "ret266": {
      "unwatch": "fn()"
    },
    "ret267": {
      "unwatch": "fn()"
    },
    "ret268": {
      "unwatch": "fn()"
    },
    "ret269": {
      "unwatch": "fn()"
    },
    "ret270": {
      "unwatch": "fn()"
    },
    "ret271": {
      "unwatch": "fn()"
    },
    "ret272": {
      "unwatch": "fn()"
    },
    "ret273": {
      "unwatch": "fn()"
    },
    "ret274": {
      "unwatch": "fn()"
    },
    "ret275": {
      "unwatch": "fn()"
    },
    "ret276": {
      "unwatch": "fn()"
    },
    "ret277": {
      "unwatch": "fn()"
    },
    "ret278": {
      "unwatch": "fn()"
    },
    "ret279": {
      "unwatch": "fn()"
    },
    "ret280": {
      "unwatch": "fn()"
    },
    "ret281": {
      "unwatch": "fn()"
    },
    "ret282": {
      "unwatch": "fn()"
    },
    "ret283": {
      "unwatch": "fn()"
    },
    "ret284": {
      "unwatch": "fn()"
    },
    "ret285": {
      "unwatch": "fn()"
    },
    "ret286": {
      "unwatch": "fn()"
    },
    "ret287": {
      "unwatch": "fn()"
    },
    "ret288": {
      "unwatch": "fn()"
    },
    "ret289": {
      "unwatch": "fn()"
    },
    "ret290": {
      "unwatch": "fn()"
    },
    "ret291": {
      "unwatch": "fn()"
    },
    "ret292": {
      "unwatch": "fn()"
    },
    "ret293": {
      "unwatch": "fn()"
    },
    "ret294": {
      "unwatch": "fn()"
    },
    "ret295": {
      "unwatch": "fn()"
    },
    "ret296": {
      "unwatch": "fn()"
    },
    "ret297": {
      "unwatch": "fn()"
    },
    "ret298": {
      "unwatch": "fn()"
    },
    "ret299": {
      "unwatch": "fn()"
    },
    "ret300": {
      "unwatch": "fn()"
    },
    "ret301": {
      "unwatch": "fn()"
    },
    "ret302": {
      "unwatch": "fn()"
    },
    "ret303": {
      "unwatch": "fn()"
    },
    "ret304": {
      "unwatch": "fn()"
    },
    "ret305": {
      "unwatch": "fn()"
    },
    "ret306": {
      "unwatch": "fn()"
    },
    "ret307": {
      "unwatch": "fn()"
    },
    "ret308": {
      "unwatch": "fn()"
    },
    "ret309": {
      "unwatch": "fn()"
    },
    "ret310": {
      "unwatch": "fn()"
    },
    "ret311": {
      "unwatch": "fn()"
    },
    "ret312": {
      "unwatch": "fn()"
    },
    "ret313": {
      "unwatch": "fn()"
    },
    "ret314": {
      "unwatch": "fn()"
    },
    "ret315": {
      "unwatch": "fn()"
    },
    "ret316": {
      "unwatch": "fn()"
    },
    "ret317": {
      "unwatch": "fn()"
    },
    "ret318": {
      "unwatch": "fn()"
    },
    "ret319": {
      "unwatch": "fn()"
    },
    "ret320": {
      "unwatch": "fn()"
    },
    "ret321": {
      "unwatch": "fn()"
    },
    "ret322": {
      "unwatch": "fn()"
    },
    "ret323": {
      "unwatch": "fn()"
    },
    "ret324": {
      "unwatch": "fn()"
    },
    "ret325": {
      "unwatch": "fn()"
    },
    "ret326": {
      "unwatch": "fn()"
    },
    "ret327": {
      "unwatch": "fn()"
    },
    "ret328": {
      "unwatch": "fn()"
    },
    "ret329": {
      "unwatch": "fn()"
    },
    "ret330": {
      "unwatch": "fn()"
    },
    "ret331": {
      "unwatch": "fn()"
    },
    "ret332": {
      "unwatch": "fn()"
    },
    "ret333": {
      "unwatch": "fn()"
    },
    "ret334": {
      "unwatch": "fn()"
    },
    "ret335": {
      "unwatch": "fn()"
    },
    "ret336": {
      "unwatch": "fn()"
    },
    "ret337": {
      "unwatch": "fn()"
    },
    "ret338": {
      "unwatch": "fn()"
    },
    "ret339": {
      "unwatch": "fn()"
    },
    "ret340": {
      "unwatch": "fn()"
    },
    "ret341": {
      "unwatch": "fn()"
    },
    "ret342": {
      "unwatch": "fn()"
    },
    "ret343": {
      "unwatch": "fn()"
    },
    "ret344": {
      "unwatch": "fn()"
    },
    "ret345": {
      "unwatch": "fn()"
    },
    "ret346": {
      "unwatch": "fn()"
    },
    "ret347": {
      "unwatch": "fn()"
    },
    "ret348": {
      "unwatch": "fn()"
    },
    "ret349": {
      "unwatch": "fn()"
    },
    "ret350": {
      "unwatch": "fn()"
    },
    "ret351": {
      "unwatch": "fn()"
    },
    "ret352": {
      "unwatch": "fn()"
    },
    "ret353": {
      "unwatch": "fn()"
    },
    "ret354": {
      "unwatch": "fn()"
    },
    "ret355": {
      "unwatch": "fn()"
    },
    "ret356": {
      "unwatch": "fn()"
    },
    "ret357": {
      "unwatch": "fn()"
    },
    "ret358": {
      "unwatch": "fn()"
    },
    "ret359": {
      "unwatch": "fn()"
    },
    "ret360": {
      "unwatch": "fn()"
    },
    "ret361": {
      "unwatch": "fn()"
    },
    "ret362": {
      "unwatch": "fn()"
    },
    "ret363": {
      "unwatch": "fn()"
    },
    "ret364": {
      "unwatch": "fn()"
    },
    "ret365": {
      "unwatch": "fn()"
    },
    "ret366": {
      "unwatch": "fn()"
    },
    "ret367": {
      "unwatch": "fn()"
    },
    "ret368": {
      "unwatch": "fn()"
    },
    "ret369": {
      "unwatch": "fn()"
    },
    "ret370": {
      "unwatch": "fn()"
    },
    "ret371": {
      "unwatch": "fn()"
    },
    "ret372": {
      "unwatch": "fn()"
    },
    "ret373": {
      "unwatch": "fn()"
    },
    "ret374": {
      "unwatch": "fn()"
    },
    "ret375": {
      "unwatch": "fn()"
    },
    "ret376": {
      "unwatch": "fn()"
    },
    "ret377": {
      "unwatch": "fn()"
    },
    "ret378": {
      "unwatch": "fn()"
    },
    "ret379": {
      "unwatch": "fn()"
    },
    "ret380": {
      "unwatch": "fn()"
    },
    "ret381": {
      "unwatch": "fn()"
    },
    "ret382": {
      "unwatch": "fn()"
    },
    "ret383": {
      "unwatch": "fn()"
    },
    "ret384": {
      "unwatch": "fn()"
    },
    "ret385": {
      "unwatch": "fn()"
    },
    "ret386": {
      "unwatch": "fn()"
    },
    "ret387": {
      "unwatch": "fn()"
    },
    "ret388": {
      "unwatch": "fn()"
    },
    "ret389": {
      "unwatch": "fn()"
    },
    "ret390": {
      "unwatch": "fn()"
    },
    "ret391": {
      "unwatch": "fn()"
    },
    "ret392": {
      "unwatch": "fn()"
    },
    "ret393": {
      "unwatch": "fn()"
    },
    "ret394": {
      "unwatch": "fn()"
    },
    "ret395": {
      "unwatch": "fn()"
    },
    "ret396": {
      "unwatch": "fn()"
    },
    "ret397": {
      "unwatch": "fn()"
    },
    "ret398": {
      "unwatch": "fn()"
    },
    "ret399": {
      "unwatch": "fn()"
    },
    "ret400": {
      "unwatch": "fn()"
    },
    "ret401": {
      "unwatch": "fn()"
    },
    "ret402": {
      "unwatch": "fn()"
    },
    "ret403": {
      "unwatch": "fn()"
    },
    "ret404": {
      "unwatch": "fn()"
    },
    "ret405": {
      "unwatch": "fn()"
    },
    "ret406": {
      "unwatch": "fn()"
    },
    "ret407": {
      "unwatch": "fn()"
    },
    "ret408": {
      "unwatch": "fn()"
    },
    "ret409": {
      "unwatch": "fn()"
    },
    "ret410": {
      "unwatch": "fn()"
    },
    "ret411": {
      "unwatch": "fn()"
    },
    "ret412": {
      "unwatch": "fn()"
    },
    "ret413": {
      "unwatch": "fn()"
    },
    "ret414": {
      "unwatch": "fn()"
    },
    "ret415": {
      "unwatch": "fn()"
    },
    "ret416": {
      "unwatch": "fn()"
    },
    "ret417": {
      "unwatch": "fn()"
    },
    "ret418": {
      "unwatch": "fn()"
    },
    "ret419": {
      "unwatch": "fn()"
    },
    "ret420": {
      "unwatch": "fn()"
    },
    "ret421": {
      "unwatch": "fn()"
    },
    "ret422": {
      "unwatch": "fn()"
    },
    "ret423": {
      "unwatch": "fn()"
    },
    "ret424": {
      "unwatch": "fn()"
    },
    "ret425": {
      "unwatch": "fn()"
    },
    "ret426": {
      "unwatch": "fn()"
    },
    "ret427": {
      "unwatch": "fn()"
    },
    "ret428": {
      "unwatch": "fn()"
    },
    "ret429": {
      "unwatch": "fn()"
    },
    "ret430": {
      "unwatch": "fn()"
    },
    "ret431": {
      "unwatch": "fn()"
    },
    "ret432": {
      "unwatch": "fn()"
    },
    "ret433": {
      "unwatch": "fn()"
    },
    "ret434": {
      "unwatch": "fn()"
    },
    "ret435": {
      "unwatch": "fn()"
    },
    "ret436": {
      "unwatch": "fn()"
    },
    "ret437": {
      "unwatch": "fn()"
    },
    "ret438": {
      "unwatch": "fn()"
    },
    "ret439": {
      "unwatch": "fn()"
    },
    "ret440": {
      "unwatch": "fn()"
    },
    "ret441": {
      "unwatch": "fn()"
    },
    "ret442": {
      "unwatch": "fn()"
    },
    "ret443": {
      "unwatch": "fn()"
    },
    "ret444": {
      "unwatch": "fn()"
    },
    "ret445": {
      "unwatch": "fn()"
    },
    "ret446": {
      "unwatch": "fn()"
    },
    "ret447": {
      "unwatch": "fn()"
    },
    "ret448": {
      "unwatch": "fn()"
    },
    "ret449": {
      "unwatch": "fn()"
    },
    "ret450": {
      "unwatch": "fn()"
    },
    "ret451": {
      "unwatch": "fn()"
    },
    "ret452": {
      "unwatch": "fn()"
    },
    "ret453": {
      "unwatch": "fn()"
    },
    "ret454": {
      "unwatch": "fn()"
    },
    "ret455": {
      "unwatch": "fn()"
    },
    "ret456": {
      "unwatch": "fn()"
    },
    "ret457": {
      "unwatch": "fn()"
    },
    "ret458": {
      "unwatch": "fn()"
    },
    "ret459": {
      "unwatch": "fn()"
    },
    "ret460": {
      "unwatch": "fn()"
    },
    "ret461": {
      "unwatch": "fn()"
    },
    "ret462": {
      "unwatch": "fn()"
    },
    "ret463": {
      "unwatch": "fn()"
    },
    "ret464": {
      "unwatch": "fn()"
    },
    "ret465": {
      "unwatch": "fn()"
    },
    "ret466": {
      "unwatch": "fn()"
    },
    "ret467": {
      "unwatch": "fn()"
    },
    "ret468": {
      "unwatch": "fn()"
    },
    "ret469": {
      "unwatch": "fn()"
    },
    "ret470": {
      "unwatch": "fn()"
    },
    "ret471": {
      "unwatch": "fn()"
    },
    "ret472": {
      "unwatch": "fn()"
    },
    "ret473": {
      "unwatch": "fn()"
    },
    "ret474": {
      "unwatch": "fn()"
    },
    "ret475": {
      "unwatch": "fn()"
    },
    "ret476": {
      "unwatch": "fn()"
    },
    "ret477": {
      "unwatch": "fn()"
    },
    "ret478": {
      "unwatch": "fn()"
    },
    "ret479": {
      "unwatch": "fn()"
    },
    "ret480": {
      "unwatch": "fn()"
    },
    "ret481": {
      "unwatch": "fn()"
    },
    "ret482": {
      "unwatch": "fn()"
    },
    "ret483": {
      "unwatch": "fn()"
    },
    "ret484": {
      "unwatch": "fn()"
    },
    "ret485": {
      "unwatch": "fn()"
    },
    "ret486": {
      "unwatch": "fn()"
    },
    "ret487": {
      "unwatch": "fn()"
    },
    "ret488": {
      "unwatch": "fn()"
    },
    "ret489": {
      "unwatch": "fn()"
    },
    "ret490": {
      "unwatch": "fn()"
    },
    "ret491": {
      "unwatch": "fn()"
    },
    "ret492": {
      "unwatch": "fn()"
    },
    "ret493": {
      "unwatch": "fn()"
    },
    "ret494": {
      "unwatch": "fn()"
    },
    "ret495": {
      "unwatch": "fn()"
    },
    "ret496": {
      "unwatch": "fn()"
    },
    "ret497": {
      "unwatch": "fn()"
    },
    "ret498": {
      "unwatch": "fn()"
    },
    "ret499": {
      "unwatch": "fn()"
    },
    "ret500": {
      "unwatch": "fn()"
    },
    "ret501": {
      "unwatch": "fn()"
    },
    "ret502": {
      "unwatch": "fn()"
    },
    "ret503": {
      "unwatch": "fn()"
    },
    "ret504": {
      "unwatch": "fn()"
    },
    "ret505": {
      "unwatch": "fn()"
    },
    "ret506": {
      "unwatch": "fn()"
    },
    "ret507": {
      "unwatch": "fn()"
    },
    "ret508": {
      "unwatch": "fn()"
    },
    "ret509": {
      "unwatch": "fn()"
    },
    "ret510": {
      "unwatch": "fn()"
    },
    "ret511": {
      "unwatch": "fn()"
    },
    "ret512": {
      "unwatch": "fn()"
    },
    "ret513": {
      "unwatch": "fn()"
    },
    "ret514": {
      "unwatch": "fn()"
    },
    "ret515": {
      "unwatch": "fn()"
    },
    "ret516": {
      "unwatch": "fn()"
    },
    "ret517": {
      "unwatch": "fn()"
    },
    "ret518": {
      "unwatch": "fn()"
    },
    "ret519": {
      "unwatch": "fn()"
    },
    "ret520": {
      "unwatch": "fn()"
    },
    "ret521": {
      "unwatch": "fn()"
    },
    "ret522": {
      "unwatch": "fn()"
    },
    "ret523": {
      "unwatch": "fn()"
    },
    "ret524": {
      "unwatch": "fn()"
    },
    "ret525": {
      "unwatch": "fn()"
    },
    "ret526": {
      "unwatch": "fn()"
    },
    "ret527": {
      "unwatch": "fn()"
    },
    "ret528": {
      "unwatch": "fn()"
    },
    "ret529": {
      "unwatch": "fn()"
    },
    "ret530": {
      "unwatch": "fn()"
    },
    "ret531": {
      "unwatch": "fn()"
    },
    "ret532": {
      "unwatch": "fn()"
    },
    "ret533": {
      "unwatch": "fn()"
    },
    "ret534": {
      "unwatch": "fn()"
    },
    "ret535": {
      "unwatch": "fn()"
    },
    "ret536": {
      "unwatch": "fn()"
    },
    "ret537": {
      "unwatch": "fn()"
    },
    "ret538": {
      "unwatch": "fn()"
    },
    "ret539": {
      "unwatch": "fn()"
    },
    "ret540": {
      "unwatch": "fn()"
    },
    "ret541": {
      "unwatch": "fn()"
    },
    "ret542": {
      "unwatch": "fn()"
    },
    "ret543": {
      "unwatch": "fn()"
    },
    "ret544": {
      "unwatch": "fn()"
    },
    "ret545": {
      "unwatch": "fn()"
    },
    "ret546": {
      "unwatch": "fn()"
    },
    "ret547": {
      "unwatch": "fn()"
    },
    "ret548": {
      "unwatch": "fn()"
    },
    "ret549": {
      "unwatch": "fn()"
    },
    "ret550": {
      "unwatch": "fn()"
    },
    "ret551": {
      "unwatch": "fn()"
    },
    "ret552": {
      "unwatch": "fn()"
    },
    "ret553": {
      "unwatch": "fn()"
    },
    "ret554": {
      "unwatch": "fn()"
    },
    "ret555": {
      "unwatch": "fn()"
    },
    "ret556": {
      "unwatch": "fn()"
    },
    "ret557": {
      "unwatch": "fn()"
    },
    "ret558": {
      "unwatch": "fn()"
    },
    "ret559": {
      "unwatch": "fn()"
    },
    "ret560": {
      "unwatch": "fn()"
    },
    "ret561": {
      "unwatch": "fn()"
    },
    "ret562": {
      "unwatch": "fn()"
    },
    "ret563": {
      "unwatch": "fn()"
    },
    "ret564": {
      "unwatch": "fn()"
    },
    "ret565": {
      "unwatch": "fn()"
    },
    "ret566": {
      "unwatch": "fn()"
    },
    "ret567": {
      "unwatch": "fn()"
    },
    "ret568": {
      "unwatch": "fn()"
    },
    "ret569": {
      "unwatch": "fn()"
    },
    "ret570": {
      "unwatch": "fn()"
    },
    "ret571": {
      "unwatch": "fn()"
    },
    "ret572": {
      "unwatch": "fn()"
    },
    "ret573": {
      "unwatch": "fn()"
    },
    "ret574": {
      "unwatch": "fn()"
    },
    "ret575": {
      "unwatch": "fn()"
    },
    "ret576": {
      "unwatch": "fn()"
    },
    "ret577": {
      "unwatch": "fn()"
    },
    "ret578": {
      "unwatch": "fn()"
    },
    "ret579": {
      "unwatch": "fn()"
    },
    "ret580": {
      "unwatch": "fn()"
    },
    "ret581": {
      "unwatch": "fn()"
    },
    "ret582": {
      "unwatch": "fn()"
    },
    "ret583": {
      "unwatch": "fn()"
    },
    "ret584": {
      "unwatch": "fn()"
    },
    "ret585": {
      "unwatch": "fn()"
    },
    "ret586": {
      "unwatch": "fn()"
    },
    "ret587": {
      "unwatch": "fn()"
    },
    "ret588": {
      "unwatch": "fn()"
    },
    "ret589": {
      "unwatch": "fn()"
    },
    "ret590": {
      "unwatch": "fn()"
    },
    "ret591": {
      "unwatch": "fn()"
    },
    "ret592": {
      "unwatch": "fn()"
    },
    "ret593": {
      "unwatch": "fn()"
    },
    "ret594": {
      "unwatch": "fn()"
    },
    "ret595": {
      "unwatch": "fn()"
    },
    "ret596": {
      "unwatch": "fn()"
    },
    "ret597": {
      "unwatch": "fn()"
    },
    "ret598": {
      "unwatch": "fn()"
    },
    "ret599": {
      "unwatch": "fn()"
    },
    "ret600": {
      "unwatch": "fn()"
    },
    "ret601": {
      "unwatch": "fn()"
    },
    "ret602": {
      "unwatch": "fn()"
    },
    "ret603": {
      "unwatch": "fn()"
    },
    "ret604": {
      "unwatch": "fn()"
    },
    "ret605": {
      "unwatch": "fn()"
    },
    "ret606": {
      "unwatch": "fn()"
    },
    "ret607": {
      "unwatch": "fn()"
    },
    "ret608": {
      "unwatch": "fn()"
    },
    "ret609": {
      "unwatch": "fn()"
    },
    "ret610": {
      "unwatch": "fn()"
    },
    "ret611": {
      "unwatch": "fn()"
    },
    "ret612": {
      "unwatch": "fn()"
    },
    "ret613": {
      "unwatch": "fn()"
    },
    "ret614": {
      "unwatch": "fn()"
    },
    "ret615": {
      "unwatch": "fn()"
    },
    "ret616": {
      "unwatch": "fn()"
    },
    "ret617": {
      "unwatch": "fn()"
    },
    "ret618": {
      "unwatch": "fn()"
    },
    "ret619": {
      "unwatch": "fn()"
    },
    "ret620": {
      "unwatch": "fn()"
    },
    "ret621": {
      "unwatch": "fn()"
    },
    "ret622": {
      "unwatch": "fn()"
    },
    "ret623": {
      "unwatch": "fn()"
    },
    "ret624": {
      "unwatch": "fn()"
    },
    "ret625": {
      "unwatch": "fn()"
    },
    "ret626": {
      "unwatch": "fn()"
    },
    "ret627": {
      "unwatch": "fn()"
    },
    "ret628": {
      "unwatch": "fn()"
    },
    "ret629": {
      "unwatch": "fn()"
    },
    "ret630": {
      "unwatch": "fn()"
    },
    "ret631": {
      "unwatch": "fn()"
    },
    "ret632": {
      "unwatch": "fn()"
    },
    "ret633": {
      "unwatch": "fn()"
    },
    "ret634": {
      "unwatch": "fn()"
    },
    "ret635": {
      "unwatch": "fn()"
    },
    "ret636": {
      "unwatch": "fn()"
    },
    "ret637": {
      "unwatch": "fn()"
    },
    "ret638": {
      "unwatch": "fn()"
    },
    "ret639": {
      "unwatch": "fn()"
    },
    "ret640": {
      "unwatch": "fn()"
    },
    "ret641": {
      "unwatch": "fn()"
    },
    "ret642": {
      "unwatch": "fn()"
    },
    "ret643": {
      "unwatch": "fn()"
    },
    "ret644": {
      "unwatch": "fn()"
    },
    "ret645": {
      "unwatch": "fn()"
    },
    "ret646": {
      "unwatch": "fn()"
    },
    "ret647": {
      "unwatch": "fn()"
    },
    "ret648": {
      "unwatch": "fn()"
    },
    "ret649": {
      "unwatch": "fn()"
    },
    "ret650": {
      "unwatch": "fn()"
    },
    "ret651": {
      "unwatch": "fn()"
    },
    "ret652": {
      "unwatch": "fn()"
    },
    "ret653": {
      "unwatch": "fn()"
    },
    "ret654": {
      "unwatch": "fn()"
    },
    "ret655": {
      "unwatch": "fn()"
    },
    "ret656": {
      "unwatch": "fn()"
    },
    "ret657": {
      "unwatch": "fn()"
    },
    "ret658": {
      "unwatch": "fn()"
    },
    "ret659": {
      "unwatch": "fn()"
    },
    "ret660": {
      "unwatch": "fn()"
    },
    "ret661": {
      "unwatch": "fn()"
    },
    "ret662": {
      "unwatch": "fn()"
    },
    "ret663": {
      "unwatch": "fn()"
    },
    "ret664": {
      "unwatch": "fn()"
    },
    "ret665": {
      "unwatch": "fn()"
    },
    "ret666": {
      "unwatch": "fn()"
    },
    "ret667": {
      "unwatch": "fn()"
    },
    "ret668": {
      "unwatch": "fn()"
    },
    "ret669": {
      "unwatch": "fn()"
    },
    "ret670": {
      "unwatch": "fn()"
    },
    "ret671": {
      "unwatch": "fn()"
    },
    "ret672": {
      "unwatch": "fn()"
    },
    "ret673": {
      "unwatch": "fn()"
    },
    "ret674": {
      "unwatch": "fn()"
    },
    "ret675": {
      "unwatch": "fn()"
    },
    "ret676": {
      "unwatch": "fn()"
    },
    "ret677": {
      "unwatch": "fn()"
    },
    "ret678": {
      "unwatch": "fn()"
    },
    "ret679": {
      "unwatch": "fn()"
    },
    "ret680": {
      "unwatch": "fn()"
    },
    "ret681": {
      "unwatch": "fn()"
    },
    "ret682": {
      "unwatch": "fn()"
    },
    "ret683": {
      "unwatch": "fn()"
    },
    "ret684": {
      "unwatch": "fn()"
    },
    "ret685": {
      "unwatch": "fn()"
    },
    "ret686": {
      "unwatch": "fn()"
    },
    "ret687": {
      "unwatch": "fn()"
    },
    "ret688": {
      "unwatch": "fn()"
    },
    "ret689": {
      "unwatch": "fn()"
    },
    "ret690": {
      "unwatch": "fn()"
    },
    "ret691": {
      "unwatch": "fn()"
    },
    "ret692": {
      "unwatch": "fn()"
    },
    "ret693": {
      "unwatch": "fn()"
    },
    "ret694": {
      "unwatch": "fn()"
    },
    "ret695": {
      "unwatch": "fn()"
    },
    "ret696": {
      "unwatch": "fn()"
    },
    "ret697": {
      "unwatch": "fn()"
    },
    "ret698": {
      "unwatch": "fn()"
    },
    "ret699": {
      "unwatch": "fn()"
    },
    "ret700": {
      "unwatch": "fn()"
    },
    "ret701": {
      "unwatch": "fn()"
    },
    "ret702": {
      "unwatch": "fn()"
    },
    "ret703": {
      "unwatch": "fn()"
    },
    "ret704": {
      "unwatch": "fn()"
    },
    "ret705": {
      "unwatch": "fn()"
    },
    "ret706": {
      "unwatch": "fn()"
    },
    "ret707": {
      "unwatch": "fn()"
    },
    "ret708": {
      "unwatch": "fn()"
    },
    "ret709": {
      "unwatch": "fn()"
    },
    "ret710": {
      "unwatch": "fn()"
    },
    "ret711": {
      "unwatch": "fn()"
    },
    "ret712": {
      "unwatch": "fn()"
    },
    "ret713": {
      "unwatch": "fn()"
    },
    "ret714": {
      "unwatch": "fn()"
    },
    "ret715": {
      "unwatch": "fn()"
    },
    "ret716": {
      "unwatch": "fn()"
    },
    "ret717": {
      "unwatch": "fn()"
    },
    "ret718": {
      "unwatch": "fn()"
    },
    "ret719": {
      "unwatch": "fn()"
    },
    "ret720": {
      "unwatch": "fn()"
    },
    "ret721": {
      "unwatch": "fn()"
    },
    "ret722": {
      "unwatch": "fn()"
    },
    "ret723": {
      "unwatch": "fn()"
    },
    "ret724": {
      "unwatch": "fn()"
    },
    "ret725": {
      "unwatch": "fn()"
    },
    "ret726": {
      "unwatch": "fn()"
    },
    "ret727": {
      "unwatch": "fn()"
    },
    "ret728": {
      "unwatch": "fn()"
    },
    "ret729": {
      "unwatch": "fn()"
    },
    "ret730": {
      "unwatch": "fn()"
    },
    "ret731": {
      "unwatch": "fn()"
    },
    "ret732": {
      "unwatch": "fn()"
    },
    "ret733": {
      "unwatch": "fn()"
    },
    "ret734": {
      "unwatch": "fn()"
    },
    "ret735": {
      "unwatch": "fn()"
    },
    "ret736": {
      "unwatch": "fn()"
    },
    "ret737": {
      "unwatch": "fn()"
    },
    "ret738": {
      "unwatch": "fn()"
    },
    "ret739": {
      "unwatch": "fn()"
    },
    "ret740": {
      "unwatch": "fn()"
    },
    "ret741": {
      "unwatch": "fn()"
    },
    "ret742": {
      "unwatch": "fn()"
    },
    "ret743": {
      "unwatch": "fn()"
    },
    "ret744": {
      "unwatch": "fn()"
    },
    "ret745": {
      "unwatch": "fn()"
    },
    "ret746": {
      "unwatch": "fn()"
    },
    "ret747": {
      "unwatch": "fn()"
    },
    "ret748": {
      "unwatch": "fn()"
    },
    "ret749": {
      "unwatch": "fn()"
    },
    "ret750": {
      "unwatch": "fn()"
    },
    "ret751": {
      "unwatch": "fn()"
    },
    "ret752": {
      "unwatch": "fn()"
    },
    "ret753": {
      "unwatch": "fn()"
    },
    "ret754": {
      "unwatch": "fn()"
    },
    "ret755": {
      "unwatch": "fn()"
    },
    "ret756": {
      "unwatch": "fn()"
    },
    "ret757": {
      "unwatch": "fn()"
    },
    "ret758": {
      "unwatch": "fn()"
    },
    "ret759": {
      "unwatch": "fn()"
    },
    "ret760": {
      "unwatch": "fn()"
    },
    "ret761": {
      "unwatch": "fn()"
    },
    "ret762": {
      "unwatch": "fn()"
    },
    "ret763": {
      "unwatch": "fn()"
    },
    "ret764": {
      "unwatch": "fn()"
    },
    "ret765": {
      "unwatch": "fn()"
    },
    "ret766": {
      "unwatch": "fn()"
    },
    "ret767": {
      "unwatch": "fn()"
    },
    "ret768": {
      "unwatch": "fn()"
    },
    "ret769": {
      "unwatch": "fn()"
    },
    "ret770": {
      "unwatch": "fn()"
    },
    "ret771": {
      "unwatch": "fn()"
    },
    "ret772": {
      "unwatch": "fn()"
    },
    "ret773": {
      "unwatch": "fn()"
    },
    "ret774": {
      "unwatch": "fn()"
    },
    "ret775": {
      "unwatch": "fn()"
    },
    "ret776": {
      "unwatch": "fn()"
    },
    "ret777": {
      "unwatch": "fn()"
    },
    "ret778": {
      "unwatch": "fn()"
    },
    "ret779": {
      "unwatch": "fn()"
    },
    "ret780": {
      "unwatch": "fn()"
    },
    "ret781": {
      "unwatch": "fn()"
    },
    "ret782": {
      "unwatch": "fn()"
    },
    "ret783": {
      "unwatch": "fn()"
    },
    "ret784": {
      "unwatch": "fn()"
    },
    "ret785": {
      "unwatch": "fn()"
    },
    "ret786": {
      "unwatch": "fn()"
    },
    "ret787": {
      "unwatch": "fn()"
    },
    "ret788": {
      "unwatch": "fn()"
    },
    "ret789": {
      "unwatch": "fn()"
    },
    "ret790": {
      "unwatch": "fn()"
    },
    "ret791": {
      "unwatch": "fn()"
    },
    "ret792": {
      "unwatch": "fn()"
    },
    "ret793": {
      "unwatch": "fn()"
    },
    "ret794": {
      "unwatch": "fn()"
    },
    "ret795": {
      "unwatch": "fn()"
    },
    "ret796": {
      "unwatch": "fn()"
    },
    "ret797": {
      "unwatch": "fn()"
    },
    "ret798": {
      "unwatch": "fn()"
    },
    "ret799": {
      "unwatch": "fn()"
    },
    "ret800": {
      "unwatch": "fn()"
    },
    "ret801": {
      "unwatch": "fn()"
    },
    "ret802": {
      "unwatch": "fn()"
    },
    "ret803": {
      "unwatch": "fn()"
    },
    "ret804": {
      "unwatch": "fn()"
    },
    "ret805": {
      "unwatch": "fn()"
    },
    "ret806": {
      "unwatch": "fn()"
    },
    "ret807": {
      "unwatch": "fn()"
    },
    "ret808": {
      "unwatch": "fn()"
    },
    "ret809": {
      "unwatch": "fn()"
    },
    "ret810": {
      "unwatch": "fn()"
    },
    "ret811": {
      "unwatch": "fn()"
    },
    "ret812": {
      "unwatch": "fn()"
    },
    "ret813": {
      "unwatch": "fn()"
    },
    "ret814": {
      "unwatch": "fn()"
    },
    "ret815": {
      "unwatch": "fn()"
    },
    "ret816": {
      "unwatch": "fn()"
    },
    "ret817": {
      "unwatch": "fn()"
    },
    "ret818": {
      "unwatch": "fn()"
    },
    "ret819": {
      "unwatch": "fn()"
    },
    "ret820": {
      "unwatch": "fn()"
    },
    "ret821": {
      "unwatch": "fn()"
    },
    "ret822": {
      "unwatch": "fn()"
    },
    "ret823": {
      "unwatch": "fn()"
    },
    "ret824": {
      "unwatch": "fn()"
    },
    "ret825": {
      "unwatch": "fn()"
    },
    "ret826": {
      "unwatch": "fn()"
    },
    "ret827": {
      "unwatch": "fn()"
    },
    "ret828": {
      "unwatch": "fn()"
    },
    "ret829": {
      "unwatch": "fn()"
    },
    "ret830": {
      "unwatch": "fn()"
    },
    "ret831": {
      "unwatch": "fn()"
    },
    "ret832": {
      "unwatch": "fn()"
    },
    "ret833": {
      "unwatch": "fn()"
    },
    "ret834": {
      "unwatch": "fn()"
    },
    "ret835": {
      "unwatch": "fn()"
    },
    "ret836": {
      "unwatch": "fn()"
    },
    "ret837": {
      "unwatch": "fn()"
    },
    "ret838": {
      "unwatch": "fn()"
    },
    "ret839": {
      "unwatch": "fn()"
    },
    "ret840": {
      "unwatch": "fn()"
    },
    "ret841": {
      "unwatch": "fn()"
    },
    "ret842": {
      "unwatch": "fn()"
    },
    "ret843": {
      "unwatch": "fn()"
    },
    "ret844": {
      "unwatch": "fn()"
    },
    "ret845": {
      "unwatch": "fn()"
    },
    "ret846": {
      "unwatch": "fn()"
    },
    "ret847": {
      "unwatch": "fn()"
    },
    "ret848": {
      "unwatch": "fn()"
    },
    "ret849": {
      "unwatch": "fn()"
    },
    "ret850": {
      "unwatch": "fn()"
    },
    "ret851": {
      "unwatch": "fn()"
    },
    "ret852": {
      "unwatch": "fn()"
    },
    "ret853": {
      "unwatch": "fn()"
    },
    "ret854": {
      "unwatch": "fn()"
    },
    "ret855": {
      "unwatch": "fn()"
    },
    "ret856": {
      "unwatch": "fn()"
    },
    "ret857": {
      "unwatch": "fn()"
    },
    "ret858": {
      "unwatch": "fn()"
    },
    "ret859": {
      "unwatch": "fn()"
    },
    "ret860": {
      "unwatch": "fn()"
    },
    "ret861": {
      "unwatch": "fn()"
    },
    "ret862": {
      "unwatch": "fn()"
    },
    "ret863": {
      "unwatch": "fn()"
    },
    "ret864": {
      "unwatch": "fn()"
    },
    "ret865": {
      "unwatch": "fn()"
    },
    "ret866": {
      "unwatch": "fn()"
    },
    "ret867": {
      "unwatch": "fn()"
    },
    "ret868": {
      "unwatch": "fn()"
    },
    "ret869": {
      "unwatch": "fn()"
    },
    "ret870": {
      "unwatch": "fn()"
    },
    "ret871": {
      "unwatch": "fn()"
    },
    "ret872": {
      "unwatch": "fn()"
    },
    "ret873": {
      "unwatch": "fn()"
    },
    "ret874": {
      "unwatch": "fn()"
    },
    "ret875": {
      "unwatch": "fn()"
    },
    "ret876": {
      "unwatch": "fn()"
    },
    "ret877": {
      "unwatch": "fn()"
    },
    "ret878": {
      "unwatch": "fn()"
    },
    "ret879": {
      "unwatch": "fn()"
    },
    "ret880": {
      "unwatch": "fn()"
    },
    "ret881": {
      "unwatch": "fn()"
    },
    "ret882": {
      "unwatch": "fn()"
    },
    "ret883": {
      "unwatch": "fn()"
    },
    "ret884": {
      "unwatch": "fn()"
    },
    "ret885": {
      "unwatch": "fn()"
    },
    "ret886": {
      "unwatch": "fn()"
    },
    "ret887": {
      "unwatch": "fn()"
    },
    "ret888": {
      "unwatch": "fn()"
    },
    "ret889": {
      "unwatch": "fn()"
    },
    "ret890": {
      "unwatch": "fn()"
    },
    "ret891": {
      "unwatch": "fn()"
    },
    "ret892": {
      "unwatch": "fn()"
    },
    "ret893": {
      "unwatch": "fn()"
    },
    "ret894": {
      "unwatch": "fn()"
    },
    "ret895": {
      "unwatch": "fn()"
    },
    "ret896": {
      "unwatch": "fn()"
    },
    "ret897": {
      "unwatch": "fn()"
    },
    "ret898": {
      "unwatch": "fn()"
    },
    "ret899": {
      "unwatch": "fn()"
    },
    "ret900": {
      "unwatch": "fn()"
    },
    "ret901": {
      "unwatch": "fn()"
    },
    "ret902": {
      "unwatch": "fn()"
    },
    "ret903": {
      "unwatch": "fn()"
    },
    "ret904": {
      "unwatch": "fn()"
    },
    "ret905": {
      "unwatch": "fn()"
    },
    "ret906": {
      "unwatch": "fn()"
    },
    "ret907": {
      "unwatch": "fn()"
    },
    "ret908": {
      "unwatch": "fn()"
    },
    "ret909": {
      "unwatch": "fn()"
    },
    "ret910": {
      "unwatch": "fn()"
    },
    "ret911": {
      "unwatch": "fn()"
    },
    "ret912": {
      "unwatch": "fn()"
    },
    "ret913": {
      "unwatch": "fn()"
    },
    "ret914": {
      "unwatch": "fn()"
    },
    "ret915": {
      "unwatch": "fn()"
    },
    "ret916": {
      "unwatch": "fn()"
    },
    "ret917": {
      "unwatch": "fn()"
    },
    "ret918": {
      "unwatch": "fn()"
    },
    "ret919": {
      "unwatch": "fn()"
    },
    "ret920": {
      "unwatch": "fn()"
    },
    "ret921": {
      "unwatch": "fn()"
    },
    "ret922": {
      "unwatch": "fn()"
    },
    "ret923": {
      "unwatch": "fn()"
    },
    "ret924": {
      "unwatch": "fn()"
    },
    "ret925": {
      "unwatch": "fn()"
    },
    "ret926": {
      "unwatch": "fn()"
    },
    "ret927": {
      "unwatch": "fn()"
    },
    "ret928": {
      "unwatch": "fn()"
    },
    "ret929": {
      "unwatch": "fn()"
    },
    "ret930": {
      "unwatch": "fn()"
    },
    "ret931": {
      "unwatch": "fn()"
    },
    "ret932": {
      "unwatch": "fn()"
    },
    "ret933": {
      "unwatch": "fn()"
    },
    "ret934": {
      "unwatch": "fn()"
    },
    "ret935": {
      "unwatch": "fn()"
    },
    "ret936": {
      "unwatch": "fn()"
    },
    "ret937": {
      "unwatch": "fn()"
    },
    "ret938": {
      "unwatch": "fn()"
    },
    "ret939": {
      "unwatch": "fn()"
    },
    "ret940": {
      "unwatch": "fn()"
    },
    "ret941": {
      "unwatch": "fn()"
    },
    "ret942": {
      "unwatch": "fn()"
    },
    "ret943": {
      "unwatch": "fn()"
    },
    "ret944": {
      "unwatch": "fn()"
    },
    "ret945": {
      "unwatch": "fn()"
    },
    "ret946": {
      "unwatch": "fn()"
    },
    "ret947": {
      "unwatch": "fn()"
    },
    "ret948": {
      "unwatch": "fn()"
    },
    "ret949": {
      "unwatch": "fn()"
    },
    "ret950": {
      "unwatch": "fn()"
    },
    "ret951": {
      "unwatch": "fn()"
    },
    "ret952": {
      "unwatch": "fn()"
    }
  }
}
