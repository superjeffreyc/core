{
  "dojox": {
    "form": {
      "_FormSelectWidget": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "active": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret",
          "alt": "string",
          "aria-label": "string",
          "attachScope": "Object",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "cssStateNodes": "Object",
          "dir": "string",
          "disabled": "bool",
          "domNode": "HTMLElement",
          "focused": "bool",
          "hovering": "bool",
          "id": "string",
          "intermediateChanges": "bool",
          "labelAttr": "Object",
          "lang": "string",
          "loadChildrenOnOpen": "bool",
          "multiple": "bool",
          "name": "string",
          "onFetch": "Function",
          "onLoadDeferred": "Object",
          "options": "Object",
          "ownerDocument": "Object",
          "query": "Object",
          "queryOptions": "Object",
          "readOnly": "bool",
          "scrollOnFocus": "bool",
          "searchContainerNode": "bool",
          "sortByLabel": "bool",
          "srcNodeRef": "HTMLElement",
          "store": "Object",
          "style": "string",
          "tabIndex": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "type": "string",
          "value": "string",
          "addOption": "fn(option: dijit.form._FormSelectWidget.__SelectOption)",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "compare": "fn(val1: ?, val2: ?) -> number",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn()",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "focus": "fn()",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getOptions": "fn(valueOrIdx: ?) -> ?",
          "getParent": "fn() -> ?",
          "getValue": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeOption": "fn(valueOrIdx: String)",
          "reset": "fn()",
          "setAttribute": "fn(attr: String, value: ?)",
          "setDisabled": "fn(disabled: bool)",
          "setStore": "fn(store: dojo.store.api.Store, selectedValue: ?, fetchArgs: Object) -> ?",
          "setValue": "fn(value: String)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "undo": "fn()",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "updateOption": "fn(newOption: dijit.form._FormSelectWidget.__SelectOption)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onClick": "fn(event: ?)",
          "onClose": "fn() -> bool",
          "onDblClick": "fn(event: ?)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onSetStore": "fn()",
          "onShow": "fn()"
        },
        "__SelectOption": {
          "disabled": "bool",
          "label": "string",
          "selected": "bool",
          "value": "string"
        }
      },
      "_SelectStackMixin": {
        "!type": "fn()",
        "prototype": {
          "stackId": "string",
          "stackPrefix": "string",
          "attr": "fn(name: String, value: Object) -> ?",
          "destroy": "fn()",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "onAddChild": "fn(pane: dijit._Widget, insertIndex: number)",
          "onRemoveChild": "fn(pane: dijit._Widget)",
          "onSelectChild": "fn(pane: dijit._Widget)",
          "onStartup": "fn(info: Object)"
        }
      },
      "BusyButton": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "active": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret42",
          "alt": "string",
          "aria-label": "string",
          "attachScope": "Object",
          "attributeMap": "Object",
          "baseClass": "string",
          "busyLabel": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "cssStateNodes": "Object",
          "dir": "string",
          "disabled": "bool",
          "domNode": "HTMLElement",
          "focused": "bool",
          "hovering": "bool",
          "iconClass": "string",
          "id": "string",
          "intermediateChanges": "bool",
          "isBusy": "bool",
          "label": "string",
          "lang": "string",
          "name": "string",
          "ownerDocument": "Object",
          "scrollOnFocus": "bool",
          "searchContainerNode": "bool",
          "showLabel": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tabIndex": "string",
          "templatePath": "string",
          "templateString": "string",
          "timeout": "Object",
          "title": "string",
          "tooltip": "string",
          "type": "string",
          "useIcon": "bool",
          "value": "string",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "cancel": "fn()",
          "compare": "fn(val1: ?, val2: ?) -> number",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "focus": "fn()",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "getValue": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "makeBusy": "fn()",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "resetTimeout": "fn(timeout: number)",
          "setAttribute": "fn(attr: String, value: ?)",
          "setDisabled": "fn(disabled: bool)",
          "setLabel": "fn(content: String)",
          "setValue": "fn(value: String)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onClick": "fn(event: Event) -> bool",
          "onClose": "fn() -> bool",
          "onDblClick": "fn(event: ?)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onShow": "fn()"
        }
      },
      "CheckedMultiSelect": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "active": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret80",
          "alt": "string",
          "aria-label": "string",
          "attachScope": "Object",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "cssStateNodes": "Object",
          "dir": "string",
          "disabled": "bool",
          "domNode": "HTMLElement",
          "dropDown": "bool",
          "focused": "bool",
          "hovering": "bool",
          "id": "string",
          "intermediateChanges": "bool",
          "invalidMessage": "string",
          "labelAttr": "Object",
          "labelText": "string",
          "lang": "string",
          "loadChildrenOnOpen": "bool",
          "multiple": "bool",
          "name": "string",
          "onFetch": "Function",
          "onLoadDeferred": "Object",
          "options": "Object",
          "ownerDocument": "Object",
          "query": "Object",
          "queryOptions": "Object",
          "readOnly": "bool",
          "required": "bool",
          "scrollOnFocus": "bool",
          "searchContainerNode": "bool",
          "sortByLabel": "bool",
          "srcNodeRef": "HTMLElement",
          "store": "Object",
          "style": "string",
          "tabIndex": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "tooltipPosition": "Object",
          "type": "string",
          "value": "string",
          "addOption": "fn(option: dijit.form._FormSelectWidget.__SelectOption)",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "compare": "fn(val1: ?, val2: ?) -> number",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn()",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "displayMessage": "fn(message: String)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "focus": "fn()",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getErrorMessage": "fn(isFocused: bool) -> ?",
          "getOptions": "fn(valueOrIdx: ?) -> ?",
          "getParent": "fn() -> ?",
          "getValue": "fn() -> ?",
          "invertSelection": "fn(onChange: bool)",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeOption": "fn(valueOrIdx: String)",
          "reset": "fn()",
          "setAttribute": "fn(attr: String, value: ?)",
          "setDisabled": "fn(disabled: bool)",
          "setStore": "fn(store: dojo.store.api.Store, selectedValue: ?, fetchArgs: Object) -> ?",
          "setValue": "fn(value: String)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "undo": "fn()",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "updateOption": "fn(newOption: dijit.form._FormSelectWidget.__SelectOption)",
          "validate": "fn(isFocused: ?) -> ?",
          "validator": "fn() -> ?",
          "getCachedTemplate": "fn() -> ?",
          "onAfterAddOptionItem": "fn(item: ?, option: ?)",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onClick": "fn(event: ?)",
          "onClose": "fn() -> bool",
          "onDblClick": "fn(event: ?)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onSetStore": "fn()",
          "onShow": "fn()"
        }
      },
      "DateTextBox": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "active": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret127",
          "alt": "string",
          "aria-label": "string",
          "attachScope": "Object",
          "attributeMap": "Object",
          "autoWidth": "bool",
          "baseClass": "string",
          "class": "string",
          "constraints": "Object",
          "containerNode": "HTMLElement",
          "cssStateNodes": "Object",
          "datePackage": "string",
          "dir": "string",
          "disabled": "bool",
          "displayedValue": "string",
          "domNode": "HTMLElement",
          "dropDown": "Object",
          "dropDownDefaultValue": "Date",
          "dropDownPosition": "Object",
          "focused": "bool",
          "forceWidth": "bool",
          "hasDownArrow": "bool",
          "hovering": "bool",
          "id": "string",
          "intermediateChanges": "bool",
          "invalidMessage": "string",
          "lang": "string",
          "lowercase": "bool",
          "maxHeight": "number",
          "maxLength": "string",
          "message": "string",
          "missingMessage": "string",
          "name": "string",
          "ownerDocument": "Object",
          "placeHolder": "string",
          "promptMessage": "string",
          "propercase": "bool",
          "rangeMessage": "string",
          "readOnly": "bool",
          "regExp": "string",
          "required": "bool",
          "scrollOnFocus": "bool",
          "searchContainerNode": "bool",
          "selectOnClick": "bool",
          "srcNodeRef": "HTMLElement",
          "state": "string",
          "style": "string",
          "tabIndex": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "tooltipPosition": "Object",
          "trim": "bool",
          "type": "string",
          "uppercase": "bool",
          "value": "Date",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "closeDropDown": "fn(focus: bool)",
          "compare": "fn(val1: Date, val2: Date) -> ?",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "displayMessage": "fn(message: String)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "filter": "fn(val: ?) -> ?",
          "focus": "fn()",
          "format": "fn(value: Date, constraints: Object) -> ?",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getDisplayedValue": "fn() -> ?",
          "getErrorMessage": "fn(isFocused: bool) -> ?",
          "getParent": "fn() -> ?",
          "getPromptMessage": "fn(isFocused: bool) -> ?",
          "getValue": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isInRange": "fn(isFocused: bool) -> ?",
          "isLeftToRight": "fn() -> ?",
          "isLoaded": "fn() -> bool",
          "isValid": {},
          "loadAndOpenDropDown": "fn() -> ?",
          "loadDropDown": "fn(loadCallback: Function)",
          "on": "fn(type: String, func: Function) -> ?",
          "openDropDown": "fn()",
          "own": "fn() -> ?",
          "parse": "fn(value: String, constraints: Object) -> ?",
          "pattern": {},
          "placeAt": "fn(reference: String, position: String) -> ?",
          "popupClass": {},
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "rangeCheck": "fn(primitive: number, constraints: dijit.form.RangeBoundTextBox.__Constraints) -> bool",
          "regExpGen": "fn(constraints: Object)",
          "reset": "fn()",
          "serialize": "fn(val: ?, options: Object) -> ?",
          "setAttribute": "fn(attr: String, value: ?)",
          "setDisabled": "fn(disabled: bool)",
          "setDisplayedValue": "fn(value: String)",
          "setValue": "fn(value: String)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "toggleDropDown": "fn()",
          "undo": "fn()",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "validate": "fn() -> ?",
          "validator": "fn(value: ?, constraints: Object) -> ?",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onClick": "fn(event: ?)",
          "onClose": "fn() -> bool",
          "onDblClick": "fn(event: ?)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onInput": "fn(event: ?)",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onShow": "fn()"
        }
      },
      "DayTextBox": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "active": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret185",
          "alt": "string",
          "aria-label": "string",
          "attachScope": "Object",
          "attributeMap": "Object",
          "autoWidth": "bool",
          "baseClass": "string",
          "class": "string",
          "constraints": "Object",
          "containerNode": "HTMLElement",
          "cssStateNodes": "Object",
          "datePackage": "string",
          "dir": "string",
          "disabled": "bool",
          "displayedValue": "string",
          "domNode": "HTMLElement",
          "dropDown": "Object",
          "dropDownDefaultValue": "Date",
          "dropDownPosition": "Object",
          "focused": "bool",
          "forceWidth": "bool",
          "hasDownArrow": "bool",
          "hovering": "bool",
          "id": "string",
          "intermediateChanges": "bool",
          "invalidMessage": "string",
          "lang": "string",
          "lowercase": "bool",
          "maxHeight": "number",
          "maxLength": "string",
          "message": "string",
          "missingMessage": "string",
          "name": "string",
          "ownerDocument": "Object",
          "placeHolder": "string",
          "promptMessage": "string",
          "propercase": "bool",
          "rangeMessage": "string",
          "readOnly": "bool",
          "regExp": "string",
          "required": "bool",
          "scrollOnFocus": "bool",
          "searchContainerNode": "bool",
          "selectOnClick": "bool",
          "srcNodeRef": "HTMLElement",
          "state": "string",
          "style": "string",
          "tabIndex": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "tooltipPosition": "Object",
          "trim": "bool",
          "type": "string",
          "uppercase": "bool",
          "value": "Date",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "closeDropDown": "fn(focus: bool)",
          "compare": "fn(val1: Date, val2: Date) -> ?",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "displayMessage": "fn(message: String)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "filter": "fn(val: ?) -> ?",
          "focus": "fn()",
          "format": "fn(value: ?) -> ?",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getDisplayedValue": "fn() -> ?",
          "getErrorMessage": "fn(isFocused: bool) -> ?",
          "getParent": "fn() -> ?",
          "getPromptMessage": "fn(isFocused: bool) -> ?",
          "getValue": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isInRange": "fn(isFocused: bool) -> ?",
          "isLeftToRight": "fn() -> ?",
          "isLoaded": "fn() -> bool",
          "isValid": {},
          "loadAndOpenDropDown": "fn() -> ?",
          "loadDropDown": "fn(loadCallback: Function)",
          "on": "fn(type: String, func: Function) -> ?",
          "openDropDown": "fn()",
          "own": "fn() -> ?",
          "parse": "fn(displayVal: ?) -> ?",
          "pattern": {},
          "placeAt": "fn(reference: String, position: String) -> ?",
          "popupClass": {},
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "rangeCheck": "fn(primitive: number, constraints: dijit.form.RangeBoundTextBox.__Constraints) -> bool",
          "regExpGen": "fn(constraints: Object)",
          "reset": "fn()",
          "serialize": "fn(val: ?, options: Object) -> ?",
          "setAttribute": "fn(attr: String, value: ?)",
          "setDisabled": "fn(disabled: bool)",
          "setDisplayedValue": "fn(value: String)",
          "setValue": "fn(value: String)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "toggleDropDown": "fn()",
          "undo": "fn()",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "validate": "fn() -> ?",
          "validator": "fn(value: ?) -> bool",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onClick": "fn(event: ?)",
          "onClose": "fn() -> bool",
          "onDblClick": "fn(event: ?)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onInput": "fn(event: ?)",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onShow": "fn()"
        }
      },
      "DropDownSelect": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "active": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret243",
          "alt": "string",
          "aria-label": "string",
          "attachScope": "Object",
          "attributeMap": "Object",
          "autoWidth": "bool",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "cssStateNodes": "Object",
          "dir": "string",
          "disabled": "bool",
          "domNode": "HTMLElement",
          "dropDown": "Object",
          "dropDownPosition": "Object",
          "emptyLabel": "string",
          "focused": "bool",
          "focusedChild": "Object",
          "forceWidth": "bool",
          "hovering": "bool",
          "id": "string",
          "intermediateChanges": "bool",
          "labelAttr": "Object",
          "lang": "string",
          "loadChildrenOnOpen": "bool",
          "maxHeight": "number",
          "message": "string",
          "multiCharSearchDuration": "number",
          "multiple": "bool",
          "name": "string",
          "onFetch": "Function",
          "onLoadDeferred": "Object",
          "options": "Object",
          "ownerDocument": "Object",
          "query": "Object",
          "queryOptions": "Object",
          "readOnly": "bool",
          "required": "bool",
          "scrollOnFocus": "bool",
          "searchContainerNode": "bool",
          "sortByLabel": "bool",
          "srcNodeRef": "HTMLElement",
          "state": "string",
          "store": "Object",
          "style": "string",
          "tabIndex": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "tooltipPosition": "Object",
          "type": "string",
          "value": "string",
          "addOption": "fn(option: dijit.form._FormSelectWidget.__SelectOption)",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "childSelector": "fn(node: HTMLElement) -> ?",
          "closeDropDown": "fn(focus: bool)",
          "compare": "fn(val1: ?, val2: ?) -> number",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: ?)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "focus": "fn()",
          "focusChild": "fn(widget: dijit._WidgetBase)",
          "focusFirstChild": "fn()",
          "focusLastChild": "fn()",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getOptions": "fn(valueOrIdx: ?) -> ?",
          "getParent": "fn() -> ?",
          "getValue": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "isLoaded": "fn() -> ?",
          "isValid": {},
          "loadAndOpenDropDown": "fn() -> ?",
          "loadDropDown": "fn(loadCallback: Function)",
          "on": "fn(type: String, func: Function) -> ?",
          "openDropDown": "fn() -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeOption": "fn(valueOrIdx: String)",
          "reset": "fn()",
          "setAttribute": "fn(attr: String, value: ?)",
          "setDisabled": "fn(disabled: bool)",
          "setStore": "fn(store: dojo.store.api.Store, selectedValue: ?, fetchArgs: Object) -> ?",
          "setValue": "fn(value: String)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "toggleDropDown": "fn()",
          "undo": "fn()",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "updateOption": "fn(newOption: dijit.form._FormSelectWidget.__SelectOption)",
          "validate": "fn(isFocused: bool) -> ?",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onClick": "fn(event: ?)",
          "onClose": "fn() -> bool",
          "onDblClick": "fn(event: ?)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onKeyboardSearch": "fn(item: dijit._WidgetBase, evt: Event, searchString: String, numMatches: number)",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onSetStore": "fn()",
          "onShow": "fn()"
        },
        "_Menu": {
          "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
          "prototype": {
            "activated": "bool",
            "set": "fn(property: string, value: bool)",
            "get": "fn(property: string) -> bool",
            "watch": "fn(property: string, callback: ?) -> ret297",
            "active": "bool",
            "attachScope": "Object",
            "attributeMap": "Object",
            "autoFocus": "bool",
            "baseClass": "string",
            "class": "string",
            "containerNode": "HTMLElement",
            "cssStateNodes": "Object",
            "dir": "string",
            "domNode": "HTMLElement",
            "focused": "bool",
            "focusedChild": "Object",
            "hovering": "bool",
            "id": "string",
            "lang": "string",
            "multiCharSearchDuration": "number",
            "ownerDocument": "Object",
            "parentMenu": "Object",
            "passivePopupDelay": "number",
            "popupDelay": "number",
            "searchContainerNode": "bool",
            "selected": "Object",
            "srcNodeRef": "HTMLElement",
            "style": "string",
            "tabIndex": "string",
            "templatePath": "string",
            "templateString": "string",
            "title": "string",
            "tooltip": "string",
            "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
            "attr": "fn(name: String, value: Object) -> ?",
            "buildRendering": "fn()",
            "childSelector": "fn(node: HTMLElement) -> ?",
            "connect": "fn(obj: Object, event: String, method: String) -> ?",
            "connectKeyNavHandlers": "fn(prevKeyCodes: dojo.keys, nextKeyCodes: dojo.keys)",
            "defer": "fn(fcn: Function, delay: number) -> Object",
            "destroy": "fn(preserveDom?: bool)",
            "destroyDescendants": "fn(preserveDom: bool)",
            "destroyRecursive": "fn(preserveDom: bool)",
            "destroyRendering": "fn(preserveDom?: bool)",
            "disconnect": "fn(handle: ?)",
            "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
            "focus": "fn()",
            "focusChild": "fn(widget: dijit._WidgetBase, last: bool)",
            "focusFirstChild": "fn()",
            "focusLastChild": "fn()",
            "focusNext": "fn()",
            "focusPrev": "fn()",
            "getChildren": "fn() -> [?]",
            "getDescendants": "fn() -> [?]",
            "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
            "getParent": "fn() -> ?",
            "hasChildren": "fn() -> bool",
            "isFocusable": "fn() -> ?",
            "isLeftToRight": "fn() -> ?",
            "on": "fn(type: String, func: Function) -> ?",
            "own": "fn() -> ?",
            "placeAt": "fn(reference: String, position: String) -> ?",
            "postCreate": "fn()",
            "postMixInProperties": "fn()",
            "removeChild": "fn(widget: dijit._WidgetBase)",
            "setAttribute": "fn(attr: String, value: ?)",
            "startup": "fn()",
            "startupKeyNavChildren": "fn()",
            "subscribe": "fn(t: String, method: Function) -> ?",
            "uninitialize": "fn() -> bool",
            "unsubscribe": "fn(handle: Object)",
            "getCachedTemplate": "fn() -> ?",
            "onBlur": "fn()",
            "onCancel": "fn(closeAll: bool)",
            "onClick": "fn(event: ?)",
            "onDblClick": "fn(event: ?)",
            "onExecute": "fn()",
            "onFocus": "fn()",
            "onHide": "fn()",
            "onItemHover": "fn(item: dijit.MenuItem)",
            "onItemUnhover": "fn(item: dijit.MenuItem)",
            "onKeyboardSearch": "fn(item: dijit.MenuItem, evt: Event, searchString: String, numMatches: number)",
            "onKeyDown": "fn(event: ?)",
            "onKeyPress": "fn(event: ?)",
            "onKeyUp": "fn(event: ?)",
            "onMouseDown": "fn(event: ?)",
            "onMouseEnter": "fn(event: ?)",
            "onMouseLeave": "fn(event: ?)",
            "onMouseMove": "fn(event: ?)",
            "onMouseOut": "fn(event: ?)",
            "onMouseOver": "fn(event: ?)",
            "onMouseUp": "fn(event: ?)",
            "onShow": "fn()"
          }
        }
      },
      "FileInput": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "active": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret328",
          "alt": "string",
          "aria-label": "string",
          "attachScope": "Object",
          "attributeMap": "Object",
          "baseClass": "string",
          "cancelText": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "cssStateNodes": "Object",
          "dir": "string",
          "disabled": "bool",
          "domNode": "HTMLElement",
          "focused": "bool",
          "hovering": "bool",
          "id": "string",
          "intermediateChanges": "bool",
          "label": "string",
          "lang": "string",
          "name": "string",
          "ownerDocument": "Object",
          "scrollOnFocus": "bool",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tabIndex": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "type": "string",
          "value": "string",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "compare": "fn(val1: ?, val2: ?) -> number",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "focus": "fn()",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "getValue": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "reset": "fn(e: Event)",
          "setAttribute": "fn(attr: String, value: ?)",
          "setDisabled": "fn(disabled: bool)",
          "setLabel": "fn(label: String, cssClass: String)",
          "setValue": "fn(value: String)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onClick": "fn(event: ?)",
          "onClose": "fn() -> bool",
          "onDblClick": "fn(event: ?)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onShow": "fn()"
        }
      },
      "FileInputAuto": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "active": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret361",
          "alt": "string",
          "aria-label": "string",
          "attachScope": "Object",
          "attributeMap": "Object",
          "baseClass": "string",
          "blurDelay": "number",
          "cancelText": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "cssStateNodes": "Object",
          "dir": "string",
          "disabled": "bool",
          "domNode": "HTMLElement",
          "duration": "number",
          "focused": "bool",
          "hovering": "bool",
          "id": "string",
          "intermediateChanges": "bool",
          "label": "string",
          "lang": "string",
          "name": "string",
          "ownerDocument": "Object",
          "scrollOnFocus": "bool",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tabIndex": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "triggerEvent": "string",
          "type": "string",
          "uploadMessage": "string",
          "url": "string",
          "value": "string",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "compare": "fn(val1: ?, val2: ?) -> number",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "focus": "fn()",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "getValue": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "reset": "fn(e: ?)",
          "setAttribute": "fn(attr: String, value: ?)",
          "setDisabled": "fn(disabled: bool)",
          "setLabel": "fn(label: String, cssClass: String)",
          "setMessage": "fn(title: String)",
          "setValue": "fn(value: String)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBeforeSend": "fn() -> Object",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onClick": "fn(event: ?)",
          "onClose": "fn() -> bool",
          "onComplete": "fn(data: ?, ioArgs: ?, widgetRef: ?)",
          "onDblClick": "fn(event: ?)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onShow": "fn()"
        }
      },
      "FileInputBlind": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "active": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret399",
          "alt": "string",
          "aria-label": "string",
          "attachScope": "Object",
          "attributeMap": "Object",
          "baseClass": "string",
          "blurDelay": "number",
          "cancelText": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "cssStateNodes": "Object",
          "dir": "string",
          "disabled": "bool",
          "domNode": "HTMLElement",
          "duration": "number",
          "focused": "bool",
          "hovering": "bool",
          "id": "string",
          "intermediateChanges": "bool",
          "label": "string",
          "lang": "string",
          "name": "string",
          "ownerDocument": "Object",
          "scrollOnFocus": "bool",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tabIndex": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "triggerEvent": "string",
          "type": "string",
          "uploadMessage": "string",
          "url": "string",
          "value": "string",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "compare": "fn(val1: ?, val2: ?) -> number",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "focus": "fn()",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "getValue": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "reset": "fn(e: ?)",
          "setAttribute": "fn(attr: String, value: ?)",
          "setDisabled": "fn(disabled: bool)",
          "setLabel": "fn(label: String, cssClass: String)",
          "setMessage": "fn(title: String)",
          "setValue": "fn(value: String)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBeforeSend": "fn() -> Object",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onClick": "fn(event: ?)",
          "onClose": "fn() -> bool",
          "onComplete": "fn(data: ?, ioArgs: ?, widgetRef: ?)",
          "onDblClick": "fn(event: ?)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onShow": "fn()"
        }
      },
      "FileUploader": {
        "!type": "fn()",
        "prototype": {
          "activeClass": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret437",
          "attachScope": "Object",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "deferredUploading": "number",
          "devMode": "bool",
          "dir": "string",
          "disabledClass": "string",
          "domNode": "HTMLElement",
          "fileListId": "string",
          "fileMask": "Object",
          "flashFieldName": "string",
          "flashMovie": "Function",
          "flashObject": "Object",
          "focused": "bool",
          "force": "string",
          "hoverClass": "string",
          "htmlFieldName": "string",
          "id": "string",
          "insideNode": "Object",
          "isDebug": "bool",
          "lang": "string",
          "minFlashVersion": "number",
          "ownerDocument": "Object",
          "progressBackgroundColor": "string",
          "progressBackgroundUrl": "string",
          "progressMessage": "string",
          "progressWidgetId": "string",
          "searchContainerNode": "bool",
          "selectMultipleFiles": "bool",
          "serverTimeout": "number",
          "showProgress": "bool",
          "skipServerCheck": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "swfPath": "Object",
          "tabIndex": "number",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "uploaderType": "string",
          "uploadOnChange": "bool",
          "uploadUrl": "string",
          "version": "Object",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "createFlashUploader": "fn()",
          "createHtmlUploader": "fn()",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn()",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getButtonStyle": "fn()",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getHiddenNode": "fn(node: HTMLElement) -> ?",
          "getIndexInParent": "fn() -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "getStyle": "fn(node: ?) -> Object",
          "getTempNodeStyle": "fn(node: ?, _class: ?, isDijitButton: ?) -> ?",
          "getText": "fn(node: ?) -> ?",
          "getTextStyle": "fn(node: ?) -> Object",
          "isButton": "fn(node: ?) -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "log": "fn()",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeFile": "fn(name: String, noListEdit: bool)",
          "setAttribute": "fn(attr: String, value: ?)",
          "setButtonStyle": "fn()",
          "startup": "fn()",
          "submit": "fn(form: HTMLFormElement) -> bool",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "upload": "fn(data: Object) -> bool",
          "uploadFlash": "fn()",
          "uploadHTML": "fn()",
          "urlencode": "fn(url: ?) -> ?",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onCancel": "fn()",
          "onChange": "fn(dataArray: ?)",
          "onClick": "fn(event: ?)",
          "onClose": "fn() -> bool",
          "onComplete": "fn(dataArray: ?)",
          "onDblClick": "fn(event: ?)",
          "onError": "fn(evtObject: Object)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onLoad": "fn(uploader: dojox.form.FileUploader)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onProgress": "fn(dataArray: ?)",
          "onReady": "fn(uploader: dojox.form.FileUploader)",
          "onShow": "fn()"
        }
      },
      "ListInput": {
        "!type": "fn()",
        "prototype": {
          "active": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret485",
          "alt": "string",
          "aria-label": "string",
          "attachScope": "Object",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "constraints": "Object",
          "containerNode": "HTMLElement",
          "cssStateNodes": "Object",
          "delimiter": "string",
          "dir": "string",
          "disabled": "bool",
          "domNode": "HTMLElement",
          "duration": "number",
          "easingIn": "Function",
          "easingOut": "Function",
          "focused": "bool",
          "hovering": "bool",
          "id": "string",
          "inputClass": "string",
          "inputHandler": "string",
          "inputProperties": "string",
          "intermediateChanges": "bool",
          "lang": "string",
          "maxItems": "number",
          "name": "string",
          "ownerDocument": "Object",
          "readOnly": "bool",
          "readOnlyInput": "bool",
          "readOnlyItem": "bool",
          "regExp": "string",
          "scrollOnFocus": "bool",
          "searchContainerNode": "bool",
          "showCloseButtonWhenInvalid": "bool",
          "showCloseButtonWhenValid": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "submitOnlyValidValue": "bool",
          "tabIndex": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "type": "string",
          "useAnim": "bool",
          "useArrowForEdit": "bool",
          "useOnBlur": "bool",
          "value": "string",
          "add": "fn(values: String)",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "compare": "fn(val1: [?], val2: [?]) -> number",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn()",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "focus": "fn()",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "getValue": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "regExpGen": "fn(constraints: Object) -> ?",
          "reset": "fn()",
          "setAttribute": "fn(attr: String, value: ?)",
          "setDisabled": "fn(disabled: bool)",
          "setValue": "fn(value: String)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "undo": "fn()",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onClick": "fn(event: ?)",
          "onClose": "fn() -> bool",
          "onDblClick": "fn(event: ?)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onShow": "fn()"
        }
      },
      "FilePickerTextBox": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "active": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret535",
          "alt": "string",
          "aria-label": "string",
          "attachScope": "Object",
          "attributeMap": "Object",
          "autoWidth": "bool",
          "baseClass": "string",
          "class": "string",
          "constraints": "Object",
          "containerNode": "HTMLElement",
          "cssStateNodes": "Object",
          "dir": "string",
          "disabled": "bool",
          "displayedValue": "string",
          "domNode": "HTMLElement",
          "dropDown": "Object",
          "dropDownPosition": "Object",
          "focused": "bool",
          "forceWidth": "bool",
          "hovering": "bool",
          "id": "string",
          "intermediateChanges": "bool",
          "invalidMessage": "string",
          "lang": "string",
          "lowercase": "bool",
          "maxHeight": "number",
          "maxLength": "string",
          "message": "string",
          "missingMessage": "string",
          "name": "string",
          "numPanes": "number",
          "ownerDocument": "Object",
          "pattern": "string",
          "placeHolder": "string",
          "promptMessage": "string",
          "propercase": "bool",
          "readOnly": "bool",
          "regExp": "string",
          "required": "bool",
          "scrollOnFocus": "bool",
          "searchContainerNode": "bool",
          "searchDelay": "number",
          "selectOnClick": "bool",
          "srcNodeRef": "HTMLElement",
          "state": "string",
          "style": "string",
          "tabIndex": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "tooltipPosition": "Object",
          "trim": "bool",
          "type": "string",
          "uppercase": "bool",
          "value": "string",
          "valueItem": "Object",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "closeDropDown": "fn(focus: bool)",
          "compare": "fn(val1: ?, val2: ?) -> number",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "displayMessage": "fn(message: String)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "filter": "fn(val: ?) -> ?",
          "focus": "fn()",
          "format": "fn(value: String, constraints: Object) -> String",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getDisplayedValue": "fn() -> ?",
          "getErrorMessage": "fn(isFocused: bool) -> ?",
          "getParent": "fn() -> ?",
          "getPromptMessage": "fn(isFocused: bool) -> ?",
          "getValue": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "isLoaded": "fn() -> bool",
          "isValid": {},
          "loadAndOpenDropDown": "fn() -> ?",
          "loadDropDown": "fn(loadCallback: Function)",
          "on": "fn(type: String, func: Function) -> ?",
          "openDropDown": "fn()",
          "own": "fn() -> ?",
          "parse": "fn(value: String, constraints: Object) -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "regExpGen": "fn(constraints: Object)",
          "reset": "fn()",
          "setAttribute": "fn(attr: String, value: ?)",
          "setDisabled": "fn(disabled: bool)",
          "setDisplayedValue": "fn(value: String)",
          "setValue": "fn(value: String)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "toggleDropDown": "fn()",
          "undo": "fn()",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "validate": "fn(isFocused: bool) -> ?",
          "validator": "fn(value: ?, constraints: Object) -> ?",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onClick": "fn(event: ?)",
          "onClose": "fn() -> bool",
          "onDblClick": "fn(event: ?)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onInput": "fn(event: ?)",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onShow": "fn()"
        }
      },
      "Manager": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "accept": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret593",
          "accept-charset": "string",
          "action": "string",
          "attachScope": "Object",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "contextRequire": "Function",
          "dir": "string",
          "domNode": "HTMLElement",
          "encType": "string",
          "focused": "bool",
          "id": "string",
          "lang": "string",
          "method": "string",
          "name": "string",
          "observer": "string",
          "ownerDocument": "Object",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "target": "string",
          "title": "string",
          "tooltip": "string",
          "watching": "bool",
          "widgetsInTemplate": "bool",
          "addClass": "fn(className: String, names: Object) -> Function",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disable": "fn(state: Object) -> ?",
          "disconnect": "fn(handle: ?)",
          "elementValue": "fn(name: String, value: Object) -> ?",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "enable": "fn(state: Object, defaultState: bool) -> Function",
          "formNodeValue": "fn(elem: String, value: Object) -> ?",
          "formPointValue": "fn(elem: String, value: Object) -> ?",
          "formWidgetValue": "fn(elem: String, value: Object) -> ?",
          "gatherClassState": "fn(className: String, names: Object) -> ?",
          "gatherDisplayState": "fn(names: Object) -> ?",
          "gatherEnableState": "fn(names: Object) -> ?",
          "gatherFormValues": "fn(names: Object) -> ?",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "hide": "fn(state: Object) -> ?",
          "inspect": "fn(inspector: Function, state: Object, defaultValue: Object) -> ?",
          "inspectAttachedPoints": "fn(inspector: Function, state: Object, defaultValue: Object) -> Object",
          "inspectFormNodes": "fn(inspector: Function, state: Object, defaultValue: Object) -> Object",
          "inspectFormWidgets": "fn(inspector: Function, state: Object, defaultValue: Object) -> Object",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "isValid": {},
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "registerNode": "fn(node: String) -> ?",
          "registerNodeDescendants": "fn(node: String) -> ?",
          "registerWidget": "fn(widget: String) -> ?",
          "registerWidgetDescendants": "fn(widget: String) -> ?",
          "removeClass": "fn(className: String, names: Object) -> Function",
          "reset": "fn() -> Function",
          "setAttribute": "fn(attr: String, value: ?)",
          "setFormValues": "fn(values: Object) -> Function",
          "show": "fn(state: Object, defaultState: bool) -> Function",
          "startup": "fn()",
          "submit": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unregisterNode": "fn(name: String) -> ?",
          "unregisterNodeDescendants": "fn(node: String) -> ?",
          "unregisterWidget": "fn(name: string) -> ?",
          "unregisterWidgetDescendants": "fn(widget: String) -> ?",
          "unsubscribe": "fn(handle: Object)",
          "validate": "fn() -> bool",
          "onBlur": "fn()",
          "onClick": "fn(event: ?)",
          "onClose": "fn() -> bool",
          "onDblClick": "fn(event: ?)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onReset": "fn() -> bool",
          "onShow": "fn()",
          "onSubmit": "fn() -> ?"
        }
      },
      "RangeSlider": {
        "!type": "fn()",
        "prototype": {
          "value": "[?]",
          "destroy": "fn()",
          "postCreate": "fn()",
          "postMixInProperties": "fn()"
        }
      },
      "Rating": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "active": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret621",
          "alt": "string",
          "aria-label": "string",
          "attachScope": "Object",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "cssStateNodes": "Object",
          "dir": "string",
          "disabled": "bool",
          "domNode": "HTMLElement",
          "focused": "bool",
          "hovering": "bool",
          "id": "string",
          "intermediateChanges": "bool",
          "lang": "string",
          "name": "string",
          "numStars": "number",
          "ownerDocument": "Object",
          "required": "bool",
          "scrollOnFocus": "bool",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tabIndex": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "type": "string",
          "value": "number",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn(params?: Object)",
          "compare": "fn(val1: ?, val2: ?) -> number",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "focus": "fn()",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "getValue": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "setAttribute": "fn(key: String, value: number)",
          "setDisabled": "fn(disabled: bool)",
          "setValue": "fn(value: String)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onClick": "fn(event: ?)",
          "onClose": "fn() -> bool",
          "onDblClick": "fn(event: ?)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(evt: ?, value?: ?)",
          "onMouseUp": "fn(event: ?)",
          "onShow": "fn()",
          "onStarClick": "fn(evt: Event)"
        }
      },
      "TriStateCheckBox": {
        "!type": "fn()",
        "prototype": {
          "active": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret654",
          "alt": "string",
          "aria-label": "string",
          "attachScope": "Object",
          "attributeMap": "Object",
          "baseClass": "string",
          "checked": "bool",
          "class": "string",
          "containerNode": "HTMLElement",
          "cssStateNodes": "Object",
          "dir": "string",
          "disabled": "bool",
          "domNode": "HTMLElement",
          "focused": "bool",
          "hovering": "bool",
          "iconClass": "string",
          "id": "string",
          "intermediateChanges": "bool",
          "label": "string",
          "lang": "string",
          "name": "string",
          "ownerDocument": "Object",
          "readOnly": "bool",
          "scrollOnFocus": "bool",
          "searchContainerNode": "bool",
          "showLabel": "bool",
          "srcNodeRef": "HTMLElement",
          "states": "[?]",
          "stateValue": "Object",
          "style": "string",
          "tabIndex": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "value": "string",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "click": "fn()",
          "compare": "fn(val1: ?, val2: ?) -> number",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "fixState": "fn()",
          "focus": "fn()",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "getValue": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "reset": "fn()",
          "setAttribute": "fn(attr: String, value: ?)",
          "setChecked": "fn(checked: String)",
          "setDisabled": "fn(disabled: bool)",
          "setLabel": "fn(content: String)",
          "setValue": "fn(value: String)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onClick": "fn(event: Event) -> bool",
          "onClose": "fn() -> bool",
          "onDblClick": "fn(event: ?)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onShow": "fn()"
        }
      },
      "MonthTextBox": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "active": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret691",
          "alt": "string",
          "aria-label": "string",
          "attachScope": "Object",
          "attributeMap": "Object",
          "autoWidth": "bool",
          "baseClass": "string",
          "class": "string",
          "constraints": "Object",
          "containerNode": "HTMLElement",
          "cssStateNodes": "Object",
          "datePackage": "string",
          "dir": "string",
          "disabled": "bool",
          "displayedValue": "string",
          "domNode": "HTMLElement",
          "dropDown": "Object",
          "dropDownDefaultValue": "Date",
          "dropDownPosition": "Object",
          "focused": "bool",
          "forceWidth": "bool",
          "hasDownArrow": "bool",
          "hovering": "bool",
          "id": "string",
          "intermediateChanges": "bool",
          "invalidMessage": "string",
          "lang": "string",
          "lowercase": "bool",
          "maxHeight": "number",
          "maxLength": "string",
          "message": "string",
          "missingMessage": "string",
          "name": "string",
          "ownerDocument": "Object",
          "placeHolder": "string",
          "promptMessage": "string",
          "propercase": "bool",
          "rangeMessage": "string",
          "readOnly": "bool",
          "regExp": "string",
          "required": "bool",
          "scrollOnFocus": "bool",
          "searchContainerNode": "bool",
          "selectOnClick": "bool",
          "selector": "string",
          "srcNodeRef": "HTMLElement",
          "state": "string",
          "style": "string",
          "tabIndex": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "tooltipPosition": "Object",
          "trim": "bool",
          "type": "string",
          "uppercase": "bool",
          "value": "Date",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "closeDropDown": "fn(focus: bool)",
          "compare": "fn(val1: Date, val2: Date) -> ?",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "displayMessage": "fn(message: String)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "filter": "fn(val: ?) -> ?",
          "focus": "fn()",
          "format": "fn(value: ?) -> number",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getDisplayedValue": "fn() -> ?",
          "getErrorMessage": "fn(isFocused: bool) -> ?",
          "getParent": "fn() -> ?",
          "getPromptMessage": "fn(isFocused: bool) -> ?",
          "getValue": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isInRange": "fn(isFocused: bool) -> ?",
          "isLeftToRight": "fn() -> ?",
          "isLoaded": "fn() -> bool",
          "isValid": {},
          "loadAndOpenDropDown": "fn() -> ?",
          "loadDropDown": "fn(loadCallback: Function)",
          "on": "fn(type: String, func: Function) -> ?",
          "openDropDown": "fn()",
          "own": "fn() -> ?",
          "parse": "fn(value: ?, constraints: ?) -> number",
          "pattern": {},
          "placeAt": "fn(reference: String, position: String) -> ?",
          "popupClass": {},
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "rangeCheck": "fn(primitive: number, constraints: dijit.form.RangeBoundTextBox.__Constraints) -> bool",
          "regExpGen": "fn(constraints: Object)",
          "reset": "fn()",
          "serialize": "fn(value: ?, constraints: ?) -> ?",
          "setAttribute": "fn(attr: String, value: ?)",
          "setDisabled": "fn(disabled: bool)",
          "setDisplayedValue": "fn(value: String)",
          "setValue": "fn(value: String)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "toggleDropDown": "fn()",
          "undo": "fn()",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "validate": "fn() -> ?",
          "validator": "fn(value: ?) -> bool",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onClick": "fn(event: ?)",
          "onClose": "fn() -> bool",
          "onDblClick": "fn(event: ?)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onInput": "fn(event: ?)",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onShow": "fn()"
        }
      },
      "PasswordValidator": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "active": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret750",
          "alt": "string",
          "aria-label": "string",
          "attachScope": "Object",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "cssStateNodes": "Object",
          "dir": "string",
          "disabled": "bool",
          "domNode": "HTMLElement",
          "focused": "bool",
          "hovering": "bool",
          "id": "string",
          "intermediateChanges": "bool",
          "lang": "string",
          "name": "string",
          "oldName": "Object",
          "ownerDocument": "Object",
          "readOnly": "bool",
          "required": "bool",
          "scrollOnFocus": "bool",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tabIndex": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "type": "string",
          "value": "string",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "compare": "fn(val1: ?, val2: ?) -> number",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "focus": "fn()",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "getValue": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "isValid": {},
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "pwCheck": "fn(password: String) -> bool",
          "reset": "fn()",
          "setAttribute": "fn(attr: String, value: ?)",
          "setDisabled": "fn(disabled: bool)",
          "setValue": "fn(value: String)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "undo": "fn()",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "validate": "fn(isFocused: bool) -> ?",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onClick": "fn(event: ?)",
          "onClose": "fn() -> bool",
          "onDblClick": "fn(event: ?)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onShow": "fn()"
        }
      },
      "TimeSpinner": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "active": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret784",
          "alt": "string",
          "aria-label": "string",
          "attachScope": "Object",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "constraints": "Object",
          "containerNode": "HTMLElement",
          "cssStateNodes": "Object",
          "defaultTimeout": "number",
          "dir": "string",
          "disabled": "bool",
          "displayedValue": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "hovering": "bool",
          "id": "string",
          "intermediateChanges": "bool",
          "invalidMessage": "string",
          "lang": "string",
          "largeDelta": "number",
          "lowercase": "bool",
          "maxLength": "string",
          "message": "string",
          "minimumTimeout": "number",
          "missingMessage": "string",
          "name": "string",
          "ownerDocument": "Object",
          "pattern": "string",
          "placeHolder": "string",
          "promptMessage": "string",
          "propercase": "bool",
          "rangeMessage": "string",
          "readOnly": "bool",
          "regExp": "string",
          "required": "bool",
          "scrollOnFocus": "bool",
          "searchContainerNode": "bool",
          "selectOnClick": "bool",
          "smallDelta": "number",
          "srcNodeRef": "HTMLElement",
          "state": "string",
          "style": "string",
          "tabIndex": "string",
          "templatePath": "string",
          "templateString": "string",
          "timeoutChangeRate": "number",
          "title": "string",
          "tooltip": "string",
          "tooltipPosition": "Object",
          "trim": "bool",
          "type": "string",
          "uppercase": "bool",
          "value": "string",
          "adjust": "fn(val: Object, delta: number) -> ?",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "compare": "fn(val1: ?, val2: ?) -> number",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "displayMessage": "fn(message: String)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "filter": "fn(val: ?) -> ?",
          "focus": "fn()",
          "format": "fn(time: ?, locale: ?) -> ?",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getDisplayedValue": "fn() -> ?",
          "getErrorMessage": "fn(isFocused: bool) -> ?",
          "getParent": "fn() -> ?",
          "getPromptMessage": "fn(isFocused: bool) -> ?",
          "getValue": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isInRange": "fn(isFocused: bool) -> ?",
          "isLeftToRight": "fn() -> ?",
          "isValid": {},
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "parse": "fn(time: ?, locale: ?) -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "rangeCheck": "fn(primitive: number, constraints: dijit.form.RangeBoundTextBox.__Constraints) -> bool",
          "regExpGen": "fn(constraints: Object)",
          "reset": "fn()",
          "serialize": "fn(dateObject: Date, options: Object) -> ?",
          "setAttribute": "fn(attr: String, value: ?)",
          "setDisabled": "fn(disabled: bool)",
          "setDisplayedValue": "fn(value: String)",
          "setValue": "fn(value: String)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "undo": "fn()",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "validate": "fn() -> ?",
          "validator": "fn(value: ?, constraints: Object) -> ?",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onClick": "fn(event: ?)",
          "onClose": "fn() -> bool",
          "onDblClick": "fn(event: ?)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onInput": "fn(event: ?)",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onShow": "fn()"
        }
      },
      "MultiComboBox": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "active": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret840",
          "alt": "string",
          "aria-label": "string",
          "attachScope": "Object",
          "attributeMap": "Object",
          "autoComplete": "bool",
          "autoWidth": "bool",
          "baseClass": "string",
          "class": "string",
          "constraints": "Object",
          "containerNode": "HTMLElement",
          "cssStateNodes": "Object",
          "delimiter": "string",
          "dir": "string",
          "disabled": "bool",
          "displayedValue": "string",
          "domNode": "HTMLElement",
          "dropDown": "Object",
          "dropDownPosition": "Object",
          "fetchProperties": "Object",
          "focused": "bool",
          "forceWidth": "bool",
          "hasDownArrow": "bool",
          "highlightMatch": "string",
          "hovering": "bool",
          "id": "string",
          "ignoreCase": "bool",
          "intermediateChanges": "bool",
          "invalidMessage": "string",
          "item": "Object",
          "labelAttr": "Object",
          "labelType": "string",
          "lang": "string",
          "lowercase": "bool",
          "maxHeight": "number",
          "maxLength": "string",
          "message": "string",
          "missingMessage": "string",
          "name": "string",
          "ownerDocument": "Object",
          "pageSize": "number",
          "pattern": "string",
          "placeHolder": "string",
          "promptMessage": "string",
          "propercase": "bool",
          "query": "Object",
          "queryExpr": "string",
          "readOnly": "bool",
          "regExp": "string",
          "required": "bool",
          "scrollOnFocus": "bool",
          "searchAttr": "string",
          "searchContainerNode": "bool",
          "searchDelay": "number",
          "selectOnClick": "bool",
          "srcNodeRef": "HTMLElement",
          "state": "string",
          "store": "Object",
          "style": "string",
          "tabIndex": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "tooltipPosition": "Object",
          "trim": "bool",
          "type": "string",
          "uppercase": "bool",
          "value": "string",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "closeDropDown": "fn(focus: bool)",
          "compare": "fn(val1: ?, val2: ?) -> number",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "displayMessage": "fn(message: String)",
          "doHighlight": "fn(label: String, find: String) -> ?",
          "dropDownClass": "fn()",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "filter": "fn(val: ?) -> ?",
          "focus": "fn()",
          "format": "fn(value: String, constraints: Object) -> String",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getDisplayedValue": "fn() -> ?",
          "getErrorMessage": "fn(isFocused: bool) -> ?",
          "getParent": "fn() -> ?",
          "getPromptMessage": "fn(isFocused: bool) -> ?",
          "getValue": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "isLoaded": "fn() -> bool",
          "isValid": {},
          "loadAndOpenDropDown": "fn() -> ?",
          "loadDropDown": "fn(loadCallback: Function)",
          "on": "fn(type: String, func: Function) -> ?",
          "openDropDown": "fn() -> ?",
          "own": "fn() -> ?",
          "parse": "fn(value: String, constraints: Object) -> String",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "regExpGen": "fn(constraints: Object)",
          "reset": "fn()",
          "setAttribute": "fn(attr: String, value: ?)",
          "setDisabled": "fn(disabled: bool)",
          "setDisplayedValue": "fn(value: String)",
          "setValue": "fn(value: String)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "toggleDropDown": "fn()",
          "undo": "fn()",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "validate": "fn(isFocused: bool) -> ?",
          "validator": "fn(value: ?, constraints: Object) -> ?",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onClick": "fn(event: ?)",
          "onClose": "fn() -> bool",
          "onDblClick": "fn(event: ?)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onInput": "fn(event: ?)",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onSearch": "fn(results: Object, query: Object, options: Object)",
          "onShow": "fn()"
        }
      },
      "Uploader": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "active": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret910",
          "alt": "string",
          "aria-label": "string",
          "attachScope": "Object",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "contextRequire": "Function",
          "cssStateNodes": "Object",
          "deferredUploading": "number",
          "devMode": "Object",
          "dir": "string",
          "disabled": "bool",
          "domNode": "HTMLElement",
          "errMsg": "string",
          "flashFieldName": "string",
          "focused": "bool",
          "focusedClass": "string",
          "force": "string",
          "hovering": "bool",
          "iconClass": "string",
          "id": "string",
          "intermediateChanges": "bool",
          "isDebug": "bool",
          "label": "string",
          "lang": "string",
          "multiple": "bool",
          "name": "string",
          "observer": "string",
          "ownerDocument": "Object",
          "preventCache": "bool",
          "scrollOnFocus": "bool",
          "searchContainerNode": "bool",
          "serverTimeout": "number",
          "showInput": "string",
          "showLabel": "bool",
          "skipServerCheck": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "swfPath": "string",
          "tabIndex": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "type": "string",
          "uploadOnSelect": "bool",
          "uploadType": "string",
          "url": "string",
          "value": "string",
          "widgetsInTemplate": "bool",
          "addDropTarget": "fn(node: ?, onlyConnectDrop: bool)",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "compare": "fn(val1: ?, val2: ?) -> number",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "connectForm": "fn()",
          "convertBytes": "fn(bytes: ?) -> Object",
          "create": "fn()",
          "createXhr": "fn() -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "flashReset": "fn()",
          "focus": "fn()",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getFileList": "fn() -> [?]",
          "getFileType": "fn(name: String) -> ?",
          "getFlashFileList": "fn() -> ?",
          "getForm": "fn() -> HTMLElement",
          "getMimeType": "fn() -> String",
          "getParent": "fn() -> ?",
          "getUrl": "fn() -> ?",
          "getValue": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "reset": "fn()",
          "setAttribute": "fn(attr: String, value: ?)",
          "setDisabled": "fn(disabled: bool)",
          "setLabel": "fn(content: String)",
          "setValue": "fn(value: String)",
          "startup": "fn()",
          "submit": "fn(form: HTMLFormElement)",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "supports": "fn(what: ?) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "upload": "fn(formData: Object)",
          "uploadIFrame": "fn(data: ?)",
          "getCachedTemplate": "fn() -> ?",
          "onAbort": "fn()",
          "onBegin": "fn(dataArray: [?])",
          "onBlur": "fn()",
          "onCancel": "fn()",
          "onChange": "fn(fileArray: [?])",
          "onClick": "fn(event: Event) -> bool",
          "onClose": "fn() -> bool",
          "onComplete": "fn(customEvent: Object)",
          "onDblClick": "fn(event: ?)",
          "onError": "fn(evtObject: Object)",
          "onFileChange": "fn(fileArray: ?)",
          "onFileProgress": "fn(fileArray: ?)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onLoad": "fn(uploader: dojox.form.FileUploader)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onProgress": "fn(customEvent: Object)",
          "onReady": "fn(uploader: dojox.form.FileUploader)",
          "onShow": "fn()"
        }
      },
      "YearTextBox": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "active": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret963",
          "alt": "string",
          "aria-label": "string",
          "attachScope": "Object",
          "attributeMap": "Object",
          "autoWidth": "bool",
          "baseClass": "string",
          "class": "string",
          "constraints": "Object",
          "containerNode": "HTMLElement",
          "cssStateNodes": "Object",
          "datePackage": "string",
          "dir": "string",
          "disabled": "bool",
          "displayedValue": "string",
          "domNode": "HTMLElement",
          "dropDown": "Object",
          "dropDownDefaultValue": "Date",
          "dropDownPosition": "Object",
          "focused": "bool",
          "forceWidth": "bool",
          "hasDownArrow": "bool",
          "hovering": "bool",
          "id": "string",
          "intermediateChanges": "bool",
          "invalidMessage": "string",
          "lang": "string",
          "lowercase": "bool",
          "maxHeight": "number",
          "maxLength": "string",
          "message": "string",
          "missingMessage": "string",
          "name": "string",
          "ownerDocument": "Object",
          "placeHolder": "string",
          "promptMessage": "string",
          "propercase": "bool",
          "rangeMessage": "string",
          "readOnly": "bool",
          "regExp": "string",
          "required": "bool",
          "scrollOnFocus": "bool",
          "searchContainerNode": "bool",
          "selectOnClick": "bool",
          "srcNodeRef": "HTMLElement",
          "state": "string",
          "style": "string",
          "tabIndex": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "tooltipPosition": "Object",
          "trim": "bool",
          "type": "string",
          "uppercase": "bool",
          "value": "Date",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "closeDropDown": "fn(focus: bool)",
          "compare": "fn(val1: Date, val2: Date) -> ?",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "displayMessage": "fn(message: String)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "filter": "fn(val: ?) -> ?",
          "focus": "fn()",
          "format": "fn(value: ?) -> ?",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getDisplayedValue": "fn() -> ?",
          "getErrorMessage": "fn(isFocused: bool) -> ?",
          "getParent": "fn() -> ?",
          "getPromptMessage": "fn(isFocused: bool) -> ?",
          "getValue": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isInRange": "fn(isFocused: bool) -> ?",
          "isLeftToRight": "fn() -> ?",
          "isLoaded": "fn() -> bool",
          "isValid": {},
          "loadAndOpenDropDown": "fn() -> ?",
          "loadDropDown": "fn(loadCallback: Function)",
          "on": "fn(type: String, func: Function) -> ?",
          "openDropDown": "fn()",
          "own": "fn() -> ?",
          "parse": "fn(value: String, constraints: dojo.date.locale.__FormatOptions) -> String",
          "pattern": {},
          "placeAt": "fn(reference: String, position: String) -> ?",
          "popupClass": {},
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "rangeCheck": "fn(primitive: number, constraints: dijit.form.RangeBoundTextBox.__Constraints) -> bool",
          "regExpGen": "fn(constraints: Object)",
          "reset": "fn()",
          "serialize": "fn(val: ?, options: Object) -> ?",
          "setAttribute": "fn(attr: String, value: ?)",
          "setDisabled": "fn(disabled: bool)",
          "setDisplayedValue": "fn(value: String)",
          "setValue": "fn(value: String)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "toggleDropDown": "fn()",
          "undo": "fn()",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "validate": "fn() -> ?",
          "validator": "fn(value: ?) -> bool",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onClick": "fn(event: ?)",
          "onClose": "fn() -> bool",
          "onDblClick": "fn(event: ?)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onInput": "fn(event: ?)",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onShow": "fn()"
        }
      },
      "manager": {
        "_ClassMixin": {
          "!type": "fn()",
          "prototype": {
            "addClass": "fn(className: String, names: Object) -> Function",
            "gatherClassState": "fn(className: String, names: Object) -> ?",
            "removeClass": "fn(className: String, names: Object) -> Function"
          }
        },
        "_EnableMixin": {
          "!type": "fn()",
          "prototype": {
            "disable": "fn(state: Object) -> ?",
            "enable": "fn(state: Object, defaultState: bool) -> Function",
            "gatherEnableState": "fn(names: Object) -> ?"
          }
        },
        "_DisplayMixin": {
          "!type": "fn()",
          "prototype": {
            "gatherDisplayState": "fn(names: Object) -> ?",
            "hide": "fn(state: Object) -> ?",
            "show": "fn(state: Object, defaultState: bool) -> Function"
          }
        },
        "_FormMixin": {
          "!type": "fn()",
          "prototype": {
            "accept": "string",
            "accept-charset": "string",
            "action": "string",
            "encType": "string",
            "method": "string",
            "name": "string",
            "target": "string",
            "isValid": {},
            "reset": "fn() -> Function",
            "startup": "fn()",
            "submit": "fn()",
            "validate": "fn() -> bool",
            "onReset": "fn() -> bool",
            "onSubmit": "fn() -> ?"
          }
        },
        "_NodeMixin": {
          "!type": "fn()",
          "prototype": {
            "destroy": "fn()",
            "formNodeValue": "fn(elem: String, value: Object) -> ?",
            "inspectFormNodes": "fn(inspector: Function, state: Object, defaultValue: Object) -> Object",
            "registerNode": "fn(node: String) -> ?",
            "registerNodeDescendants": "fn(node: String) -> ?",
            "unregisterNode": "fn(name: String) -> ?",
            "unregisterNodeDescendants": "fn(node: String) -> ?"
          }
        },
        "_Mixin": {
          "!type": "fn()",
          "prototype": {
            "watching": "bool",
            "destroy": "fn()",
            "formPointValue": "fn(elem: String, value: Object) -> ?",
            "formWidgetValue": "fn(elem: String, value: Object) -> ?",
            "inspect": "fn(inspector: Function, state: Object, defaultValue: Object) -> ?",
            "inspectAttachedPoints": "fn(inspector: Function, state: Object, defaultValue: Object) -> Object",
            "inspectFormWidgets": "fn(inspector: Function, state: Object, defaultValue: Object) -> Object",
            "registerWidget": "fn(widget: String) -> ?",
            "registerWidgetDescendants": "fn(widget: String) -> ?",
            "startup": "fn()",
            "unregisterWidget": "fn(name: string) -> ?",
            "unregisterWidgetDescendants": "fn(widget: String) -> ?"
          }
        },
        "_ValueMixin": {
          "!type": "fn()",
          "prototype": {
            "elementValue": "fn(name: String, value: Object) -> ?",
            "gatherFormValues": "fn(names: Object) -> ?",
            "setFormValues": "fn(values: Object) -> Function"
          }
        }
      },
      "uploader": {
        "_Flash": {
          "!type": "fn()",
          "prototype": {
            "deferredUploading": "number",
            "devMode": "Object",
            "isDebug": "bool",
            "preventCache": "bool",
            "serverTimeout": "number",
            "skipServerCheck": "bool",
            "swfPath": "string",
            "flashReset": "fn()",
            "getFlashFileList": "fn() -> ?",
            "postMixInProperties": "fn()",
            "onFileChange": "fn(fileArray: ?)",
            "onFileProgress": "fn(fileArray: ?)",
            "onLoad": "fn(uploader: dojox.form.FileUploader)",
            "onReady": "fn(uploader: dojox.form.FileUploader)"
          }
        },
        "_IFrame": {
          "!type": "fn()",
          "prototype": {
            "postMixInProperties": "fn()",
            "uploadIFrame": "fn(data: ?)"
          }
        },
        "_HTML5": {
          "!type": "fn()",
          "prototype": {
            "errMsg": "string",
            "uploadType": "string",
            "addDropTarget": "fn(node: ?, onlyConnectDrop: bool)",
            "createXhr": "fn() -> ?",
            "postCreate": "fn()",
            "postMixInProperties": "fn()",
            "upload": "fn(formData: Object)"
          }
        },
        "_Base": {
          "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
          "prototype": {
            "attachScope": "Object",
            "set": "fn(property: string, value: Object)",
            "get": "fn(property: string) -> Object",
            "watch": "fn(property: string, callback: ?) -> ret1021",
            "attributeMap": "Object",
            "baseClass": "string",
            "class": "string",
            "containerNode": "HTMLElement",
            "contextRequire": "Function",
            "dir": "string",
            "domNode": "HTMLElement",
            "focused": "bool",
            "id": "string",
            "lang": "string",
            "observer": "string",
            "ownerDocument": "Object",
            "searchContainerNode": "bool",
            "srcNodeRef": "HTMLElement",
            "style": "string",
            "templatePath": "string",
            "templateString": "string",
            "title": "string",
            "tooltip": "string",
            "widgetsInTemplate": "bool",
            "attr": "fn(name: String, value: Object) -> ?",
            "buildRendering": "fn()",
            "connect": "fn(obj: Object, event: String, method: String) -> ?",
            "connectForm": "fn()",
            "convertBytes": "fn(bytes: ?) -> Object",
            "defer": "fn(fcn: Function, delay: number) -> Object",
            "destroy": "fn(preserveDom?: bool)",
            "destroyDescendants": "fn(preserveDom: bool)",
            "destroyRecursive": "fn(preserveDom: bool)",
            "destroyRendering": "fn(preserveDom?: bool)",
            "disconnect": "fn(handle: ?)",
            "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
            "getChildren": "fn() -> [?]",
            "getDescendants": "fn() -> [?]",
            "getFileType": "fn(name: String) -> ?",
            "getForm": "fn() -> HTMLElement",
            "getMimeType": "fn() -> String",
            "getParent": "fn() -> ?",
            "getUrl": "fn() -> ?",
            "isFocusable": "fn() -> ?",
            "isLeftToRight": "fn() -> ?",
            "on": "fn(type: String, func: Function) -> ?",
            "own": "fn() -> ?",
            "placeAt": "fn(reference: String, position: String) -> ?",
            "postCreate": "fn()",
            "postMixInProperties": "fn()",
            "setAttribute": "fn(attr: String, value: ?)",
            "startup": "fn()",
            "subscribe": "fn(t: String, method: Function) -> ?",
            "supports": "fn(what: ?) -> ?",
            "uninitialize": "fn() -> bool",
            "unsubscribe": "fn(handle: Object)",
            "getCachedTemplate": "fn() -> ?",
            "onBlur": "fn()",
            "onClick": "fn(event: ?)",
            "onClose": "fn() -> bool",
            "onDblClick": "fn(event: ?)",
            "onFocus": "fn()",
            "onHide": "fn()",
            "onKeyDown": "fn(event: ?)",
            "onKeyPress": "fn(event: ?)",
            "onKeyUp": "fn(event: ?)",
            "onMouseDown": "fn(event: ?)",
            "onMouseEnter": "fn(event: ?)",
            "onMouseLeave": "fn(event: ?)",
            "onMouseMove": "fn(event: ?)",
            "onMouseOut": "fn(event: ?)",
            "onMouseOver": "fn(event: ?)",
            "onMouseUp": "fn(event: ?)",
            "onShow": "fn()"
          }
        },
        "FileList": {
          "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
          "prototype": {
            "attachScope": "Object",
            "set": "fn(property: string, value: Object)",
            "get": "fn(property: string) -> Object",
            "watch": "fn(property: string, callback: ?) -> ret1043",
            "attributeMap": "Object",
            "baseClass": "string",
            "class": "string",
            "containerNode": "HTMLElement",
            "contextRequire": "Function",
            "dir": "string",
            "domNode": "HTMLElement",
            "focused": "bool",
            "headerFilename": "string",
            "headerFilesize": "string",
            "headerIndex": "string",
            "headerType": "string",
            "id": "string",
            "lang": "string",
            "observer": "string",
            "ownerDocument": "Object",
            "rowAmt": "number",
            "searchContainerNode": "bool",
            "srcNodeRef": "HTMLElement",
            "style": "string",
            "templatePath": "string",
            "templateString": "string",
            "title": "string",
            "tooltip": "string",
            "uploader": "Object",
            "uploaderId": "string",
            "widgetsInTemplate": "bool",
            "attr": "fn(name: String, value: Object) -> ?",
            "buildRendering": "fn()",
            "connect": "fn(obj: Object, event: String, method: String) -> ?",
            "connectForm": "fn()",
            "convertBytes": "fn(bytes: ?) -> Object",
            "defer": "fn(fcn: Function, delay: number) -> Object",
            "destroy": "fn(preserveDom?: bool)",
            "destroyDescendants": "fn(preserveDom: bool)",
            "destroyRecursive": "fn(preserveDom: bool)",
            "destroyRendering": "fn(preserveDom?: bool)",
            "disconnect": "fn(handle: ?)",
            "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
            "getChildren": "fn() -> [?]",
            "getDescendants": "fn() -> [?]",
            "getFileType": "fn(name: String) -> ?",
            "getForm": "fn() -> HTMLElement",
            "getMimeType": "fn() -> String",
            "getParent": "fn() -> ?",
            "getUrl": "fn() -> ?",
            "hideProgress": "fn(animate: bool)",
            "isFocusable": "fn() -> ?",
            "isLeftToRight": "fn() -> ?",
            "on": "fn(type: String, func: Function) -> ?",
            "own": "fn() -> ?",
            "placeAt": "fn(reference: String, position: String) -> ?",
            "postCreate": "fn()",
            "postMixInProperties": "fn()",
            "reset": "fn()",
            "setAttribute": "fn(attr: String, value: ?)",
            "setUploader": "fn()",
            "showProgress": "fn(animate: bool)",
            "startup": "fn()",
            "subscribe": "fn(t: String, method: Function) -> ?",
            "supports": "fn(what: ?) -> ?",
            "uninitialize": "fn() -> bool",
            "unsubscribe": "fn(handle: Object)",
            "getCachedTemplate": "fn() -> ?",
            "onBlur": "fn()",
            "onClick": "fn(event: ?)",
            "onClose": "fn() -> bool",
            "onDblClick": "fn(event: ?)",
            "onFocus": "fn()",
            "onHide": "fn()",
            "onKeyDown": "fn(event: ?)",
            "onKeyPress": "fn(event: ?)",
            "onKeyUp": "fn(event: ?)",
            "onMouseDown": "fn(event: ?)",
            "onMouseEnter": "fn(event: ?)",
            "onMouseLeave": "fn(event: ?)",
            "onMouseMove": "fn(event: ?)",
            "onMouseOut": "fn(event: ?)",
            "onMouseOver": "fn(event: ?)",
            "onMouseUp": "fn(event: ?)",
            "onShow": "fn()"
          }
        },
        "plugins": {
          "Flash": {},
          "HTML5": {},
          "IFrame": {}
        }
      },
      "_HasDropDown": {
        "clone": "fn(src: ?) -> ?",
        "delegate": "fn(obj: Object, props: [Object]) -> ?",
        "exists": "fn(name: String, obj: Object) -> bool",
        "extend": "fn(ctor: Object, props: Object) -> Object",
        "getObject": "fn(name: String, create: bool, context: Object) -> ?",
        "hitch": "fn(scope: Object, method: Function) -> ?",
        "isAlien": "fn(it: ?) -> ?",
        "isArray": "fn(it: ?) -> ?",
        "isArrayLike": "fn(it: ?) -> ?",
        "isFunction": "fn(it: ?) -> bool",
        "isObject": "fn(it: ?) -> bool",
        "isString": "fn(it: ?) -> bool",
        "mixin": "fn(dest: Object, sources: [Object]) -> Object",
        "partial": "fn(method: Function) -> ?",
        "replace": "fn(tmpl: String, map: Object, pattern: RegExp) -> String",
        "setObject": "fn(name: String, value: ?, context: Object) -> ?",
        "trim": "fn(str: String) -> String"
      },
      "DropDownStack": {},
      "RadioStack": {}
    }
  },
  "dojox/form/_HasDropDown": "exp",
  "dojox/form/DropDownStack": "exp",
  "dojox/form/RadioStack": "exp",
  "dojox/form/_SelectStackMixin": "exp",
  "dojox/form/BusyButton": "exp",
  "dojox/form/_FormSelectWidget": "exp",
  "dojox/form/_FormSelectWidget.__SelectOption": "exp",
  "dojox/form/CheckedMultiSelect": "exp",
  "dojox/form/DayTextBox": "exp",
  "dojox/form/DropDownSelect": "exp",
  "dojox/form/DropDownSelect._Menu": "exp",
  "dojox/form/FileInput": "exp",
  "dojox/form/DateTextBox": "exp",
  "dojox/form/FileInputBlind": "exp",
  "dojox/form/FileInputAuto": "exp",
  "dojox/form/FileUploader": "exp",
  "dojox/form/Manager": "exp",
  "dojox/form/FilePickerTextBox": "exp",
  "dojox/form/RangeSlider": "exp",
  "dojox/form/ListInput": "exp",
  "dojox/form/PasswordValidator": "exp",
  "dojox/form/Rating": "exp",
  "dojox/form/MonthTextBox": "exp",
  "dojox/form/MultiComboBox": "exp",
  "dojox/form/TimeSpinner": "exp",
  "dojox/form/TriStateCheckBox": "exp",
  "dojox/form/Uploader": "exp",
  "dojox/form/YearTextBox": "exp",
  "dojox/form/manager/_ClassMixin": "exp",
  "dojox/form/manager/_DisplayMixin": "exp",
  "dojox/form/manager/_EnableMixin": "exp",
  "dojox/form/manager/_FormMixin": "exp",
  "dojox/form/manager/_Mixin": "exp",
  "dojox/form/manager/_NodeMixin": "exp",
  "dojox/form/manager/_ValueMixin": "exp",
  "dojox/form/uploader/_HTML5": "exp",
  "dojox/form/uploader/_Flash": "exp",
  "dojox/form/uploader/_IFrame": "exp",
  "dojox/form/uploader/_Base": "exp",
  "dojox/form/uploader/FileList": "exp",
  "dojox/form/uploader/plugins/Flash": "exp",
  "dojox/form/uploader/plugins/HTML5": "exp",
  "dojox/form/uploader/plugins/IFrame": "exp",
  "!name": "dojox.form.d.ts",
  "!define": {
    "ret": {
      "unwatch": "fn()"
    },
    "ret1": {
      "unwatch": "fn()"
    },
    "ret2": {
      "unwatch": "fn()"
    },
    "ret3": {
      "unwatch": "fn()"
    },
    "ret4": {
      "unwatch": "fn()"
    },
    "ret5": {
      "unwatch": "fn()"
    },
    "ret6": {
      "unwatch": "fn()"
    },
    "ret7": {
      "unwatch": "fn()"
    },
    "ret8": {
      "unwatch": "fn()"
    },
    "ret9": {
      "unwatch": "fn()"
    },
    "ret10": {
      "unwatch": "fn()"
    },
    "ret11": {
      "unwatch": "fn()"
    },
    "ret12": {
      "unwatch": "fn()"
    },
    "ret13": {
      "unwatch": "fn()"
    },
    "ret14": {
      "unwatch": "fn()"
    },
    "ret15": {
      "unwatch": "fn()"
    },
    "ret16": {
      "unwatch": "fn()"
    },
    "ret17": {
      "unwatch": "fn()"
    },
    "ret18": {
      "unwatch": "fn()"
    },
    "ret19": {
      "unwatch": "fn()"
    },
    "ret20": {
      "unwatch": "fn()"
    },
    "ret21": {
      "unwatch": "fn()"
    },
    "ret22": {
      "unwatch": "fn()"
    },
    "ret23": {
      "unwatch": "fn()"
    },
    "ret24": {
      "unwatch": "fn()"
    },
    "ret25": {
      "unwatch": "fn()"
    },
    "ret26": {
      "unwatch": "fn()"
    },
    "ret27": {
      "unwatch": "fn()"
    },
    "ret28": {
      "unwatch": "fn()"
    },
    "ret29": {
      "unwatch": "fn()"
    },
    "ret30": {
      "unwatch": "fn()"
    },
    "ret31": {
      "unwatch": "fn()"
    },
    "ret32": {
      "unwatch": "fn()"
    },
    "ret33": {
      "unwatch": "fn()"
    },
    "ret34": {
      "unwatch": "fn()"
    },
    "ret35": {
      "unwatch": "fn()"
    },
    "ret36": {
      "unwatch": "fn()"
    },
    "ret37": {
      "unwatch": "fn()"
    },
    "ret38": {
      "unwatch": "fn()"
    },
    "ret39": {
      "unwatch": "fn()"
    },
    "ret40": {
      "unwatch": "fn()"
    },
    "ret41": {
      "unwatch": "fn()"
    },
    "ret42": {
      "unwatch": "fn()"
    },
    "ret43": {
      "unwatch": "fn()"
    },
    "ret44": {
      "unwatch": "fn()"
    },
    "ret45": {
      "unwatch": "fn()"
    },
    "ret46": {
      "unwatch": "fn()"
    },
    "ret47": {
      "unwatch": "fn()"
    },
    "ret48": {
      "unwatch": "fn()"
    },
    "ret49": {
      "unwatch": "fn()"
    },
    "ret50": {
      "unwatch": "fn()"
    },
    "ret51": {
      "unwatch": "fn()"
    },
    "ret52": {
      "unwatch": "fn()"
    },
    "ret53": {
      "unwatch": "fn()"
    },
    "ret54": {
      "unwatch": "fn()"
    },
    "ret55": {
      "unwatch": "fn()"
    },
    "ret56": {
      "unwatch": "fn()"
    },
    "ret57": {
      "unwatch": "fn()"
    },
    "ret58": {
      "unwatch": "fn()"
    },
    "ret59": {
      "unwatch": "fn()"
    },
    "ret60": {
      "unwatch": "fn()"
    },
    "ret61": {
      "unwatch": "fn()"
    },
    "ret62": {
      "unwatch": "fn()"
    },
    "ret63": {
      "unwatch": "fn()"
    },
    "ret64": {
      "unwatch": "fn()"
    },
    "ret65": {
      "unwatch": "fn()"
    },
    "ret66": {
      "unwatch": "fn()"
    },
    "ret67": {
      "unwatch": "fn()"
    },
    "ret68": {
      "unwatch": "fn()"
    },
    "ret69": {
      "unwatch": "fn()"
    },
    "ret70": {
      "unwatch": "fn()"
    },
    "ret71": {
      "unwatch": "fn()"
    },
    "ret72": {
      "unwatch": "fn()"
    },
    "ret73": {
      "unwatch": "fn()"
    },
    "ret74": {
      "unwatch": "fn()"
    },
    "ret75": {
      "unwatch": "fn()"
    },
    "ret76": {
      "unwatch": "fn()"
    },
    "ret77": {
      "unwatch": "fn()"
    },
    "ret78": {
      "unwatch": "fn()"
    },
    "ret79": {
      "unwatch": "fn()"
    },
    "ret80": {
      "unwatch": "fn()"
    },
    "ret81": {
      "unwatch": "fn()"
    },
    "ret82": {
      "unwatch": "fn()"
    },
    "ret83": {
      "unwatch": "fn()"
    },
    "ret84": {
      "unwatch": "fn()"
    },
    "ret85": {
      "unwatch": "fn()"
    },
    "ret86": {
      "unwatch": "fn()"
    },
    "ret87": {
      "unwatch": "fn()"
    },
    "ret88": {
      "unwatch": "fn()"
    },
    "ret89": {
      "unwatch": "fn()"
    },
    "ret90": {
      "unwatch": "fn()"
    },
    "ret91": {
      "unwatch": "fn()"
    },
    "ret92": {
      "unwatch": "fn()"
    },
    "ret93": {
      "unwatch": "fn()"
    },
    "ret94": {
      "unwatch": "fn()"
    },
    "ret95": {
      "unwatch": "fn()"
    },
    "ret96": {
      "unwatch": "fn()"
    },
    "ret97": {
      "unwatch": "fn()"
    },
    "ret98": {
      "unwatch": "fn()"
    },
    "ret99": {
      "unwatch": "fn()"
    },
    "ret100": {
      "unwatch": "fn()"
    },
    "ret101": {
      "unwatch": "fn()"
    },
    "ret102": {
      "unwatch": "fn()"
    },
    "ret103": {
      "unwatch": "fn()"
    },
    "ret104": {
      "unwatch": "fn()"
    },
    "ret105": {
      "unwatch": "fn()"
    },
    "ret106": {
      "unwatch": "fn()"
    },
    "ret107": {
      "unwatch": "fn()"
    },
    "ret108": {
      "unwatch": "fn()"
    },
    "ret109": {
      "unwatch": "fn()"
    },
    "ret110": {
      "unwatch": "fn()"
    },
    "ret111": {
      "unwatch": "fn()"
    },
    "ret112": {
      "unwatch": "fn()"
    },
    "ret113": {
      "unwatch": "fn()"
    },
    "ret114": {
      "unwatch": "fn()"
    },
    "ret115": {
      "unwatch": "fn()"
    },
    "ret116": {
      "unwatch": "fn()"
    },
    "ret117": {
      "unwatch": "fn()"
    },
    "ret118": {
      "unwatch": "fn()"
    },
    "ret119": {
      "unwatch": "fn()"
    },
    "ret120": {
      "unwatch": "fn()"
    },
    "ret121": {
      "unwatch": "fn()"
    },
    "ret122": {
      "unwatch": "fn()"
    },
    "ret123": {
      "unwatch": "fn()"
    },
    "ret124": {
      "unwatch": "fn()"
    },
    "ret125": {
      "unwatch": "fn()"
    },
    "ret126": {
      "unwatch": "fn()"
    },
    "ret127": {
      "unwatch": "fn()"
    },
    "ret128": {
      "unwatch": "fn()"
    },
    "ret129": {
      "unwatch": "fn()"
    },
    "ret130": {
      "unwatch": "fn()"
    },
    "ret131": {
      "unwatch": "fn()"
    },
    "ret132": {
      "unwatch": "fn()"
    },
    "ret133": {
      "unwatch": "fn()"
    },
    "ret134": {
      "unwatch": "fn()"
    },
    "ret135": {
      "unwatch": "fn()"
    },
    "ret136": {
      "unwatch": "fn()"
    },
    "ret137": {
      "unwatch": "fn()"
    },
    "ret138": {
      "unwatch": "fn()"
    },
    "ret139": {
      "unwatch": "fn()"
    },
    "ret140": {
      "unwatch": "fn()"
    },
    "ret141": {
      "unwatch": "fn()"
    },
    "ret142": {
      "unwatch": "fn()"
    },
    "ret143": {
      "unwatch": "fn()"
    },
    "ret144": {
      "unwatch": "fn()"
    },
    "ret145": {
      "unwatch": "fn()"
    },
    "ret146": {
      "unwatch": "fn()"
    },
    "ret147": {
      "unwatch": "fn()"
    },
    "ret148": {
      "unwatch": "fn()"
    },
    "ret149": {
      "unwatch": "fn()"
    },
    "ret150": {
      "unwatch": "fn()"
    },
    "ret151": {
      "unwatch": "fn()"
    },
    "ret152": {
      "unwatch": "fn()"
    },
    "ret153": {
      "unwatch": "fn()"
    },
    "ret154": {
      "unwatch": "fn()"
    },
    "ret155": {
      "unwatch": "fn()"
    },
    "ret156": {
      "unwatch": "fn()"
    },
    "ret157": {
      "unwatch": "fn()"
    },
    "ret158": {
      "unwatch": "fn()"
    },
    "ret159": {
      "unwatch": "fn()"
    },
    "ret160": {
      "unwatch": "fn()"
    },
    "ret161": {
      "unwatch": "fn()"
    },
    "ret162": {
      "unwatch": "fn()"
    },
    "ret163": {
      "unwatch": "fn()"
    },
    "ret164": {
      "unwatch": "fn()"
    },
    "ret165": {
      "unwatch": "fn()"
    },
    "ret166": {
      "unwatch": "fn()"
    },
    "ret167": {
      "unwatch": "fn()"
    },
    "ret168": {
      "unwatch": "fn()"
    },
    "ret169": {
      "unwatch": "fn()"
    },
    "ret170": {
      "unwatch": "fn()"
    },
    "ret171": {
      "unwatch": "fn()"
    },
    "ret172": {
      "unwatch": "fn()"
    },
    "ret173": {
      "unwatch": "fn()"
    },
    "ret174": {
      "unwatch": "fn()"
    },
    "ret175": {
      "unwatch": "fn()"
    },
    "ret176": {
      "unwatch": "fn()"
    },
    "ret177": {
      "unwatch": "fn()"
    },
    "ret178": {
      "unwatch": "fn()"
    },
    "ret179": {
      "unwatch": "fn()"
    },
    "ret180": {
      "unwatch": "fn()"
    },
    "ret181": {
      "unwatch": "fn()"
    },
    "ret182": {
      "unwatch": "fn()"
    },
    "ret183": {
      "unwatch": "fn()"
    },
    "ret184": {
      "unwatch": "fn()"
    },
    "ret185": {
      "unwatch": "fn()"
    },
    "ret186": {
      "unwatch": "fn()"
    },
    "ret187": {
      "unwatch": "fn()"
    },
    "ret188": {
      "unwatch": "fn()"
    },
    "ret189": {
      "unwatch": "fn()"
    },
    "ret190": {
      "unwatch": "fn()"
    },
    "ret191": {
      "unwatch": "fn()"
    },
    "ret192": {
      "unwatch": "fn()"
    },
    "ret193": {
      "unwatch": "fn()"
    },
    "ret194": {
      "unwatch": "fn()"
    },
    "ret195": {
      "unwatch": "fn()"
    },
    "ret196": {
      "unwatch": "fn()"
    },
    "ret197": {
      "unwatch": "fn()"
    },
    "ret198": {
      "unwatch": "fn()"
    },
    "ret199": {
      "unwatch": "fn()"
    },
    "ret200": {
      "unwatch": "fn()"
    },
    "ret201": {
      "unwatch": "fn()"
    },
    "ret202": {
      "unwatch": "fn()"
    },
    "ret203": {
      "unwatch": "fn()"
    },
    "ret204": {
      "unwatch": "fn()"
    },
    "ret205": {
      "unwatch": "fn()"
    },
    "ret206": {
      "unwatch": "fn()"
    },
    "ret207": {
      "unwatch": "fn()"
    },
    "ret208": {
      "unwatch": "fn()"
    },
    "ret209": {
      "unwatch": "fn()"
    },
    "ret210": {
      "unwatch": "fn()"
    },
    "ret211": {
      "unwatch": "fn()"
    },
    "ret212": {
      "unwatch": "fn()"
    },
    "ret213": {
      "unwatch": "fn()"
    },
    "ret214": {
      "unwatch": "fn()"
    },
    "ret215": {
      "unwatch": "fn()"
    },
    "ret216": {
      "unwatch": "fn()"
    },
    "ret217": {
      "unwatch": "fn()"
    },
    "ret218": {
      "unwatch": "fn()"
    },
    "ret219": {
      "unwatch": "fn()"
    },
    "ret220": {
      "unwatch": "fn()"
    },
    "ret221": {
      "unwatch": "fn()"
    },
    "ret222": {
      "unwatch": "fn()"
    },
    "ret223": {
      "unwatch": "fn()"
    },
    "ret224": {
      "unwatch": "fn()"
    },
    "ret225": {
      "unwatch": "fn()"
    },
    "ret226": {
      "unwatch": "fn()"
    },
    "ret227": {
      "unwatch": "fn()"
    },
    "ret228": {
      "unwatch": "fn()"
    },
    "ret229": {
      "unwatch": "fn()"
    },
    "ret230": {
      "unwatch": "fn()"
    },
    "ret231": {
      "unwatch": "fn()"
    },
    "ret232": {
      "unwatch": "fn()"
    },
    "ret233": {
      "unwatch": "fn()"
    },
    "ret234": {
      "unwatch": "fn()"
    },
    "ret235": {
      "unwatch": "fn()"
    },
    "ret236": {
      "unwatch": "fn()"
    },
    "ret237": {
      "unwatch": "fn()"
    },
    "ret238": {
      "unwatch": "fn()"
    },
    "ret239": {
      "unwatch": "fn()"
    },
    "ret240": {
      "unwatch": "fn()"
    },
    "ret241": {
      "unwatch": "fn()"
    },
    "ret242": {
      "unwatch": "fn()"
    },
    "ret243": {
      "unwatch": "fn()"
    },
    "ret244": {
      "unwatch": "fn()"
    },
    "ret245": {
      "unwatch": "fn()"
    },
    "ret246": {
      "unwatch": "fn()"
    },
    "ret247": {
      "unwatch": "fn()"
    },
    "ret248": {
      "unwatch": "fn()"
    },
    "ret249": {
      "unwatch": "fn()"
    },
    "ret250": {
      "unwatch": "fn()"
    },
    "ret251": {
      "unwatch": "fn()"
    },
    "ret252": {
      "unwatch": "fn()"
    },
    "ret253": {
      "unwatch": "fn()"
    },
    "ret254": {
      "unwatch": "fn()"
    },
    "ret255": {
      "unwatch": "fn()"
    },
    "ret256": {
      "unwatch": "fn()"
    },
    "ret257": {
      "unwatch": "fn()"
    },
    "ret258": {
      "unwatch": "fn()"
    },
    "ret259": {
      "unwatch": "fn()"
    },
    "ret260": {
      "unwatch": "fn()"
    },
    "ret261": {
      "unwatch": "fn()"
    },
    "ret262": {
      "unwatch": "fn()"
    },
    "ret263": {
      "unwatch": "fn()"
    },
    "ret264": {
      "unwatch": "fn()"
    },
    "ret265": {
      "unwatch": "fn()"
    },
    "ret266": {
      "unwatch": "fn()"
    },
    "ret267": {
      "unwatch": "fn()"
    },
    "ret268": {
      "unwatch": "fn()"
    },
    "ret269": {
      "unwatch": "fn()"
    },
    "ret270": {
      "unwatch": "fn()"
    },
    "ret271": {
      "unwatch": "fn()"
    },
    "ret272": {
      "unwatch": "fn()"
    },
    "ret273": {
      "unwatch": "fn()"
    },
    "ret274": {
      "unwatch": "fn()"
    },
    "ret275": {
      "unwatch": "fn()"
    },
    "ret276": {
      "unwatch": "fn()"
    },
    "ret277": {
      "unwatch": "fn()"
    },
    "ret278": {
      "unwatch": "fn()"
    },
    "ret279": {
      "unwatch": "fn()"
    },
    "ret280": {
      "unwatch": "fn()"
    },
    "ret281": {
      "unwatch": "fn()"
    },
    "ret282": {
      "unwatch": "fn()"
    },
    "ret283": {
      "unwatch": "fn()"
    },
    "ret284": {
      "unwatch": "fn()"
    },
    "ret285": {
      "unwatch": "fn()"
    },
    "ret286": {
      "unwatch": "fn()"
    },
    "ret287": {
      "unwatch": "fn()"
    },
    "ret288": {
      "unwatch": "fn()"
    },
    "ret289": {
      "unwatch": "fn()"
    },
    "ret290": {
      "unwatch": "fn()"
    },
    "ret291": {
      "unwatch": "fn()"
    },
    "ret292": {
      "unwatch": "fn()"
    },
    "ret293": {
      "unwatch": "fn()"
    },
    "ret294": {
      "unwatch": "fn()"
    },
    "ret295": {
      "unwatch": "fn()"
    },
    "ret296": {
      "unwatch": "fn()"
    },
    "ret297": {
      "unwatch": "fn()"
    },
    "ret298": {
      "unwatch": "fn()"
    },
    "ret299": {
      "unwatch": "fn()"
    },
    "ret300": {
      "unwatch": "fn()"
    },
    "ret301": {
      "unwatch": "fn()"
    },
    "ret302": {
      "unwatch": "fn()"
    },
    "ret303": {
      "unwatch": "fn()"
    },
    "ret304": {
      "unwatch": "fn()"
    },
    "ret305": {
      "unwatch": "fn()"
    },
    "ret306": {
      "unwatch": "fn()"
    },
    "ret307": {
      "unwatch": "fn()"
    },
    "ret308": {
      "unwatch": "fn()"
    },
    "ret309": {
      "unwatch": "fn()"
    },
    "ret310": {
      "unwatch": "fn()"
    },
    "ret311": {
      "unwatch": "fn()"
    },
    "ret312": {
      "unwatch": "fn()"
    },
    "ret313": {
      "unwatch": "fn()"
    },
    "ret314": {
      "unwatch": "fn()"
    },
    "ret315": {
      "unwatch": "fn()"
    },
    "ret316": {
      "unwatch": "fn()"
    },
    "ret317": {
      "unwatch": "fn()"
    },
    "ret318": {
      "unwatch": "fn()"
    },
    "ret319": {
      "unwatch": "fn()"
    },
    "ret320": {
      "unwatch": "fn()"
    },
    "ret321": {
      "unwatch": "fn()"
    },
    "ret322": {
      "unwatch": "fn()"
    },
    "ret323": {
      "unwatch": "fn()"
    },
    "ret324": {
      "unwatch": "fn()"
    },
    "ret325": {
      "unwatch": "fn()"
    },
    "ret326": {
      "unwatch": "fn()"
    },
    "ret327": {
      "unwatch": "fn()"
    },
    "ret328": {
      "unwatch": "fn()"
    },
    "ret329": {
      "unwatch": "fn()"
    },
    "ret330": {
      "unwatch": "fn()"
    },
    "ret331": {
      "unwatch": "fn()"
    },
    "ret332": {
      "unwatch": "fn()"
    },
    "ret333": {
      "unwatch": "fn()"
    },
    "ret334": {
      "unwatch": "fn()"
    },
    "ret335": {
      "unwatch": "fn()"
    },
    "ret336": {
      "unwatch": "fn()"
    },
    "ret337": {
      "unwatch": "fn()"
    },
    "ret338": {
      "unwatch": "fn()"
    },
    "ret339": {
      "unwatch": "fn()"
    },
    "ret340": {
      "unwatch": "fn()"
    },
    "ret341": {
      "unwatch": "fn()"
    },
    "ret342": {
      "unwatch": "fn()"
    },
    "ret343": {
      "unwatch": "fn()"
    },
    "ret344": {
      "unwatch": "fn()"
    },
    "ret345": {
      "unwatch": "fn()"
    },
    "ret346": {
      "unwatch": "fn()"
    },
    "ret347": {
      "unwatch": "fn()"
    },
    "ret348": {
      "unwatch": "fn()"
    },
    "ret349": {
      "unwatch": "fn()"
    },
    "ret350": {
      "unwatch": "fn()"
    },
    "ret351": {
      "unwatch": "fn()"
    },
    "ret352": {
      "unwatch": "fn()"
    },
    "ret353": {
      "unwatch": "fn()"
    },
    "ret354": {
      "unwatch": "fn()"
    },
    "ret355": {
      "unwatch": "fn()"
    },
    "ret356": {
      "unwatch": "fn()"
    },
    "ret357": {
      "unwatch": "fn()"
    },
    "ret358": {
      "unwatch": "fn()"
    },
    "ret359": {
      "unwatch": "fn()"
    },
    "ret360": {
      "unwatch": "fn()"
    },
    "ret361": {
      "unwatch": "fn()"
    },
    "ret362": {
      "unwatch": "fn()"
    },
    "ret363": {
      "unwatch": "fn()"
    },
    "ret364": {
      "unwatch": "fn()"
    },
    "ret365": {
      "unwatch": "fn()"
    },
    "ret366": {
      "unwatch": "fn()"
    },
    "ret367": {
      "unwatch": "fn()"
    },
    "ret368": {
      "unwatch": "fn()"
    },
    "ret369": {
      "unwatch": "fn()"
    },
    "ret370": {
      "unwatch": "fn()"
    },
    "ret371": {
      "unwatch": "fn()"
    },
    "ret372": {
      "unwatch": "fn()"
    },
    "ret373": {
      "unwatch": "fn()"
    },
    "ret374": {
      "unwatch": "fn()"
    },
    "ret375": {
      "unwatch": "fn()"
    },
    "ret376": {
      "unwatch": "fn()"
    },
    "ret377": {
      "unwatch": "fn()"
    },
    "ret378": {
      "unwatch": "fn()"
    },
    "ret379": {
      "unwatch": "fn()"
    },
    "ret380": {
      "unwatch": "fn()"
    },
    "ret381": {
      "unwatch": "fn()"
    },
    "ret382": {
      "unwatch": "fn()"
    },
    "ret383": {
      "unwatch": "fn()"
    },
    "ret384": {
      "unwatch": "fn()"
    },
    "ret385": {
      "unwatch": "fn()"
    },
    "ret386": {
      "unwatch": "fn()"
    },
    "ret387": {
      "unwatch": "fn()"
    },
    "ret388": {
      "unwatch": "fn()"
    },
    "ret389": {
      "unwatch": "fn()"
    },
    "ret390": {
      "unwatch": "fn()"
    },
    "ret391": {
      "unwatch": "fn()"
    },
    "ret392": {
      "unwatch": "fn()"
    },
    "ret393": {
      "unwatch": "fn()"
    },
    "ret394": {
      "unwatch": "fn()"
    },
    "ret395": {
      "unwatch": "fn()"
    },
    "ret396": {
      "unwatch": "fn()"
    },
    "ret397": {
      "unwatch": "fn()"
    },
    "ret398": {
      "unwatch": "fn()"
    },
    "ret399": {
      "unwatch": "fn()"
    },
    "ret400": {
      "unwatch": "fn()"
    },
    "ret401": {
      "unwatch": "fn()"
    },
    "ret402": {
      "unwatch": "fn()"
    },
    "ret403": {
      "unwatch": "fn()"
    },
    "ret404": {
      "unwatch": "fn()"
    },
    "ret405": {
      "unwatch": "fn()"
    },
    "ret406": {
      "unwatch": "fn()"
    },
    "ret407": {
      "unwatch": "fn()"
    },
    "ret408": {
      "unwatch": "fn()"
    },
    "ret409": {
      "unwatch": "fn()"
    },
    "ret410": {
      "unwatch": "fn()"
    },
    "ret411": {
      "unwatch": "fn()"
    },
    "ret412": {
      "unwatch": "fn()"
    },
    "ret413": {
      "unwatch": "fn()"
    },
    "ret414": {
      "unwatch": "fn()"
    },
    "ret415": {
      "unwatch": "fn()"
    },
    "ret416": {
      "unwatch": "fn()"
    },
    "ret417": {
      "unwatch": "fn()"
    },
    "ret418": {
      "unwatch": "fn()"
    },
    "ret419": {
      "unwatch": "fn()"
    },
    "ret420": {
      "unwatch": "fn()"
    },
    "ret421": {
      "unwatch": "fn()"
    },
    "ret422": {
      "unwatch": "fn()"
    },
    "ret423": {
      "unwatch": "fn()"
    },
    "ret424": {
      "unwatch": "fn()"
    },
    "ret425": {
      "unwatch": "fn()"
    },
    "ret426": {
      "unwatch": "fn()"
    },
    "ret427": {
      "unwatch": "fn()"
    },
    "ret428": {
      "unwatch": "fn()"
    },
    "ret429": {
      "unwatch": "fn()"
    },
    "ret430": {
      "unwatch": "fn()"
    },
    "ret431": {
      "unwatch": "fn()"
    },
    "ret432": {
      "unwatch": "fn()"
    },
    "ret433": {
      "unwatch": "fn()"
    },
    "ret434": {
      "unwatch": "fn()"
    },
    "ret435": {
      "unwatch": "fn()"
    },
    "ret436": {
      "unwatch": "fn()"
    },
    "ret437": {
      "unwatch": "fn()"
    },
    "ret438": {
      "unwatch": "fn()"
    },
    "ret439": {
      "unwatch": "fn()"
    },
    "ret440": {
      "unwatch": "fn()"
    },
    "ret441": {
      "unwatch": "fn()"
    },
    "ret442": {
      "unwatch": "fn()"
    },
    "ret443": {
      "unwatch": "fn()"
    },
    "ret444": {
      "unwatch": "fn()"
    },
    "ret445": {
      "unwatch": "fn()"
    },
    "ret446": {
      "unwatch": "fn()"
    },
    "ret447": {
      "unwatch": "fn()"
    },
    "ret448": {
      "unwatch": "fn()"
    },
    "ret449": {
      "unwatch": "fn()"
    },
    "ret450": {
      "unwatch": "fn()"
    },
    "ret451": {
      "unwatch": "fn()"
    },
    "ret452": {
      "unwatch": "fn()"
    },
    "ret453": {
      "unwatch": "fn()"
    },
    "ret454": {
      "unwatch": "fn()"
    },
    "ret455": {
      "unwatch": "fn()"
    },
    "ret456": {
      "unwatch": "fn()"
    },
    "ret457": {
      "unwatch": "fn()"
    },
    "ret458": {
      "unwatch": "fn()"
    },
    "ret459": {
      "unwatch": "fn()"
    },
    "ret460": {
      "unwatch": "fn()"
    },
    "ret461": {
      "unwatch": "fn()"
    },
    "ret462": {
      "unwatch": "fn()"
    },
    "ret463": {
      "unwatch": "fn()"
    },
    "ret464": {
      "unwatch": "fn()"
    },
    "ret465": {
      "unwatch": "fn()"
    },
    "ret466": {
      "unwatch": "fn()"
    },
    "ret467": {
      "unwatch": "fn()"
    },
    "ret468": {
      "unwatch": "fn()"
    },
    "ret469": {
      "unwatch": "fn()"
    },
    "ret470": {
      "unwatch": "fn()"
    },
    "ret471": {
      "unwatch": "fn()"
    },
    "ret472": {
      "unwatch": "fn()"
    },
    "ret473": {
      "unwatch": "fn()"
    },
    "ret474": {
      "unwatch": "fn()"
    },
    "ret475": {
      "unwatch": "fn()"
    },
    "ret476": {
      "unwatch": "fn()"
    },
    "ret477": {
      "unwatch": "fn()"
    },
    "ret478": {
      "unwatch": "fn()"
    },
    "ret479": {
      "unwatch": "fn()"
    },
    "ret480": {
      "unwatch": "fn()"
    },
    "ret481": {
      "unwatch": "fn()"
    },
    "ret482": {
      "unwatch": "fn()"
    },
    "ret483": {
      "unwatch": "fn()"
    },
    "ret484": {
      "unwatch": "fn()"
    },
    "ret485": {
      "unwatch": "fn()"
    },
    "ret486": {
      "unwatch": "fn()"
    },
    "ret487": {
      "unwatch": "fn()"
    },
    "ret488": {
      "unwatch": "fn()"
    },
    "ret489": {
      "unwatch": "fn()"
    },
    "ret490": {
      "unwatch": "fn()"
    },
    "ret491": {
      "unwatch": "fn()"
    },
    "ret492": {
      "unwatch": "fn()"
    },
    "ret493": {
      "unwatch": "fn()"
    },
    "ret494": {
      "unwatch": "fn()"
    },
    "ret495": {
      "unwatch": "fn()"
    },
    "ret496": {
      "unwatch": "fn()"
    },
    "ret497": {
      "unwatch": "fn()"
    },
    "ret498": {
      "unwatch": "fn()"
    },
    "ret499": {
      "unwatch": "fn()"
    },
    "ret500": {
      "unwatch": "fn()"
    },
    "ret501": {
      "unwatch": "fn()"
    },
    "ret502": {
      "unwatch": "fn()"
    },
    "ret503": {
      "unwatch": "fn()"
    },
    "ret504": {
      "unwatch": "fn()"
    },
    "ret505": {
      "unwatch": "fn()"
    },
    "ret506": {
      "unwatch": "fn()"
    },
    "ret507": {
      "unwatch": "fn()"
    },
    "ret508": {
      "unwatch": "fn()"
    },
    "ret509": {
      "unwatch": "fn()"
    },
    "ret510": {
      "unwatch": "fn()"
    },
    "ret511": {
      "unwatch": "fn()"
    },
    "ret512": {
      "unwatch": "fn()"
    },
    "ret513": {
      "unwatch": "fn()"
    },
    "ret514": {
      "unwatch": "fn()"
    },
    "ret515": {
      "unwatch": "fn()"
    },
    "ret516": {
      "unwatch": "fn()"
    },
    "ret517": {
      "unwatch": "fn()"
    },
    "ret518": {
      "unwatch": "fn()"
    },
    "ret519": {
      "unwatch": "fn()"
    },
    "ret520": {
      "unwatch": "fn()"
    },
    "ret521": {
      "unwatch": "fn()"
    },
    "ret522": {
      "unwatch": "fn()"
    },
    "ret523": {
      "unwatch": "fn()"
    },
    "ret524": {
      "unwatch": "fn()"
    },
    "ret525": {
      "unwatch": "fn()"
    },
    "ret526": {
      "unwatch": "fn()"
    },
    "ret527": {
      "unwatch": "fn()"
    },
    "ret528": {
      "unwatch": "fn()"
    },
    "ret529": {
      "unwatch": "fn()"
    },
    "ret530": {
      "unwatch": "fn()"
    },
    "ret531": {
      "unwatch": "fn()"
    },
    "ret532": {
      "unwatch": "fn()"
    },
    "ret533": {
      "unwatch": "fn()"
    },
    "ret534": {
      "unwatch": "fn()"
    },
    "ret535": {
      "unwatch": "fn()"
    },
    "ret536": {
      "unwatch": "fn()"
    },
    "ret537": {
      "unwatch": "fn()"
    },
    "ret538": {
      "unwatch": "fn()"
    },
    "ret539": {
      "unwatch": "fn()"
    },
    "ret540": {
      "unwatch": "fn()"
    },
    "ret541": {
      "unwatch": "fn()"
    },
    "ret542": {
      "unwatch": "fn()"
    },
    "ret543": {
      "unwatch": "fn()"
    },
    "ret544": {
      "unwatch": "fn()"
    },
    "ret545": {
      "unwatch": "fn()"
    },
    "ret546": {
      "unwatch": "fn()"
    },
    "ret547": {
      "unwatch": "fn()"
    },
    "ret548": {
      "unwatch": "fn()"
    },
    "ret549": {
      "unwatch": "fn()"
    },
    "ret550": {
      "unwatch": "fn()"
    },
    "ret551": {
      "unwatch": "fn()"
    },
    "ret552": {
      "unwatch": "fn()"
    },
    "ret553": {
      "unwatch": "fn()"
    },
    "ret554": {
      "unwatch": "fn()"
    },
    "ret555": {
      "unwatch": "fn()"
    },
    "ret556": {
      "unwatch": "fn()"
    },
    "ret557": {
      "unwatch": "fn()"
    },
    "ret558": {
      "unwatch": "fn()"
    },
    "ret559": {
      "unwatch": "fn()"
    },
    "ret560": {
      "unwatch": "fn()"
    },
    "ret561": {
      "unwatch": "fn()"
    },
    "ret562": {
      "unwatch": "fn()"
    },
    "ret563": {
      "unwatch": "fn()"
    },
    "ret564": {
      "unwatch": "fn()"
    },
    "ret565": {
      "unwatch": "fn()"
    },
    "ret566": {
      "unwatch": "fn()"
    },
    "ret567": {
      "unwatch": "fn()"
    },
    "ret568": {
      "unwatch": "fn()"
    },
    "ret569": {
      "unwatch": "fn()"
    },
    "ret570": {
      "unwatch": "fn()"
    },
    "ret571": {
      "unwatch": "fn()"
    },
    "ret572": {
      "unwatch": "fn()"
    },
    "ret573": {
      "unwatch": "fn()"
    },
    "ret574": {
      "unwatch": "fn()"
    },
    "ret575": {
      "unwatch": "fn()"
    },
    "ret576": {
      "unwatch": "fn()"
    },
    "ret577": {
      "unwatch": "fn()"
    },
    "ret578": {
      "unwatch": "fn()"
    },
    "ret579": {
      "unwatch": "fn()"
    },
    "ret580": {
      "unwatch": "fn()"
    },
    "ret581": {
      "unwatch": "fn()"
    },
    "ret582": {
      "unwatch": "fn()"
    },
    "ret583": {
      "unwatch": "fn()"
    },
    "ret584": {
      "unwatch": "fn()"
    },
    "ret585": {
      "unwatch": "fn()"
    },
    "ret586": {
      "unwatch": "fn()"
    },
    "ret587": {
      "unwatch": "fn()"
    },
    "ret588": {
      "unwatch": "fn()"
    },
    "ret589": {
      "unwatch": "fn()"
    },
    "ret590": {
      "unwatch": "fn()"
    },
    "ret591": {
      "unwatch": "fn()"
    },
    "ret592": {
      "unwatch": "fn()"
    },
    "ret593": {
      "unwatch": "fn()"
    },
    "ret594": {
      "unwatch": "fn()"
    },
    "ret595": {
      "unwatch": "fn()"
    },
    "ret596": {
      "unwatch": "fn()"
    },
    "ret597": {
      "unwatch": "fn()"
    },
    "ret598": {
      "unwatch": "fn()"
    },
    "ret599": {
      "unwatch": "fn()"
    },
    "ret600": {
      "unwatch": "fn()"
    },
    "ret601": {
      "unwatch": "fn()"
    },
    "ret602": {
      "unwatch": "fn()"
    },
    "ret603": {
      "unwatch": "fn()"
    },
    "ret604": {
      "unwatch": "fn()"
    },
    "ret605": {
      "unwatch": "fn()"
    },
    "ret606": {
      "unwatch": "fn()"
    },
    "ret607": {
      "unwatch": "fn()"
    },
    "ret608": {
      "unwatch": "fn()"
    },
    "ret609": {
      "unwatch": "fn()"
    },
    "ret610": {
      "unwatch": "fn()"
    },
    "ret611": {
      "unwatch": "fn()"
    },
    "ret612": {
      "unwatch": "fn()"
    },
    "ret613": {
      "unwatch": "fn()"
    },
    "ret614": {
      "unwatch": "fn()"
    },
    "ret615": {
      "unwatch": "fn()"
    },
    "ret616": {
      "unwatch": "fn()"
    },
    "ret617": {
      "unwatch": "fn()"
    },
    "ret618": {
      "unwatch": "fn()"
    },
    "ret619": {
      "unwatch": "fn()"
    },
    "ret620": {
      "unwatch": "fn()"
    },
    "ret621": {
      "unwatch": "fn()"
    },
    "ret622": {
      "unwatch": "fn()"
    },
    "ret623": {
      "unwatch": "fn()"
    },
    "ret624": {
      "unwatch": "fn()"
    },
    "ret625": {
      "unwatch": "fn()"
    },
    "ret626": {
      "unwatch": "fn()"
    },
    "ret627": {
      "unwatch": "fn()"
    },
    "ret628": {
      "unwatch": "fn()"
    },
    "ret629": {
      "unwatch": "fn()"
    },
    "ret630": {
      "unwatch": "fn()"
    },
    "ret631": {
      "unwatch": "fn()"
    },
    "ret632": {
      "unwatch": "fn()"
    },
    "ret633": {
      "unwatch": "fn()"
    },
    "ret634": {
      "unwatch": "fn()"
    },
    "ret635": {
      "unwatch": "fn()"
    },
    "ret636": {
      "unwatch": "fn()"
    },
    "ret637": {
      "unwatch": "fn()"
    },
    "ret638": {
      "unwatch": "fn()"
    },
    "ret639": {
      "unwatch": "fn()"
    },
    "ret640": {
      "unwatch": "fn()"
    },
    "ret641": {
      "unwatch": "fn()"
    },
    "ret642": {
      "unwatch": "fn()"
    },
    "ret643": {
      "unwatch": "fn()"
    },
    "ret644": {
      "unwatch": "fn()"
    },
    "ret645": {
      "unwatch": "fn()"
    },
    "ret646": {
      "unwatch": "fn()"
    },
    "ret647": {
      "unwatch": "fn()"
    },
    "ret648": {
      "unwatch": "fn()"
    },
    "ret649": {
      "unwatch": "fn()"
    },
    "ret650": {
      "unwatch": "fn()"
    },
    "ret651": {
      "unwatch": "fn()"
    },
    "ret652": {
      "unwatch": "fn()"
    },
    "ret653": {
      "unwatch": "fn()"
    },
    "ret654": {
      "unwatch": "fn()"
    },
    "ret655": {
      "unwatch": "fn()"
    },
    "ret656": {
      "unwatch": "fn()"
    },
    "ret657": {
      "unwatch": "fn()"
    },
    "ret658": {
      "unwatch": "fn()"
    },
    "ret659": {
      "unwatch": "fn()"
    },
    "ret660": {
      "unwatch": "fn()"
    },
    "ret661": {
      "unwatch": "fn()"
    },
    "ret662": {
      "unwatch": "fn()"
    },
    "ret663": {
      "unwatch": "fn()"
    },
    "ret664": {
      "unwatch": "fn()"
    },
    "ret665": {
      "unwatch": "fn()"
    },
    "ret666": {
      "unwatch": "fn()"
    },
    "ret667": {
      "unwatch": "fn()"
    },
    "ret668": {
      "unwatch": "fn()"
    },
    "ret669": {
      "unwatch": "fn()"
    },
    "ret670": {
      "unwatch": "fn()"
    },
    "ret671": {
      "unwatch": "fn()"
    },
    "ret672": {
      "unwatch": "fn()"
    },
    "ret673": {
      "unwatch": "fn()"
    },
    "ret674": {
      "unwatch": "fn()"
    },
    "ret675": {
      "unwatch": "fn()"
    },
    "ret676": {
      "unwatch": "fn()"
    },
    "ret677": {
      "unwatch": "fn()"
    },
    "ret678": {
      "unwatch": "fn()"
    },
    "ret679": {
      "unwatch": "fn()"
    },
    "ret680": {
      "unwatch": "fn()"
    },
    "ret681": {
      "unwatch": "fn()"
    },
    "ret682": {
      "unwatch": "fn()"
    },
    "ret683": {
      "unwatch": "fn()"
    },
    "ret684": {
      "unwatch": "fn()"
    },
    "ret685": {
      "unwatch": "fn()"
    },
    "ret686": {
      "unwatch": "fn()"
    },
    "ret687": {
      "unwatch": "fn()"
    },
    "ret688": {
      "unwatch": "fn()"
    },
    "ret689": {
      "unwatch": "fn()"
    },
    "ret690": {
      "unwatch": "fn()"
    },
    "ret691": {
      "unwatch": "fn()"
    },
    "ret692": {
      "unwatch": "fn()"
    },
    "ret693": {
      "unwatch": "fn()"
    },
    "ret694": {
      "unwatch": "fn()"
    },
    "ret695": {
      "unwatch": "fn()"
    },
    "ret696": {
      "unwatch": "fn()"
    },
    "ret697": {
      "unwatch": "fn()"
    },
    "ret698": {
      "unwatch": "fn()"
    },
    "ret699": {
      "unwatch": "fn()"
    },
    "ret700": {
      "unwatch": "fn()"
    },
    "ret701": {
      "unwatch": "fn()"
    },
    "ret702": {
      "unwatch": "fn()"
    },
    "ret703": {
      "unwatch": "fn()"
    },
    "ret704": {
      "unwatch": "fn()"
    },
    "ret705": {
      "unwatch": "fn()"
    },
    "ret706": {
      "unwatch": "fn()"
    },
    "ret707": {
      "unwatch": "fn()"
    },
    "ret708": {
      "unwatch": "fn()"
    },
    "ret709": {
      "unwatch": "fn()"
    },
    "ret710": {
      "unwatch": "fn()"
    },
    "ret711": {
      "unwatch": "fn()"
    },
    "ret712": {
      "unwatch": "fn()"
    },
    "ret713": {
      "unwatch": "fn()"
    },
    "ret714": {
      "unwatch": "fn()"
    },
    "ret715": {
      "unwatch": "fn()"
    },
    "ret716": {
      "unwatch": "fn()"
    },
    "ret717": {
      "unwatch": "fn()"
    },
    "ret718": {
      "unwatch": "fn()"
    },
    "ret719": {
      "unwatch": "fn()"
    },
    "ret720": {
      "unwatch": "fn()"
    },
    "ret721": {
      "unwatch": "fn()"
    },
    "ret722": {
      "unwatch": "fn()"
    },
    "ret723": {
      "unwatch": "fn()"
    },
    "ret724": {
      "unwatch": "fn()"
    },
    "ret725": {
      "unwatch": "fn()"
    },
    "ret726": {
      "unwatch": "fn()"
    },
    "ret727": {
      "unwatch": "fn()"
    },
    "ret728": {
      "unwatch": "fn()"
    },
    "ret729": {
      "unwatch": "fn()"
    },
    "ret730": {
      "unwatch": "fn()"
    },
    "ret731": {
      "unwatch": "fn()"
    },
    "ret732": {
      "unwatch": "fn()"
    },
    "ret733": {
      "unwatch": "fn()"
    },
    "ret734": {
      "unwatch": "fn()"
    },
    "ret735": {
      "unwatch": "fn()"
    },
    "ret736": {
      "unwatch": "fn()"
    },
    "ret737": {
      "unwatch": "fn()"
    },
    "ret738": {
      "unwatch": "fn()"
    },
    "ret739": {
      "unwatch": "fn()"
    },
    "ret740": {
      "unwatch": "fn()"
    },
    "ret741": {
      "unwatch": "fn()"
    },
    "ret742": {
      "unwatch": "fn()"
    },
    "ret743": {
      "unwatch": "fn()"
    },
    "ret744": {
      "unwatch": "fn()"
    },
    "ret745": {
      "unwatch": "fn()"
    },
    "ret746": {
      "unwatch": "fn()"
    },
    "ret747": {
      "unwatch": "fn()"
    },
    "ret748": {
      "unwatch": "fn()"
    },
    "ret749": {
      "unwatch": "fn()"
    },
    "ret750": {
      "unwatch": "fn()"
    },
    "ret751": {
      "unwatch": "fn()"
    },
    "ret752": {
      "unwatch": "fn()"
    },
    "ret753": {
      "unwatch": "fn()"
    },
    "ret754": {
      "unwatch": "fn()"
    },
    "ret755": {
      "unwatch": "fn()"
    },
    "ret756": {
      "unwatch": "fn()"
    },
    "ret757": {
      "unwatch": "fn()"
    },
    "ret758": {
      "unwatch": "fn()"
    },
    "ret759": {
      "unwatch": "fn()"
    },
    "ret760": {
      "unwatch": "fn()"
    },
    "ret761": {
      "unwatch": "fn()"
    },
    "ret762": {
      "unwatch": "fn()"
    },
    "ret763": {
      "unwatch": "fn()"
    },
    "ret764": {
      "unwatch": "fn()"
    },
    "ret765": {
      "unwatch": "fn()"
    },
    "ret766": {
      "unwatch": "fn()"
    },
    "ret767": {
      "unwatch": "fn()"
    },
    "ret768": {
      "unwatch": "fn()"
    },
    "ret769": {
      "unwatch": "fn()"
    },
    "ret770": {
      "unwatch": "fn()"
    },
    "ret771": {
      "unwatch": "fn()"
    },
    "ret772": {
      "unwatch": "fn()"
    },
    "ret773": {
      "unwatch": "fn()"
    },
    "ret774": {
      "unwatch": "fn()"
    },
    "ret775": {
      "unwatch": "fn()"
    },
    "ret776": {
      "unwatch": "fn()"
    },
    "ret777": {
      "unwatch": "fn()"
    },
    "ret778": {
      "unwatch": "fn()"
    },
    "ret779": {
      "unwatch": "fn()"
    },
    "ret780": {
      "unwatch": "fn()"
    },
    "ret781": {
      "unwatch": "fn()"
    },
    "ret782": {
      "unwatch": "fn()"
    },
    "ret783": {
      "unwatch": "fn()"
    },
    "ret784": {
      "unwatch": "fn()"
    },
    "ret785": {
      "unwatch": "fn()"
    },
    "ret786": {
      "unwatch": "fn()"
    },
    "ret787": {
      "unwatch": "fn()"
    },
    "ret788": {
      "unwatch": "fn()"
    },
    "ret789": {
      "unwatch": "fn()"
    },
    "ret790": {
      "unwatch": "fn()"
    },
    "ret791": {
      "unwatch": "fn()"
    },
    "ret792": {
      "unwatch": "fn()"
    },
    "ret793": {
      "unwatch": "fn()"
    },
    "ret794": {
      "unwatch": "fn()"
    },
    "ret795": {
      "unwatch": "fn()"
    },
    "ret796": {
      "unwatch": "fn()"
    },
    "ret797": {
      "unwatch": "fn()"
    },
    "ret798": {
      "unwatch": "fn()"
    },
    "ret799": {
      "unwatch": "fn()"
    },
    "ret800": {
      "unwatch": "fn()"
    },
    "ret801": {
      "unwatch": "fn()"
    },
    "ret802": {
      "unwatch": "fn()"
    },
    "ret803": {
      "unwatch": "fn()"
    },
    "ret804": {
      "unwatch": "fn()"
    },
    "ret805": {
      "unwatch": "fn()"
    },
    "ret806": {
      "unwatch": "fn()"
    },
    "ret807": {
      "unwatch": "fn()"
    },
    "ret808": {
      "unwatch": "fn()"
    },
    "ret809": {
      "unwatch": "fn()"
    },
    "ret810": {
      "unwatch": "fn()"
    },
    "ret811": {
      "unwatch": "fn()"
    },
    "ret812": {
      "unwatch": "fn()"
    },
    "ret813": {
      "unwatch": "fn()"
    },
    "ret814": {
      "unwatch": "fn()"
    },
    "ret815": {
      "unwatch": "fn()"
    },
    "ret816": {
      "unwatch": "fn()"
    },
    "ret817": {
      "unwatch": "fn()"
    },
    "ret818": {
      "unwatch": "fn()"
    },
    "ret819": {
      "unwatch": "fn()"
    },
    "ret820": {
      "unwatch": "fn()"
    },
    "ret821": {
      "unwatch": "fn()"
    },
    "ret822": {
      "unwatch": "fn()"
    },
    "ret823": {
      "unwatch": "fn()"
    },
    "ret824": {
      "unwatch": "fn()"
    },
    "ret825": {
      "unwatch": "fn()"
    },
    "ret826": {
      "unwatch": "fn()"
    },
    "ret827": {
      "unwatch": "fn()"
    },
    "ret828": {
      "unwatch": "fn()"
    },
    "ret829": {
      "unwatch": "fn()"
    },
    "ret830": {
      "unwatch": "fn()"
    },
    "ret831": {
      "unwatch": "fn()"
    },
    "ret832": {
      "unwatch": "fn()"
    },
    "ret833": {
      "unwatch": "fn()"
    },
    "ret834": {
      "unwatch": "fn()"
    },
    "ret835": {
      "unwatch": "fn()"
    },
    "ret836": {
      "unwatch": "fn()"
    },
    "ret837": {
      "unwatch": "fn()"
    },
    "ret838": {
      "unwatch": "fn()"
    },
    "ret839": {
      "unwatch": "fn()"
    },
    "ret840": {
      "unwatch": "fn()"
    },
    "ret841": {
      "unwatch": "fn()"
    },
    "ret842": {
      "unwatch": "fn()"
    },
    "ret843": {
      "unwatch": "fn()"
    },
    "ret844": {
      "unwatch": "fn()"
    },
    "ret845": {
      "unwatch": "fn()"
    },
    "ret846": {
      "unwatch": "fn()"
    },
    "ret847": {
      "unwatch": "fn()"
    },
    "ret848": {
      "unwatch": "fn()"
    },
    "ret849": {
      "unwatch": "fn()"
    },
    "ret850": {
      "unwatch": "fn()"
    },
    "ret851": {
      "unwatch": "fn()"
    },
    "ret852": {
      "unwatch": "fn()"
    },
    "ret853": {
      "unwatch": "fn()"
    },
    "ret854": {
      "unwatch": "fn()"
    },
    "ret855": {
      "unwatch": "fn()"
    },
    "ret856": {
      "unwatch": "fn()"
    },
    "ret857": {
      "unwatch": "fn()"
    },
    "ret858": {
      "unwatch": "fn()"
    },
    "ret859": {
      "unwatch": "fn()"
    },
    "ret860": {
      "unwatch": "fn()"
    },
    "ret861": {
      "unwatch": "fn()"
    },
    "ret862": {
      "unwatch": "fn()"
    },
    "ret863": {
      "unwatch": "fn()"
    },
    "ret864": {
      "unwatch": "fn()"
    },
    "ret865": {
      "unwatch": "fn()"
    },
    "ret866": {
      "unwatch": "fn()"
    },
    "ret867": {
      "unwatch": "fn()"
    },
    "ret868": {
      "unwatch": "fn()"
    },
    "ret869": {
      "unwatch": "fn()"
    },
    "ret870": {
      "unwatch": "fn()"
    },
    "ret871": {
      "unwatch": "fn()"
    },
    "ret872": {
      "unwatch": "fn()"
    },
    "ret873": {
      "unwatch": "fn()"
    },
    "ret874": {
      "unwatch": "fn()"
    },
    "ret875": {
      "unwatch": "fn()"
    },
    "ret876": {
      "unwatch": "fn()"
    },
    "ret877": {
      "unwatch": "fn()"
    },
    "ret878": {
      "unwatch": "fn()"
    },
    "ret879": {
      "unwatch": "fn()"
    },
    "ret880": {
      "unwatch": "fn()"
    },
    "ret881": {
      "unwatch": "fn()"
    },
    "ret882": {
      "unwatch": "fn()"
    },
    "ret883": {
      "unwatch": "fn()"
    },
    "ret884": {
      "unwatch": "fn()"
    },
    "ret885": {
      "unwatch": "fn()"
    },
    "ret886": {
      "unwatch": "fn()"
    },
    "ret887": {
      "unwatch": "fn()"
    },
    "ret888": {
      "unwatch": "fn()"
    },
    "ret889": {
      "unwatch": "fn()"
    },
    "ret890": {
      "unwatch": "fn()"
    },
    "ret891": {
      "unwatch": "fn()"
    },
    "ret892": {
      "unwatch": "fn()"
    },
    "ret893": {
      "unwatch": "fn()"
    },
    "ret894": {
      "unwatch": "fn()"
    },
    "ret895": {
      "unwatch": "fn()"
    },
    "ret896": {
      "unwatch": "fn()"
    },
    "ret897": {
      "unwatch": "fn()"
    },
    "ret898": {
      "unwatch": "fn()"
    },
    "ret899": {
      "unwatch": "fn()"
    },
    "ret900": {
      "unwatch": "fn()"
    },
    "ret901": {
      "unwatch": "fn()"
    },
    "ret902": {
      "unwatch": "fn()"
    },
    "ret903": {
      "unwatch": "fn()"
    },
    "ret904": {
      "unwatch": "fn()"
    },
    "ret905": {
      "unwatch": "fn()"
    },
    "ret906": {
      "unwatch": "fn()"
    },
    "ret907": {
      "unwatch": "fn()"
    },
    "ret908": {
      "unwatch": "fn()"
    },
    "ret909": {
      "unwatch": "fn()"
    },
    "ret910": {
      "unwatch": "fn()"
    },
    "ret911": {
      "unwatch": "fn()"
    },
    "ret912": {
      "unwatch": "fn()"
    },
    "ret913": {
      "unwatch": "fn()"
    },
    "ret914": {
      "unwatch": "fn()"
    },
    "ret915": {
      "unwatch": "fn()"
    },
    "ret916": {
      "unwatch": "fn()"
    },
    "ret917": {
      "unwatch": "fn()"
    },
    "ret918": {
      "unwatch": "fn()"
    },
    "ret919": {
      "unwatch": "fn()"
    },
    "ret920": {
      "unwatch": "fn()"
    },
    "ret921": {
      "unwatch": "fn()"
    },
    "ret922": {
      "unwatch": "fn()"
    },
    "ret923": {
      "unwatch": "fn()"
    },
    "ret924": {
      "unwatch": "fn()"
    },
    "ret925": {
      "unwatch": "fn()"
    },
    "ret926": {
      "unwatch": "fn()"
    },
    "ret927": {
      "unwatch": "fn()"
    },
    "ret928": {
      "unwatch": "fn()"
    },
    "ret929": {
      "unwatch": "fn()"
    },
    "ret930": {
      "unwatch": "fn()"
    },
    "ret931": {
      "unwatch": "fn()"
    },
    "ret932": {
      "unwatch": "fn()"
    },
    "ret933": {
      "unwatch": "fn()"
    },
    "ret934": {
      "unwatch": "fn()"
    },
    "ret935": {
      "unwatch": "fn()"
    },
    "ret936": {
      "unwatch": "fn()"
    },
    "ret937": {
      "unwatch": "fn()"
    },
    "ret938": {
      "unwatch": "fn()"
    },
    "ret939": {
      "unwatch": "fn()"
    },
    "ret940": {
      "unwatch": "fn()"
    },
    "ret941": {
      "unwatch": "fn()"
    },
    "ret942": {
      "unwatch": "fn()"
    },
    "ret943": {
      "unwatch": "fn()"
    },
    "ret944": {
      "unwatch": "fn()"
    },
    "ret945": {
      "unwatch": "fn()"
    },
    "ret946": {
      "unwatch": "fn()"
    },
    "ret947": {
      "unwatch": "fn()"
    },
    "ret948": {
      "unwatch": "fn()"
    },
    "ret949": {
      "unwatch": "fn()"
    },
    "ret950": {
      "unwatch": "fn()"
    },
    "ret951": {
      "unwatch": "fn()"
    },
    "ret952": {
      "unwatch": "fn()"
    },
    "ret953": {
      "unwatch": "fn()"
    },
    "ret954": {
      "unwatch": "fn()"
    },
    "ret955": {
      "unwatch": "fn()"
    },
    "ret956": {
      "unwatch": "fn()"
    },
    "ret957": {
      "unwatch": "fn()"
    },
    "ret958": {
      "unwatch": "fn()"
    },
    "ret959": {
      "unwatch": "fn()"
    },
    "ret960": {
      "unwatch": "fn()"
    },
    "ret961": {
      "unwatch": "fn()"
    },
    "ret962": {
      "unwatch": "fn()"
    },
    "ret963": {
      "unwatch": "fn()"
    },
    "ret964": {
      "unwatch": "fn()"
    },
    "ret965": {
      "unwatch": "fn()"
    },
    "ret966": {
      "unwatch": "fn()"
    },
    "ret967": {
      "unwatch": "fn()"
    },
    "ret968": {
      "unwatch": "fn()"
    },
    "ret969": {
      "unwatch": "fn()"
    },
    "ret970": {
      "unwatch": "fn()"
    },
    "ret971": {
      "unwatch": "fn()"
    },
    "ret972": {
      "unwatch": "fn()"
    },
    "ret973": {
      "unwatch": "fn()"
    },
    "ret974": {
      "unwatch": "fn()"
    },
    "ret975": {
      "unwatch": "fn()"
    },
    "ret976": {
      "unwatch": "fn()"
    },
    "ret977": {
      "unwatch": "fn()"
    },
    "ret978": {
      "unwatch": "fn()"
    },
    "ret979": {
      "unwatch": "fn()"
    },
    "ret980": {
      "unwatch": "fn()"
    },
    "ret981": {
      "unwatch": "fn()"
    },
    "ret982": {
      "unwatch": "fn()"
    },
    "ret983": {
      "unwatch": "fn()"
    },
    "ret984": {
      "unwatch": "fn()"
    },
    "ret985": {
      "unwatch": "fn()"
    },
    "ret986": {
      "unwatch": "fn()"
    },
    "ret987": {
      "unwatch": "fn()"
    },
    "ret988": {
      "unwatch": "fn()"
    },
    "ret989": {
      "unwatch": "fn()"
    },
    "ret990": {
      "unwatch": "fn()"
    },
    "ret991": {
      "unwatch": "fn()"
    },
    "ret992": {
      "unwatch": "fn()"
    },
    "ret993": {
      "unwatch": "fn()"
    },
    "ret994": {
      "unwatch": "fn()"
    },
    "ret995": {
      "unwatch": "fn()"
    },
    "ret996": {
      "unwatch": "fn()"
    },
    "ret997": {
      "unwatch": "fn()"
    },
    "ret998": {
      "unwatch": "fn()"
    },
    "ret999": {
      "unwatch": "fn()"
    },
    "ret1000": {
      "unwatch": "fn()"
    },
    "ret1001": {
      "unwatch": "fn()"
    },
    "ret1002": {
      "unwatch": "fn()"
    },
    "ret1003": {
      "unwatch": "fn()"
    },
    "ret1004": {
      "unwatch": "fn()"
    },
    "ret1005": {
      "unwatch": "fn()"
    },
    "ret1006": {
      "unwatch": "fn()"
    },
    "ret1007": {
      "unwatch": "fn()"
    },
    "ret1008": {
      "unwatch": "fn()"
    },
    "ret1009": {
      "unwatch": "fn()"
    },
    "ret1010": {
      "unwatch": "fn()"
    },
    "ret1011": {
      "unwatch": "fn()"
    },
    "ret1012": {
      "unwatch": "fn()"
    },
    "ret1013": {
      "unwatch": "fn()"
    },
    "ret1014": {
      "unwatch": "fn()"
    },
    "ret1015": {
      "unwatch": "fn()"
    },
    "ret1016": {
      "unwatch": "fn()"
    },
    "ret1017": {
      "unwatch": "fn()"
    },
    "ret1018": {
      "unwatch": "fn()"
    },
    "ret1019": {
      "unwatch": "fn()"
    },
    "ret1020": {
      "unwatch": "fn()"
    },
    "ret1021": {
      "unwatch": "fn()"
    },
    "ret1022": {
      "unwatch": "fn()"
    },
    "ret1023": {
      "unwatch": "fn()"
    },
    "ret1024": {
      "unwatch": "fn()"
    },
    "ret1025": {
      "unwatch": "fn()"
    },
    "ret1026": {
      "unwatch": "fn()"
    },
    "ret1027": {
      "unwatch": "fn()"
    },
    "ret1028": {
      "unwatch": "fn()"
    },
    "ret1029": {
      "unwatch": "fn()"
    },
    "ret1030": {
      "unwatch": "fn()"
    },
    "ret1031": {
      "unwatch": "fn()"
    },
    "ret1032": {
      "unwatch": "fn()"
    },
    "ret1033": {
      "unwatch": "fn()"
    },
    "ret1034": {
      "unwatch": "fn()"
    },
    "ret1035": {
      "unwatch": "fn()"
    },
    "ret1036": {
      "unwatch": "fn()"
    },
    "ret1037": {
      "unwatch": "fn()"
    },
    "ret1038": {
      "unwatch": "fn()"
    },
    "ret1039": {
      "unwatch": "fn()"
    },
    "ret1040": {
      "unwatch": "fn()"
    },
    "ret1041": {
      "unwatch": "fn()"
    },
    "ret1042": {
      "unwatch": "fn()"
    },
    "ret1043": {
      "unwatch": "fn()"
    },
    "ret1044": {
      "unwatch": "fn()"
    },
    "ret1045": {
      "unwatch": "fn()"
    },
    "ret1046": {
      "unwatch": "fn()"
    },
    "ret1047": {
      "unwatch": "fn()"
    },
    "ret1048": {
      "unwatch": "fn()"
    },
    "ret1049": {
      "unwatch": "fn()"
    },
    "ret1050": {
      "unwatch": "fn()"
    },
    "ret1051": {
      "unwatch": "fn()"
    },
    "ret1052": {
      "unwatch": "fn()"
    },
    "ret1053": {
      "unwatch": "fn()"
    },
    "ret1054": {
      "unwatch": "fn()"
    },
    "ret1055": {
      "unwatch": "fn()"
    },
    "ret1056": {
      "unwatch": "fn()"
    },
    "ret1057": {
      "unwatch": "fn()"
    },
    "ret1058": {
      "unwatch": "fn()"
    },
    "ret1059": {
      "unwatch": "fn()"
    },
    "ret1060": {
      "unwatch": "fn()"
    },
    "ret1061": {
      "unwatch": "fn()"
    },
    "ret1062": {
      "unwatch": "fn()"
    },
    "ret1063": {
      "unwatch": "fn()"
    },
    "ret1064": {
      "unwatch": "fn()"
    },
    "ret1065": {
      "unwatch": "fn()"
    },
    "ret1066": {
      "unwatch": "fn()"
    },
    "ret1067": {
      "unwatch": "fn()"
    },
    "ret1068": {
      "unwatch": "fn()"
    },
    "ret1069": {
      "unwatch": "fn()"
    },
    "ret1070": {
      "unwatch": "fn()"
    },
    "ret1071": {
      "unwatch": "fn()"
    }
  }
}
