{
  "ref": {
    "Type": {
      "size": "number",
      "indirection": "number",
      "get": "fn(buffer: Buffer, offset: number) -> ?",
      "set": "fn(buffer: Buffer, offset: number, value: ?)",
      "name": "string",
      "alignment": "number"
    },
    "NULL": "Buffer",
    "NULL_POINTER": "Buffer",
    "address": "fn(buffer: Buffer) -> number",
    "alloc": "fn(type: Type, value?: ?) -> Buffer",
    "allocCString": "fn(string: string, encoding?: string) -> Buffer",
    "coerceType": "fn(type: Type) -> Type",
    "deref": "fn(buffer: Buffer) -> ?",
    "derefType": "fn(type: Type) -> Type",
    "endianness": "string",
    "get": "fn(buffer: Buffer, offset?: number, type?: Type) -> ?",
    "getType": "fn(buffer: Buffer) -> Type",
    "isNull": "fn(buffer: Buffer) -> bool",
    "readCString": "fn(buffer: Buffer, offset?: number) -> string",
    "readInt64BE": "fn(buffer: Buffer, offset?: number) -> ?",
    "readInt64LE": "fn(buffer: Buffer, offset?: number) -> ?",
    "readObject": "fn(buffer: Buffer, offset?: number) -> Object",
    "readPointer": "fn(buffer: Buffer, offset?: number, length?: number) -> Buffer",
    "readUInt64BE": "fn(buffer: Buffer, offset?: number) -> ?",
    "readUInt64LE": "fn(buffer: Buffer, offset?: number) -> ?",
    "ref": "fn(buffer: Buffer) -> Buffer",
    "refType": "fn(type: Type) -> Type",
    "reinterpret": "fn(buffer: Buffer, size: number, offset?: number) -> Buffer",
    "reinterpretUntilZeros": "fn(buffer: Buffer, size: number, offset?: number) -> Buffer",
    "set": "fn(buffer: Buffer, offset: number, value: ?, type?: Type)",
    "writeCString": "fn(buffer: Buffer, offset: number, string: string, encoding?: string)",
    "writeInt64BE": "fn(buffer: Buffer, offset: number, input: number)",
    "writeInt64LE": "fn(buffer: Buffer, offset: number, input: number)",
    "writeObject": "fn(buffer: Buffer, offset: number, object: Object)",
    "writePointer": "fn(buffer: Buffer, offset: number, pointer: Buffer)",
    "writeUInt64BE": "fn(buffer: Buffer, offset: number, input: number)",
    "_attach": "fn(buffer: Buffer, object: Object)",
    "_reinterpret": "fn(buffer: Buffer, size: number, offset?: number) -> Buffer",
    "_reinterpretUntilZeros": "fn(buffer: Buffer, size: number, offset?: number) -> Buffer",
    "_writePointer": "fn(buffer: Buffer, offset: number, pointer: Buffer)",
    "_writeObject": "fn(buffer: Buffer, offset: number, object: Object)",
    "types": {
      "void": "Type",
      "int64": "Type",
      "ushort": "Type",
      "int": "Type",
      "uint64": "Type",
      "float": "Type",
      "uint": "Type",
      "long": "Type",
      "double": "Type",
      "int8": "Type",
      "ulong": "Type",
      "Object": "Type",
      "uint8": "Type",
      "longlong": "Type",
      "CString": "Type",
      "int16": "Type",
      "ulonglong": "Type",
      "bool": "Type",
      "uint16": "Type",
      "char": "Type",
      "byte": "Type",
      "int32": "Type",
      "uchar": "Type",
      "size_t": "Type",
      "uint32": "Type",
      "short": "Type"
    }
  },
  "!name": "ref"
}
