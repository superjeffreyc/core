{
  "dojox": {
    "drawing": {
      "_base": {
        "!type": "fn(props: Object, node: HTMLElement)",
        "prototype": {
          "height": "number",
          "mode": "string",
          "ready": "bool",
          "width": "number",
          "addPlugin": "fn(plugin: Object)",
          "addStencil": "fn(type: String, options: Object) -> ?",
          "addUI": "fn(type: String, options: Object) -> ?",
          "changeDefaults": "fn(newStyle: Object, value: bool)",
          "exporter": "fn() -> ?",
          "get": "fn(name: ?)",
          "getConstructor": "fn(abbr: String) -> ?",
          "getShapeProps": "fn(data: Object, mode: ?) -> ?",
          "importer": "fn(objects: [?])",
          "initPlugins": "fn()",
          "registerTool": "fn(type: String)",
          "removeAll": "fn()",
          "removeStencil": "fn(stencil: Object)",
          "resize": "fn(box: Object)",
          "selectAll": "fn()",
          "set": "fn(name: ?, value: ?)",
          "setTool": "fn(type: String)",
          "startup": "fn()",
          "toSelected": "fn(func: String)",
          "unSetTool": "fn()",
          "onDeleteStencil": "fn(stencil: Object)",
          "onRenderStencil": "fn(stencil: Object)",
          "onSurfaceReady": "fn()"
        }
      },
      "Drawing": {
        "!type": "fn(props: Object, node: HTMLElement)",
        "prototype": {
          "height": "number",
          "mode": "string",
          "ready": "bool",
          "width": "number",
          "addPlugin": "fn(plugin: Object)",
          "addStencil": "fn(type: String, options: Object) -> ?",
          "addUI": "fn(type: String, options: Object) -> ?",
          "changeDefaults": "fn(newStyle: Object, value: bool)",
          "exporter": "fn() -> ?",
          "get": "fn(name: ?)",
          "getConstructor": "fn(abbr: String) -> ?",
          "getShapeProps": "fn(data: Object, mode: ?) -> ?",
          "importer": "fn(objects: [?])",
          "initPlugins": "fn()",
          "registerTool": "fn(type: String)",
          "removeAll": "fn()",
          "removeStencil": "fn(stencil: Object)",
          "resize": "fn(box: Object)",
          "selectAll": "fn()",
          "set": "fn(name: ?, value: ?)",
          "setTool": "fn(type: String)",
          "startup": "fn()",
          "toSelected": "fn(func: String)",
          "unSetTool": "fn()",
          "onDeleteStencil": "fn(stencil: Object)",
          "onRenderStencil": "fn(stencil: Object)",
          "onSurfaceReady": "fn()"
        }
      },
      "defaults": {
        "anchors": {
          "cap": "string",
          "color": "string",
          "fill": "string",
          "marginZero": "number",
          "minSize": "number",
          "size": "number",
          "style": "string",
          "width": "number"
        },
        "angleSnap": "number",
        "arrows": {
          "length": "number",
          "width": "number"
        },
        "button": {
          "down": "Object",
          "icon": "Object",
          "norm": "Object",
          "over": "Object",
          "selected": "Object"
        },
        "clickable": "bool",
        "clickMode": "bool",
        "current": "Object",
        "currentHit": "Object",
        "disabled": {
          "cap": "string",
          "color": "string",
          "fill": "string",
          "style": "string",
          "width": "number"
        },
        "highlighted": {
          "cap": "string",
          "color": "string",
          "fill": "string",
          "style": "string",
          "width": "number"
        },
        "hitHighlighted": {
          "cap": "string",
          "color": "string",
          "fill": "Object",
          "style": "string",
          "width": "number"
        },
        "hitNorm": {
          "cap": "string",
          "color": "Object",
          "fill": "Object",
          "style": "string",
          "width": "number"
        },
        "hitSelected": {
          "cap": "string",
          "color": "string",
          "fill": "Object",
          "style": "string",
          "width": "number"
        },
        "labelSameColor": "bool",
        "norm": {
          "cap": "string",
          "color": "string",
          "fill": "string",
          "style": "string",
          "width": "number"
        },
        "renderHitLayer": "bool",
        "renderHitLines": "bool",
        "selected": {
          "color": "string",
          "width": "number"
        },
        "text": {
          "color": "string",
          "deleteEmptyCreate": "bool",
          "deleteEmptyModify": "bool",
          "family": "string",
          "minWidth": "number",
          "pad": "number",
          "size": "string",
          "weight": "string"
        },
        "textDisabled": {
          "color": "string",
          "family": "string",
          "size": "string",
          "weight": "string"
        },
        "textMode": {
          "create": "Object",
          "edit": "Object"
        },
        "useSelectedStyle": "bool",
        "zAngle": "number",
        "zAxis": "bool",
        "zAxisEnabled": "bool",
        "copy": "fn() -> ?"
      },
      "annotations": {
        "Angle": {
          "!type": "fn(options: Object)",
          "prototype": {
            "angle": "number",
            "type": "string",
            "getAngleNode": "fn() -> ?",
            "hideAngle": "fn()",
            "showAngle": "fn()"
          }
        },
        "BoxShadow": {
          "!type": "fn(options: Object)",
          "prototype": {
            "showing": "bool",
            "arrowPoints": "fn() -> [?]",
            "createForEllipse": "fn(o: ?, size: ?, mult: ?, d: ?, r: ?, p: ?, c: ?)",
            "createForLine": "fn(o: ?, size: ?, mult: ?, d: ?, r: ?, p: ?, c: ?)",
            "createForPath": "fn(o: ?, size: ?, mult: ?, pts: ?, r: ?, p: ?, c: ?)",
            "createForRect": "fn(o: ?, size: ?, mult: ?, d: ?, r: ?, p: ?, c: ?)",
            "createForZArrow": "fn(o: ?, size: ?, mult: ?, pts: ?, r: ?, p: ?, c: ?)",
            "destroy": "fn()",
            "hide": "fn()",
            "render": "fn()",
            "show": "fn()",
            "onRender": "fn()",
            "onTransform": "fn()"
          }
        },
        "Arrow": {
          "!type": "fn(options: Object)",
          "prototype": {
            "baseRender": "bool",
            "closeColor": "Object",
            "closePath": "bool",
            "closeRadius": "number",
            "drawingType": "string",
            "enabled": "bool",
            "idx1": "number",
            "idx2": "number",
            "minimumSize": "number",
            "StencilData": "Object",
            "StencilPoints": "[?]",
            "subShape": "bool",
            "type": "string",
            "addShadow": "fn(args: Object)",
            "animate": "fn(options: ?, create: ?)",
            "applyTransform": "fn(mx: ?)",
            "arrowHead": "fn(x1: ?, y1: ?, x2: ?, y2: ?, style: ?) -> [?]",
            "attr": "fn(key: String, value: String)",
            "checkClosePoint": "fn(firstPt: Object, currPt: Object, remove: bool) -> bool",
            "connect": "fn(o: ?, e: ?, s: ?, m: ?, once: bool) -> ?",
            "connectMouse": "fn()",
            "connectMult": "fn()",
            "dataToPoints": "fn(data: Object)",
            "deselect": "fn(useDelay: bool)",
            "destroy": "fn()",
            "disable": "fn()",
            "disconnect": "fn(handles: Object)",
            "disconnectMouse": "fn()",
            "enable": "fn()",
            "exporter": "fn() -> ?",
            "getAngle": "fn() -> ?",
            "getBounds": "fn(absolute: bool) -> Object",
            "getLabel": "fn() -> ?",
            "getRadius": "fn() -> ?",
            "getTransform": "fn() -> Object",
            "highlight": "fn()",
            "moveToBack": "fn()",
            "moveToFront": "fn()",
            "pointsToData": "fn(points: [?])",
            "preventNegativePos": "fn()",
            "remove": "fn()",
            "removeShadow": "fn()",
            "render": "fn()",
            "select": "fn()",
            "setData": "fn(data: Object)",
            "setLabel": "fn(text: String)",
            "setPoints": "fn(points: [Object])",
            "setTransform": "fn(mx: Object)",
            "transformPoints": "fn(mx: ?)",
            "unhighlight": "fn()",
            "onBeforeRender": "fn(stencil: Object)",
            "onChangeData": "fn(stencil: Object)",
            "onChangeStyle": "fn(stencil: Object)",
            "onChangeText": "fn(value: ?)",
            "onDelete": "fn(stencil: dojox.drawing.stencil._Base)",
            "onDown": "fn(obj: Event)",
            "onDrag": "fn(obj: Event)",
            "onModify": "fn(stencil: Object)",
            "onMove": "fn(obj: Event)",
            "onRender": "fn(stencil: Object)",
            "onTransform": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformBegin": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformEnd": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onUp": "fn(obj: Event)"
          }
        },
        "Label": {
          "Label": {
            "!type": "fn(options: Object)",
            "prototype": {
              "align": "string",
              "anchorType": "string",
              "baseRender": "bool",
              "drawingType": "string",
              "enabled": "bool",
              "minimumSize": "number",
              "StencilData": "Object",
              "StencilPoints": "[?]",
              "type": "string",
              "valign": "string",
              "addShadow": "fn(args: Object)",
              "animate": "fn(options: ?, create: ?)",
              "applyTransform": "fn(mx: ?)",
              "attr": "fn(key: String, value: String)",
              "beforeAttr": "fn(key: ?, value: String)",
              "connect": "fn(o: ?, e: ?, s: ?, m: ?, once: bool) -> ?",
              "connectMouse": "fn()",
              "connectMult": "fn()",
              "dataToPoints": "fn(o: Object) -> [?]",
              "deselect": "fn(useDelay: bool)",
              "destroy": "fn()",
              "disable": "fn()",
              "disconnect": "fn(handles: Object)",
              "disconnectMouse": "fn()",
              "enable": "fn()",
              "exporter": "fn() -> ?",
              "getAngle": "fn() -> ?",
              "getBounds": "fn(absolute: bool) -> Object",
              "getLabel": "fn() -> ?",
              "getRadius": "fn() -> ?",
              "getText": "fn() -> ?",
              "getTransform": "fn() -> Object",
              "highlight": "fn()",
              "makeFit": "fn(text: ?, w: ?) -> Object",
              "moveToBack": "fn()",
              "moveToFront": "fn()",
              "pointsToData": "fn(p: [?]) -> Object",
              "preventNegativePos": "fn()",
              "remove": "fn()",
              "removeShadow": "fn()",
              "render": "fn(text: String)",
              "select": "fn()",
              "setData": "fn(data: Object)",
              "setLabel": "fn(text: String)",
              "setLabelCustom": "fn(text: String)",
              "setPoints": "fn(points: [Object])",
              "setText": "fn(text: ?)",
              "setTransform": "fn(mx: Object)",
              "transformPoints": "fn(mx: ?)",
              "typesetter": "fn(text: ?) -> ?",
              "unhighlight": "fn()",
              "onBeforeRender": "fn(stencil: Object)",
              "onChangeData": "fn(stencil: Object)",
              "onChangeStyle": "fn(stencil: Object)",
              "onChangeText": "fn(value: ?)",
              "onDelete": "fn(stencil: dojox.drawing.stencil._Base)",
              "onDown": "fn(obj: Event)",
              "onDrag": "fn(obj: Event)",
              "onModify": "fn(stencil: Object)",
              "onMove": "fn(obj: Event)",
              "onRender": "fn(stencil: Object)",
              "onTransform": "fn(anchor: dojox.drawing.manager.Anchors)",
              "onTransformBegin": "fn(anchor: dojox.drawing.manager.Anchors)",
              "onTransformEnd": "fn(anchor: dojox.drawing.manager.Anchors)",
              "onUp": "fn(obj: Event)"
            }
          }
        }
      },
      "library": {
        "icons": {
          "arrow": {
            "borderWidth": "number",
            "closePath": "bool",
            "points": "[?]",
            "type": "string"
          },
          "axes": {
            "borderWidth": "number",
            "closePath": "bool",
            "points": "[?]",
            "type": "string"
          },
          "ellipse": {
            "borderWidth": "number",
            "cx": "number",
            "cy": "number",
            "rx": "number",
            "ry": "number",
            "type": "string"
          },
          "equation": {
            "borderWidth": "number",
            "closePath": "bool",
            "points": "[?]",
            "type": "string"
          },
          "iconize": {
            "borderWidth": "number",
            "closePath": "bool",
            "points": "[?]",
            "type": "string"
          },
          "line": {
            "borderWidth": "number",
            "type": "string",
            "x1": "number",
            "x2": "number",
            "y1": "number",
            "y2": "number"
          },
          "pan": {
            "borderWidth": "number",
            "closePath": "bool",
            "points": "[?]",
            "type": "string"
          },
          "path": {
            "borderWidth": "number",
            "closePath": "bool",
            "points": "[?]",
            "type": "string"
          },
          "pencil": {
            "borderWidth": "number",
            "closePath": "bool",
            "points": "[?]",
            "type": "string"
          },
          "plus": {
            "borderWidth": "number",
            "closePath": "bool",
            "points": "[?]",
            "type": "string"
          },
          "rect": {
            "borderWidth": "number",
            "height": "number",
            "type": "string",
            "width": "number",
            "x": "number",
            "y": "number"
          },
          "textBlock": {
            "borderWidth": "number",
            "closePath": "bool",
            "points": "[?]",
            "type": "string"
          },
          "triangle": {
            "borderWidth": "number",
            "closePath": "bool",
            "points": "[?]",
            "type": "string"
          },
          "vector": {
            "borderWidth": "number",
            "closePath": "bool",
            "points": "[?]",
            "type": "string"
          },
          "zoom100": {
            "text": "string",
            "type": "string"
          },
          "zoomIn": {
            "borderWidth": "number",
            "closePath": "bool",
            "points": "[?]",
            "type": "string"
          },
          "zoomOut": {
            "borderWidth": "number",
            "closePath": "bool",
            "points": "[?]",
            "type": "string"
          }
        },
        "greek": {
          "alpha": "number",
          "Alpha": "number",
          "Beta": "number",
          "beta": "number",
          "Chi": "number",
          "chi": "number",
          "delta": "number",
          "Delta": "number",
          "epsilon": "number",
          "Epsilon": "number",
          "Eta": "number",
          "eta": "number",
          "Gamma": "number",
          "gamma": "number",
          "iota": "number",
          "Iota": "number",
          "kappa": "number",
          "Kappa": "number",
          "lambda": "number",
          "Lambda": "number",
          "mu": "number",
          "Mu": "number",
          "nu": "number",
          "Nu": "number",
          "omega": "number",
          "Omega": "number",
          "omicron": "number",
          "Omicron": "number",
          "Phi": "number",
          "phi": "number",
          "pi": "number",
          "Pi": "number",
          "piv": "number",
          "psi": "number",
          "Psi": "number",
          "rho": "number",
          "Rho": "number",
          "sigma": "number",
          "Sigma": "number",
          "sigmaf": "number",
          "Tau": "number",
          "tau": "number",
          "theta": "number",
          "Theta": "number",
          "thetasym": "number",
          "upsih": "number",
          "Upsilon": "number",
          "upsilon": "number",
          "Xi": "number",
          "xi": "number",
          "Zeta": "number",
          "zeta": "number"
        }
      },
      "manager": {
        "Canvas": {
          "!type": "fn(options: Object)",
          "prototype": {
            "baseClass": "string",
            "useScrollbars": "bool",
            "zoom": "number",
            "getScrollOffset": "fn() -> Object",
            "getScrollWidth": "fn() -> number",
            "resize": "fn(width: ?, height: ?)",
            "setDimensions": "fn(width: ?, height: ?, scrollx: ?, scrolly: ?)",
            "setZoom": "fn(zoom: ?)",
            "onScroll": "fn()"
          }
        },
        "Anchors": {
          "!type": "fn(options: Object)",
          "prototype": {
            "add": "fn(item: dojox.drawing.stencil._Base)",
            "remove": "fn(item: dojox.drawing.stencil._Base)",
            "onAddAnchor": "fn(anchor: Object)",
            "onAnchorDown": "fn(anchor: Object)",
            "onAnchorDrag": "fn(anchor: Object)",
            "onAnchorUp": "fn(anchor: Object)",
            "onChangeStyle": "fn(stencil: Object)",
            "onRenderStencil": "fn()",
            "onReset": "fn(stencil: dojox.drawing.stencil._Base)",
            "onTransformPoint": "fn(anchor: Object)"
          }
        },
        "StencilUI": {
          "!type": "fn(options: ?)",
          "prototype": {
            "register": "fn(stencil: Object) -> Object",
            "onOut": "fn(obj: Event)",
            "onOver": "fn(obj: Event)",
            "onUiDown": "fn(obj: Event)",
            "onUiUp": "fn(obj: Event)"
          }
        },
        "Mouse": {
          "!type": "fn(options: Object)",
          "prototype": {
            "CustomEventMethod": "Object",
            "doublClickSpeed": "number",
            "zoom": "number",
            "create": "fn(evt: ?, squelchErrors: ?) -> Object",
            "down": "fn(evt: ?)",
            "drag": "fn(evt: ?)",
            "eventName": "fn(name: ?) -> ?",
            "EventObject": "fn()",
            "init": "fn(node: HTMLElement)",
            "move": "fn(evt: ?)",
            "out": "fn(obj: ?)",
            "over": "fn(obj: ?)",
            "overName": "fn(obj: ?, evt: ?) -> String",
            "register": "fn(scope: Object) -> ?",
            "resize": "fn(width: ?, height: ?)",
            "scrollOffset": "fn() -> Object",
            "setCanvas": "fn()",
            "setCursor": "fn(cursor: ?, node: HTMLElement)",
            "setEventMode": "fn(mode: ?)",
            "setZoom": "fn(zoom: ?)",
            "unregister": "fn(handle: ?)",
            "up": "fn(evt: ?)",
            "onDown": "fn(obj: ?)",
            "onDrag": "fn(obj: ?)",
            "onMove": "fn(obj: ?)",
            "onOut": "fn(obj: ?)",
            "onOver": "fn(obj: ?)",
            "onUp": "fn(obj: ?)"
          }
        },
        "Stencil": {
          "!type": "fn(options: ?)",
          "prototype": {
            "throttleTime": "number",
            "deleteItem": "fn(stencil: Object)",
            "deselect": "fn()",
            "deselectItem": "fn(stencil: Object)",
            "exporter": "fn() -> [?]",
            "getRecentStencil": "fn() -> ?",
            "hasSelected": "fn() -> number",
            "isSelected": "fn(stencil: Object) -> bool",
            "listStencils": "fn() -> ?",
            "register": "fn(stencil: Object) -> ?",
            "removeAll": "fn()",
            "saveMoveState": "fn()",
            "saveThrottledState": "fn()",
            "selectAll": "fn()",
            "selectItem": "fn(idOrItem: String)",
            "setConstraint": "fn()",
            "setRecentStencil": "fn(stencil: ?)",
            "setSelectionGroup": "fn()",
            "toSelected": "fn(func: String)",
            "unDelete": "fn(stencils: [?])",
            "unregister": "fn(stencil: Object)",
            "withSelected": "fn(func: Function)",
            "withStencils": "fn(func: Function)",
            "withUnselected": "fn(func: Function)",
            "onAnchorUp": "fn()",
            "onArrow": "fn(evt: KeyboardEvent)",
            "onBeginDrag": "fn(obj: Event)",
            "onDelete": "fn(noundo: bool)",
            "onDeselect": "fn(stencil: ?, keepObject: ?)",
            "onDown": "fn(obj: Event)",
            "onDragEnd": "fn(obj: Event)",
            "onLabelDoubleClick": "fn(obj: Event)",
            "onLabelDown": "fn(obj: Event, evt: ?)",
            "onLabelDrag": "fn(obj: Event)",
            "onLabelUp": "fn(obj: Event)",
            "onSelect": "fn(stencil: Object)",
            "onStencilDoubleClick": "fn(obj: Event)",
            "onStencilDown": "fn(obj: Event, evt: ?)",
            "onStencilDrag": "fn(obj: Event)",
            "onStencilOut": "fn(obj: ?)",
            "onStencilOver": "fn(obj: ?)",
            "onStencilUp": "fn(obj: Event)"
          }
        },
        "Undo": {
          "!type": "fn(options: ?)",
          "prototype": {
            "add": "fn(stack: ?)",
            "apply": "fn(scope: ?, method: ?, args: ?)",
            "redo": "fn()",
            "undo": "fn()",
            "onKeyDown": "fn(evt: ?)"
          }
        },
        "_registry": {
          "getRegistered": "fn(type: ?, id: ?) -> ?",
          "register": "fn(item: ?, type: ?)"
        },
        "keys": {
          "alt": "bool",
          "arrowIncrement": "number",
          "arrowShiftIncrement": "number",
          "cmmd": "bool",
          "ctrl": "bool",
          "listeners": "[?]",
          "meta": "bool",
          "shift": "bool",
          "editMode": "fn(_isedit: ?)",
          "enable": "fn(_enabled: ?)",
          "init": "fn()",
          "register": "fn(options: ?)",
          "scanForFields": "fn()"
        }
      },
      "plugins": {
        "_Plugin": {
          "!type": "fn(options: ?)",
          "prototype": {
            "anchors": "Object",
            "button": "Object",
            "canvas": "Object",
            "drawing": "Object",
            "keys": "Object",
            "mouse": "Object",
            "node": "Object",
            "stencils": "Object",
            "type": "string",
            "util": "Object",
            "connect": "fn()",
            "disconnect": "fn(handles: Object)"
          }
        },
        "drawing": {
          "Grid": {
            "!type": "fn(options: ?)",
            "prototype": {
              "anchors": "Object",
              "button": "Object",
              "canvas": "Object",
              "drawing": "Object",
              "gap": "number",
              "keys": "Object",
              "major": "number",
              "majorColor": "string",
              "minor": "number",
              "minorColor": "string",
              "mouse": "Object",
              "node": "Object",
              "stencils": "Object",
              "type": "string",
              "util": "Object",
              "zoom": "number",
              "connect": "fn()",
              "disconnect": "fn(handles: Object)",
              "setGrid": "fn(options: ?) -> ?",
              "setZoom": "fn(zoom: ?)"
            }
          },
          "GreekPalette": {
            "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
            "prototype": {
              "active": "bool",
              "set": "fn(property: string, value: bool)",
              "get": "fn(property: string) -> bool",
              "watch": "fn(property: string, callback: ?) -> ret",
              "attachScope": "Object",
              "attributeMap": "Object",
              "baseClass": "string",
              "cellClass": "string",
              "class": "string",
              "containerNode": "HTMLElement",
              "cssStateNodes": "Object",
              "defaultTimeout": "number",
              "dir": "string",
              "domNode": "HTMLElement",
              "focused": "bool",
              "hovering": "bool",
              "id": "string",
              "lang": "string",
              "ownerDocument": "Object",
              "paletteClass": "string",
              "searchContainerNode": "bool",
              "showPreview": "bool",
              "srcNodeRef": "HTMLElement",
              "style": "string",
              "tabIndex": "string",
              "templatePath": "string",
              "templateString": "string",
              "timeoutChangeRate": "number",
              "title": "string",
              "tooltip": "string",
              "value": "string",
              "attr": "fn(name: String, value: Object) -> ?",
              "buildRendering": "fn()",
              "connect": "fn(obj: Object, event: String, method: String) -> ?",
              "defer": "fn(fcn: Function, delay: number) -> Object",
              "destroy": "fn(preserveDom?: bool)",
              "destroyDescendants": "fn(preserveDom: bool)",
              "destroyRecursive": "fn(preserveDom: bool)",
              "destroyRendering": "fn(preserveDom?: bool)",
              "disconnect": "fn(handle: ?)",
              "dyeClass": "fn()",
              "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
              "focus": "fn()",
              "getChildren": "fn() -> [?]",
              "getDescendants": "fn() -> [?]",
              "getParent": "fn() -> ?",
              "isFocusable": "fn() -> ?",
              "isLeftToRight": "fn() -> ?",
              "on": "fn(type: String, func: Function) -> ?",
              "own": "fn() -> ?",
              "placeAt": "fn(reference: String, position: String) -> ?",
              "postCreate": "fn()",
              "postMixInProperties": "fn()",
              "setAttribute": "fn(attr: String, value: ?)",
              "show": "fn(obj: ?)",
              "startup": "fn()",
              "subscribe": "fn(t: String, method: Function) -> ?",
              "uninitialize": "fn() -> bool",
              "unsubscribe": "fn(handle: Object)",
              "getCachedTemplate": "fn() -> ?",
              "onBlur": "fn()",
              "onCancel": "fn(closeAll: bool)",
              "onChange": "fn(val: ?)",
              "onClick": "fn(event: ?)",
              "onClose": "fn() -> bool",
              "onDblClick": "fn(event: ?)",
              "onFocus": "fn()",
              "onHide": "fn()",
              "onKeyDown": "fn(event: ?)",
              "onKeyPress": "fn(event: ?)",
              "onKeyUp": "fn(event: ?)",
              "onMouseDown": "fn(event: ?)",
              "onMouseEnter": "fn(event: ?)",
              "onMouseLeave": "fn(event: ?)",
              "onMouseMove": "fn(event: ?)",
              "onMouseOut": "fn(event: ?)",
              "onMouseOver": "fn(event: ?)",
              "onMouseUp": "fn(event: ?)",
              "onShow": "fn()"
            }
          },
          "Silverlight": {}
        },
        "tools": {
          "Iconize": {
            "!type": "fn(options: ?)",
            "prototype": {
              "anchors": "Object",
              "button": "Object",
              "canvas": "Object",
              "drawing": "Object",
              "keys": "Object",
              "mouse": "Object",
              "node": "Object",
              "setup": "Object",
              "stencils": "Object",
              "type": "string",
              "util": "Object",
              "connect": "fn()",
              "disconnect": "fn(handles: Object)",
              "makeIcon": "fn(p: [?])",
              "onClick": "fn()"
            },
            "setup": {
              "iconClass": "string",
              "name": "string",
              "tooltip": "string"
            }
          },
          "Pan": {
            "!type": "fn(options: ?)",
            "prototype": {
              "anchors": "Object",
              "button": "Object",
              "canvas": "Object",
              "drawing": "Object",
              "interval": "number",
              "keys": "Object",
              "keyScroll": "bool",
              "mouse": "Object",
              "node": "Object",
              "selected": "bool",
              "setup": "Object",
              "stencils": "Object",
              "type": "string",
              "util": "Object",
              "checkBounds": "fn()",
              "connect": "fn()",
              "disconnect": "fn(handles: Object)",
              "onArrow": "fn(evt: ?)",
              "onKeyDown": "fn(evt: ?)",
              "onKeyUp": "fn(evt: ?)",
              "onPanDrag": "fn(obj: ?)",
              "onPanUp": "fn(obj: ?)",
              "onSetPan": "fn(bool: bool)",
              "onStencilDrag": "fn(obj: ?)",
              "onStencilUp": "fn(obj: ?)",
              "onUp": "fn(obj: ?)"
            },
            "setup": {
              "button": "bool",
              "iconClass": "string",
              "name": "string",
              "tooltip": "string"
            }
          },
          "Zoom": {
            "Zoom100": {
              "!type": "fn(options: ?)",
              "prototype": {
                "anchors": "Object",
                "button": "Object",
                "canvas": "Object",
                "drawing": "Object",
                "keys": "Object",
                "mouse": "Object",
                "node": "Object",
                "setup": "Object",
                "stencils": "Object",
                "type": "string",
                "util": "Object",
                "connect": "fn()",
                "disconnect": "fn(handles: Object)",
                "onClick": "fn()",
                "onZoom100": "fn()"
              }
            },
            "ZoomIn": {
              "!type": "fn(options: ?)",
              "prototype": {
                "anchors": "Object",
                "button": "Object",
                "canvas": "Object",
                "drawing": "Object",
                "keys": "Object",
                "mouse": "Object",
                "node": "Object",
                "setup": "Object",
                "stencils": "Object",
                "type": "string",
                "util": "Object",
                "connect": "fn()",
                "disconnect": "fn(handles: Object)",
                "onClick": "fn()",
                "onZoomIn": "fn()"
              }
            },
            "ZoomOut": {
              "!type": "fn(options: ?)",
              "prototype": {
                "anchors": "Object",
                "button": "Object",
                "canvas": "Object",
                "drawing": "Object",
                "keys": "Object",
                "mouse": "Object",
                "node": "Object",
                "setup": "Object",
                "stencils": "Object",
                "type": "string",
                "util": "Object",
                "connect": "fn()",
                "disconnect": "fn(handles: Object)",
                "onClick": "fn()",
                "onZoomOut": "fn()"
              }
            }
          }
        }
      },
      "stencil": {
        "_Base": {
          "!type": "fn(options: ?)",
          "prototype": {
            "drawingType": "string",
            "enabled": "bool",
            "minimumSize": "number",
            "type": "string",
            "addShadow": "fn(args: Object)",
            "animate": "fn(options: ?, create: ?)",
            "applyTransform": "fn(mx: ?)",
            "attr": "fn(key: String, value: String)",
            "connect": "fn(o: ?, e: ?, s: ?, m: ?, once: bool) -> ?",
            "connectMouse": "fn()",
            "connectMult": "fn()",
            "dataToPoints": "fn(data: Object)",
            "deselect": "fn(useDelay: bool)",
            "destroy": "fn()",
            "disable": "fn()",
            "disconnect": "fn(handles: Object)",
            "disconnectMouse": "fn()",
            "enable": "fn()",
            "exporter": "fn() -> ?",
            "getAngle": "fn() -> ?",
            "getBounds": "fn(absolute: bool) -> Object",
            "getLabel": "fn() -> ?",
            "getRadius": "fn() -> ?",
            "getTransform": "fn() -> Object",
            "highlight": "fn()",
            "moveToBack": "fn()",
            "moveToFront": "fn()",
            "pointsToData": "fn(points: [?])",
            "preventNegativePos": "fn()",
            "remove": "fn()",
            "removeShadow": "fn()",
            "render": "fn()",
            "select": "fn()",
            "setData": "fn(data: Object)",
            "setLabel": "fn(text: String)",
            "setPoints": "fn(points: [Object])",
            "setTransform": "fn(mx: Object)",
            "transformPoints": "fn(mx: ?)",
            "unhighlight": "fn()",
            "onBeforeRender": "fn(stencil: Object)",
            "onChangeData": "fn(stencil: Object)",
            "onChangeStyle": "fn(stencil: Object)",
            "onChangeText": "fn(value: ?)",
            "onDelete": "fn(stencil: dojox.drawing.stencil._Base)",
            "onDown": "fn(obj: Event)",
            "onDrag": "fn(obj: Event)",
            "onModify": "fn(stencil: Object)",
            "onMove": "fn(obj: Event)",
            "onRender": "fn(stencil: Object)",
            "onTransform": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformBegin": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformEnd": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onUp": "fn(obj: Event)"
          }
        },
        "Ellipse": {
          "!type": "fn(options: ?)",
          "prototype": {
            "anchorType": "string",
            "baseRender": "bool",
            "drawingType": "string",
            "enabled": "bool",
            "minimumSize": "number",
            "type": "string",
            "addShadow": "fn(args: Object)",
            "animate": "fn(options: ?, create: ?)",
            "applyTransform": "fn(mx: ?)",
            "attr": "fn(key: String, value: String)",
            "connect": "fn(o: ?, e: ?, s: ?, m: ?, once: bool) -> ?",
            "connectMouse": "fn()",
            "connectMult": "fn()",
            "dataToPoints": "fn(o: Object) -> [?]",
            "deselect": "fn(useDelay: bool)",
            "destroy": "fn()",
            "disable": "fn()",
            "disconnect": "fn(handles: Object)",
            "disconnectMouse": "fn()",
            "enable": "fn()",
            "exporter": "fn() -> ?",
            "getAngle": "fn() -> ?",
            "getBounds": "fn(absolute: bool) -> Object",
            "getLabel": "fn() -> ?",
            "getRadius": "fn() -> ?",
            "getTransform": "fn() -> Object",
            "highlight": "fn()",
            "moveToBack": "fn()",
            "moveToFront": "fn()",
            "pointsToData": "fn(p: [?]) -> Object",
            "preventNegativePos": "fn()",
            "remove": "fn()",
            "removeShadow": "fn()",
            "render": "fn()",
            "select": "fn()",
            "setData": "fn(data: Object)",
            "setLabel": "fn(text: String)",
            "setPoints": "fn(points: [Object])",
            "setTransform": "fn(mx: Object)",
            "transformPoints": "fn(mx: ?)",
            "unhighlight": "fn()",
            "onBeforeRender": "fn(stencil: Object)",
            "onChangeData": "fn(stencil: Object)",
            "onChangeStyle": "fn(stencil: Object)",
            "onChangeText": "fn(value: ?)",
            "onDelete": "fn(stencil: dojox.drawing.stencil._Base)",
            "onDown": "fn(obj: Event)",
            "onDrag": "fn(obj: Event)",
            "onModify": "fn(stencil: Object)",
            "onMove": "fn(obj: Event)",
            "onRender": "fn(stencil: Object)",
            "onTransform": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformBegin": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformEnd": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onUp": "fn(obj: Event)"
          }
        },
        "Image": {
          "!type": "fn(options: ?)",
          "prototype": {
            "anchorType": "string",
            "baseRender": "bool",
            "drawingType": "string",
            "enabled": "bool",
            "minimumSize": "number",
            "StencilData": "Object",
            "StencilPoints": "[?]",
            "type": "string",
            "addShadow": "fn(args: Object)",
            "animate": "fn(options: ?, create: ?)",
            "applyTransform": "fn(mx: ?)",
            "attr": "fn(key: String, value: String)",
            "connect": "fn(o: ?, e: ?, s: ?, m: ?, once: bool) -> ?",
            "connectMouse": "fn()",
            "connectMult": "fn()",
            "dataToPoints": "fn(o: Object) -> [?]",
            "deselect": "fn(useDelay: bool)",
            "destroy": "fn()",
            "disable": "fn()",
            "disconnect": "fn(handles: Object)",
            "disconnectMouse": "fn()",
            "enable": "fn()",
            "exporter": "fn() -> ?",
            "getAngle": "fn() -> ?",
            "getBounds": "fn(absolute: bool) -> Object",
            "getImageSize": "fn(render: ?)",
            "getLabel": "fn() -> ?",
            "getRadius": "fn() -> ?",
            "getTransform": "fn() -> Object",
            "highlight": "fn()",
            "moveToBack": "fn()",
            "moveToFront": "fn()",
            "pointsToData": "fn(p: [?]) -> Object",
            "preventNegativePos": "fn()",
            "remove": "fn()",
            "removeShadow": "fn()",
            "render": "fn(dbg?: ?)",
            "select": "fn()",
            "setData": "fn(data: Object)",
            "setLabel": "fn(text: String)",
            "setPoints": "fn(points: [Object])",
            "setTransform": "fn(mx: Object)",
            "transformPoints": "fn(mx: ?)",
            "unhighlight": "fn()",
            "onBeforeRender": "fn(stencil: Object)",
            "onChangeData": "fn(stencil: Object)",
            "onChangeStyle": "fn(stencil: Object)",
            "onChangeText": "fn(value: ?)",
            "onDelete": "fn(stencil: dojox.drawing.stencil._Base)",
            "onDown": "fn(obj: Event)",
            "onDrag": "fn(obj: Event)",
            "onModify": "fn(stencil: Object)",
            "onMove": "fn(obj: Event)",
            "onRender": "fn(stencil: Object)",
            "onTransform": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformBegin": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformEnd": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onUp": "fn(obj: Event)"
          }
        },
        "Line": {
          "!type": "fn(options: ?)",
          "prototype": {
            "anchorType": "string",
            "baseRender": "bool",
            "drawingType": "string",
            "enabled": "bool",
            "minimumSize": "number",
            "StencilData": "Object",
            "StencilPoints": "[?]",
            "type": "string",
            "addShadow": "fn(args: Object)",
            "animate": "fn(options: ?, create: ?)",
            "applyTransform": "fn(mx: ?)",
            "attr": "fn(key: String, value: String)",
            "connect": "fn(o: ?, e: ?, s: ?, m: ?, once: bool) -> ?",
            "connectMouse": "fn()",
            "connectMult": "fn()",
            "dataToPoints": "fn(o: ?) -> [?]",
            "deselect": "fn(useDelay: bool)",
            "destroy": "fn()",
            "disable": "fn()",
            "disconnect": "fn(handles: Object)",
            "disconnectMouse": "fn()",
            "enable": "fn()",
            "exporter": "fn() -> ?",
            "getAngle": "fn() -> ?",
            "getBounds": "fn(absolute: bool) -> Object",
            "getLabel": "fn() -> ?",
            "getRadius": "fn() -> ?",
            "getTransform": "fn() -> Object",
            "highlight": "fn()",
            "moveToBack": "fn()",
            "moveToFront": "fn()",
            "pointsToData": "fn(p: ?) -> Object",
            "preventNegativePos": "fn()",
            "remove": "fn()",
            "removeShadow": "fn()",
            "render": "fn()",
            "select": "fn()",
            "setData": "fn(data: Object)",
            "setLabel": "fn(text: String)",
            "setPoints": "fn(points: [Object])",
            "setTransform": "fn(mx: Object)",
            "transformPoints": "fn(mx: ?)",
            "unhighlight": "fn()",
            "onBeforeRender": "fn(stencil: Object)",
            "onChangeData": "fn(stencil: Object)",
            "onChangeStyle": "fn(stencil: Object)",
            "onChangeText": "fn(value: ?)",
            "onDelete": "fn(stencil: dojox.drawing.stencil._Base)",
            "onDown": "fn(obj: Event)",
            "onDrag": "fn(obj: Event)",
            "onModify": "fn(stencil: Object)",
            "onMove": "fn(obj: Event)",
            "onRender": "fn(stencil: Object)",
            "onTransform": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformBegin": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformEnd": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onUp": "fn(obj: Event)"
          }
        },
        "Path": {
          "!type": "fn(options: ?)",
          "prototype": {
            "baseRender": "bool",
            "closeColor": "Object",
            "closePath": "bool",
            "closeRadius": "number",
            "drawingType": "string",
            "enabled": "bool",
            "minimumSize": "number",
            "StencilData": "Object",
            "StencilPoints": "[?]",
            "type": "string",
            "addShadow": "fn(args: Object)",
            "animate": "fn(options: ?, create: ?)",
            "applyTransform": "fn(mx: ?)",
            "attr": "fn(key: String, value: String)",
            "checkClosePoint": "fn(firstPt: Object, currPt: Object, remove: bool) -> bool",
            "connect": "fn(o: ?, e: ?, s: ?, m: ?, once: bool) -> ?",
            "connectMouse": "fn()",
            "connectMult": "fn()",
            "dataToPoints": "fn(data: Object)",
            "deselect": "fn(useDelay: bool)",
            "destroy": "fn()",
            "disable": "fn()",
            "disconnect": "fn(handles: Object)",
            "disconnectMouse": "fn()",
            "enable": "fn()",
            "exporter": "fn() -> ?",
            "getAngle": "fn() -> ?",
            "getBounds": "fn(absolute: bool) -> Object",
            "getLabel": "fn() -> ?",
            "getRadius": "fn() -> ?",
            "getTransform": "fn() -> Object",
            "highlight": "fn()",
            "moveToBack": "fn()",
            "moveToFront": "fn()",
            "pointsToData": "fn(points: [?])",
            "preventNegativePos": "fn()",
            "remove": "fn()",
            "removeShadow": "fn()",
            "render": "fn()",
            "select": "fn()",
            "setData": "fn(data: Object)",
            "setLabel": "fn(text: String)",
            "setPoints": "fn(points: [Object])",
            "setTransform": "fn(mx: Object)",
            "transformPoints": "fn(mx: ?)",
            "unhighlight": "fn()",
            "onBeforeRender": "fn(stencil: Object)",
            "onChangeData": "fn(stencil: Object)",
            "onChangeStyle": "fn(stencil: Object)",
            "onChangeText": "fn(value: ?)",
            "onDelete": "fn(stencil: dojox.drawing.stencil._Base)",
            "onDown": "fn(obj: Event)",
            "onDrag": "fn(obj: Event)",
            "onModify": "fn(stencil: Object)",
            "onMove": "fn(obj: Event)",
            "onRender": "fn(stencil: Object)",
            "onTransform": "fn(anchor: Object)",
            "onTransformBegin": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformEnd": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onUp": "fn(obj: Event)"
          }
        },
        "Rect": {
          "!type": "fn(options: ?)",
          "prototype": {
            "anchorType": "string",
            "baseRender": "bool",
            "drawingType": "string",
            "enabled": "bool",
            "minimumSize": "number",
            "type": "string",
            "addShadow": "fn(args: Object)",
            "animate": "fn(options: ?, create: ?)",
            "applyTransform": "fn(mx: ?)",
            "attr": "fn(key: String, value: String)",
            "connect": "fn(o: ?, e: ?, s: ?, m: ?, once: bool) -> ?",
            "connectMouse": "fn()",
            "connectMult": "fn()",
            "dataToPoints": "fn(d: Object) -> [?]",
            "deselect": "fn(useDelay: bool)",
            "destroy": "fn()",
            "disable": "fn()",
            "disconnect": "fn(handles: Object)",
            "disconnectMouse": "fn()",
            "enable": "fn()",
            "exporter": "fn() -> ?",
            "getAngle": "fn() -> ?",
            "getBounds": "fn(absolute: bool) -> Object",
            "getLabel": "fn() -> ?",
            "getRadius": "fn() -> ?",
            "getTransform": "fn() -> Object",
            "highlight": "fn()",
            "moveToBack": "fn()",
            "moveToFront": "fn()",
            "pointsToData": "fn(p: [?]) -> Object",
            "preventNegativePos": "fn()",
            "remove": "fn()",
            "removeShadow": "fn()",
            "render": "fn()",
            "select": "fn()",
            "setData": "fn(data: Object)",
            "setLabel": "fn(text: String)",
            "setPoints": "fn(points: [Object])",
            "setTransform": "fn(mx: Object)",
            "transformPoints": "fn(mx: ?)",
            "unhighlight": "fn()",
            "onBeforeRender": "fn(stencil: Object)",
            "onChangeData": "fn(stencil: Object)",
            "onChangeStyle": "fn(stencil: Object)",
            "onChangeText": "fn(value: ?)",
            "onDelete": "fn(stencil: dojox.drawing.stencil._Base)",
            "onDown": "fn(obj: Event)",
            "onDrag": "fn(obj: Event)",
            "onModify": "fn(stencil: Object)",
            "onMove": "fn(obj: Event)",
            "onRender": "fn(stencil: Object)",
            "onTransform": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformBegin": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformEnd": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onUp": "fn(obj: Event)"
          }
        },
        "Text": {
          "!type": "fn(options: ?)",
          "prototype": {
            "align": "string",
            "anchorType": "string",
            "baseRender": "bool",
            "drawingType": "string",
            "enabled": "bool",
            "minimumSize": "number",
            "StencilData": "Object",
            "StencilPoints": "[?]",
            "type": "string",
            "valign": "string",
            "addShadow": "fn(args: Object)",
            "animate": "fn(options: ?, create: ?)",
            "applyTransform": "fn(mx: ?)",
            "attr": "fn(key: String, value: String)",
            "connect": "fn(o: ?, e: ?, s: ?, m: ?, once: bool) -> ?",
            "connectMouse": "fn()",
            "connectMult": "fn()",
            "dataToPoints": "fn(o: Object) -> [?]",
            "deselect": "fn(useDelay: bool)",
            "destroy": "fn()",
            "disable": "fn()",
            "disconnect": "fn(handles: Object)",
            "disconnectMouse": "fn()",
            "enable": "fn()",
            "exporter": "fn() -> ?",
            "getAngle": "fn() -> ?",
            "getBounds": "fn(absolute: bool) -> Object",
            "getLabel": "fn() -> ?",
            "getRadius": "fn() -> ?",
            "getText": "fn() -> ?",
            "getTransform": "fn() -> Object",
            "highlight": "fn()",
            "makeFit": "fn(text: ?, w: ?) -> Object",
            "moveToBack": "fn()",
            "moveToFront": "fn()",
            "pointsToData": "fn(p: [?]) -> Object",
            "preventNegativePos": "fn()",
            "remove": "fn()",
            "removeShadow": "fn()",
            "render": "fn(text?: String)",
            "select": "fn()",
            "setData": "fn(data: Object)",
            "setLabel": "fn(text: String)",
            "setPoints": "fn(points: [Object])",
            "setText": "fn(text: ?)",
            "setTransform": "fn(mx: Object)",
            "transformPoints": "fn(mx: ?)",
            "typesetter": "fn(text: ?) -> ?",
            "unhighlight": "fn()",
            "onBeforeRender": "fn(stencil: Object)",
            "onChangeData": "fn(stencil: Object)",
            "onChangeStyle": "fn(stencil: Object)",
            "onChangeText": "fn(value: ?)",
            "onDelete": "fn(stencil: dojox.drawing.stencil._Base)",
            "onDown": "fn(obj: Event)",
            "onDrag": "fn(obj: Event)",
            "onModify": "fn(stencil: Object)",
            "onMove": "fn(obj: Event)",
            "onRender": "fn(stencil: Object)",
            "onTransform": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformBegin": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformEnd": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onUp": "fn(obj: Event)"
          }
        }
      },
      "tools": {
        "Arrow": {
          "!type": "fn(options: ?)",
          "prototype": {
            "anchorType": "string",
            "arrowEnd": "bool",
            "arrowStart": "bool",
            "baseRender": "bool",
            "drawingType": "string",
            "draws": "bool",
            "enabled": "bool",
            "minimumSize": "number",
            "setup": "Object",
            "showAngle": "bool",
            "StencilData": "Object",
            "StencilPoints": "[?]",
            "type": "string",
            "addShadow": "fn(args: Object)",
            "animate": "fn(options: ?, create: ?)",
            "applyTransform": "fn(mx: ?)",
            "attr": "fn(key: String, value: String)",
            "connect": "fn(o: ?, e: ?, s: ?, m: ?, once: bool) -> ?",
            "connectMouse": "fn()",
            "connectMult": "fn()",
            "dataToPoints": "fn(o: ?) -> [?]",
            "deselect": "fn(useDelay: bool)",
            "destroy": "fn()",
            "disable": "fn()",
            "disconnect": "fn(handles: Object)",
            "disconnectMouse": "fn()",
            "enable": "fn()",
            "exporter": "fn() -> ?",
            "getAngle": "fn() -> ?",
            "getBounds": "fn(absolute: bool) -> Object",
            "getLabel": "fn() -> ?",
            "getRadius": "fn() -> ?",
            "getTransform": "fn() -> Object",
            "highlight": "fn()",
            "labelPosition": "fn() -> Object",
            "moveToBack": "fn()",
            "moveToFront": "fn()",
            "pointsToData": "fn(p: ?) -> Object",
            "preventNegativePos": "fn()",
            "remove": "fn()",
            "removeShadow": "fn()",
            "render": "fn()",
            "select": "fn()",
            "setData": "fn(data: Object)",
            "setLabel": "fn(text: String)",
            "setPoints": "fn(points: [Object])",
            "setTransform": "fn(mx: Object)",
            "transformPoints": "fn(mx: ?)",
            "unhighlight": "fn()",
            "onBeforeRender": "fn(stencil: Object)",
            "onChangeData": "fn(stencil: Object)",
            "onChangeStyle": "fn(stencil: Object)",
            "onChangeText": "fn(value: ?)",
            "onDelete": "fn(stencil: dojox.drawing.stencil._Base)",
            "onDown": "fn(obj: Event)",
            "onDrag": "fn(obj: Event)",
            "onModify": "fn(stencil: Object)",
            "onMove": "fn(obj: Event)",
            "onRender": "fn(stencil: Object)",
            "onTransform": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformBegin": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformEnd": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onUp": "fn(obj: Event)"
          },
          "setup": {
            "iconClass": "string",
            "name": "string",
            "tooltip": "string"
          }
        },
        "Ellipse": {
          "!type": "fn()",
          "prototype": {
            "anchorType": "string",
            "baseRender": "bool",
            "drawingType": "string",
            "draws": "bool",
            "enabled": "bool",
            "minimumSize": "number",
            "setup": "Object",
            "type": "string",
            "addShadow": "fn(args: Object)",
            "animate": "fn(options: ?, create: ?)",
            "applyTransform": "fn(mx: ?)",
            "attr": "fn(key: String, value: String)",
            "connect": "fn(o: ?, e: ?, s: ?, m: ?, once: bool) -> ?",
            "connectMouse": "fn()",
            "connectMult": "fn()",
            "dataToPoints": "fn(o: Object) -> [?]",
            "deselect": "fn(useDelay: bool)",
            "destroy": "fn()",
            "disable": "fn()",
            "disconnect": "fn(handles: Object)",
            "disconnectMouse": "fn()",
            "enable": "fn()",
            "exporter": "fn() -> ?",
            "getAngle": "fn() -> ?",
            "getBounds": "fn(absolute: bool) -> Object",
            "getLabel": "fn() -> ?",
            "getRadius": "fn() -> ?",
            "getTransform": "fn() -> Object",
            "highlight": "fn()",
            "moveToBack": "fn()",
            "moveToFront": "fn()",
            "pointsToData": "fn(p: [?]) -> Object",
            "preventNegativePos": "fn()",
            "remove": "fn()",
            "removeShadow": "fn()",
            "render": "fn()",
            "select": "fn()",
            "setData": "fn(data: Object)",
            "setLabel": "fn(text: String)",
            "setPoints": "fn(points: [Object])",
            "setTransform": "fn(mx: Object)",
            "transformPoints": "fn(mx: ?)",
            "unhighlight": "fn()",
            "onBeforeRender": "fn(stencil: Object)",
            "onChangeData": "fn(stencil: Object)",
            "onChangeStyle": "fn(stencil: Object)",
            "onChangeText": "fn(value: ?)",
            "onDelete": "fn(stencil: dojox.drawing.stencil._Base)",
            "onDown": "fn(obj: Event)",
            "onDrag": "fn(obj: Event)",
            "onModify": "fn(stencil: Object)",
            "onMove": "fn(obj: Event)",
            "onRender": "fn(stencil: Object)",
            "onTransform": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformBegin": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformEnd": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onUp": "fn(obj: Event)"
          },
          "setup": {
            "iconClass": "string",
            "name": "string",
            "tooltip": "string"
          }
        },
        "Line": {
          "!type": "fn()",
          "prototype": {
            "anchorType": "string",
            "baseRender": "bool",
            "drawingType": "string",
            "draws": "bool",
            "enabled": "bool",
            "minimumSize": "number",
            "setup": "Object",
            "showAngle": "bool",
            "StencilData": "Object",
            "StencilPoints": "[?]",
            "type": "string",
            "addShadow": "fn(args: Object)",
            "animate": "fn(options: ?, create: ?)",
            "applyTransform": "fn(mx: ?)",
            "attr": "fn(key: String, value: String)",
            "connect": "fn(o: ?, e: ?, s: ?, m: ?, once: bool) -> ?",
            "connectMouse": "fn()",
            "connectMult": "fn()",
            "dataToPoints": "fn(o: ?) -> [?]",
            "deselect": "fn(useDelay: bool)",
            "destroy": "fn()",
            "disable": "fn()",
            "disconnect": "fn(handles: Object)",
            "disconnectMouse": "fn()",
            "enable": "fn()",
            "exporter": "fn() -> ?",
            "getAngle": "fn() -> ?",
            "getBounds": "fn(absolute: bool) -> Object",
            "getLabel": "fn() -> ?",
            "getRadius": "fn() -> ?",
            "getTransform": "fn() -> Object",
            "highlight": "fn()",
            "moveToBack": "fn()",
            "moveToFront": "fn()",
            "pointsToData": "fn(p: ?) -> Object",
            "preventNegativePos": "fn()",
            "remove": "fn()",
            "removeShadow": "fn()",
            "render": "fn()",
            "select": "fn()",
            "setData": "fn(data: Object)",
            "setLabel": "fn(text: String)",
            "setPoints": "fn(points: [Object])",
            "setTransform": "fn(mx: Object)",
            "transformPoints": "fn(mx: ?)",
            "unhighlight": "fn()",
            "onBeforeRender": "fn(stencil: Object)",
            "onChangeData": "fn(stencil: Object)",
            "onChangeStyle": "fn(stencil: Object)",
            "onChangeText": "fn(value: ?)",
            "onDelete": "fn(stencil: dojox.drawing.stencil._Base)",
            "onDown": "fn(obj: Event)",
            "onDrag": "fn(obj: Event)",
            "onModify": "fn(stencil: Object)",
            "onMove": "fn(obj: Event)",
            "onRender": "fn(stencil: Object)",
            "onTransform": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformBegin": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformEnd": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onUp": "fn(obj: Event)"
          },
          "setup": {
            "iconClass": "string",
            "name": "string",
            "tooltip": "string"
          }
        },
        "Path": {
          "!type": "fn()",
          "prototype": {
            "baseRender": "bool",
            "closeColor": "Object",
            "closePath": "bool",
            "closeRadius": "number",
            "drawingType": "string",
            "draws": "bool",
            "enabled": "bool",
            "minimumSize": "number",
            "setup": "Object",
            "StencilData": "Object",
            "StencilPoints": "[?]",
            "type": "string",
            "addShadow": "fn(args: Object)",
            "animate": "fn(options: ?, create: ?)",
            "applyTransform": "fn(mx: ?)",
            "attr": "fn(key: String, value: String)",
            "checkClosePoint": "fn(firstPt: Object, currPt: Object, remove: bool) -> bool",
            "connect": "fn(o: ?, e: ?, s: ?, m: ?, once: bool) -> ?",
            "connectMouse": "fn()",
            "connectMult": "fn()",
            "createGuide": "fn(obj: ?)",
            "dataToPoints": "fn(data: Object)",
            "deselect": "fn(useDelay: bool)",
            "destroy": "fn()",
            "disable": "fn()",
            "disconnect": "fn(handles: Object)",
            "disconnectMouse": "fn()",
            "enable": "fn()",
            "exporter": "fn() -> ?",
            "getAngle": "fn() -> ?",
            "getBounds": "fn(absolute: bool) -> Object",
            "getLabel": "fn() -> ?",
            "getRadius": "fn() -> ?",
            "getTransform": "fn() -> Object",
            "highlight": "fn()",
            "makeSubPath": "fn(_closePath: ?)",
            "moveToBack": "fn()",
            "moveToFront": "fn()",
            "pointsToData": "fn(points: [?])",
            "preventNegativePos": "fn()",
            "remove": "fn()",
            "removeShadow": "fn()",
            "render": "fn()",
            "select": "fn()",
            "setData": "fn(data: Object)",
            "setLabel": "fn(text: String)",
            "setPoints": "fn(points: [Object])",
            "setTransform": "fn(mx: Object)",
            "transformPoints": "fn(mx: ?)",
            "unhighlight": "fn()",
            "onBeforeRender": "fn(stencil: Object)",
            "onChangeData": "fn(stencil: Object)",
            "onChangeStyle": "fn(stencil: Object)",
            "onChangeText": "fn(value: ?)",
            "onCompletePath": "fn(_closePath: ?)",
            "onDelete": "fn(stencil: dojox.drawing.stencil._Base)",
            "onDown": "fn(obj: ?)",
            "onDrag": "fn(obj: ?)",
            "onModify": "fn(stencil: Object)",
            "onMove": "fn(obj: ?)",
            "onRender": "fn(stencil: Object)",
            "onStartPath": "fn(obj: ?)",
            "onTransform": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformBegin": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformEnd": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onUp": "fn(obj: Event)"
          },
          "setup": {
            "iconClass": "string",
            "name": "string",
            "tooltip": "string"
          }
        },
        "Pencil": {
          "!type": "fn()",
          "prototype": {
            "baseRender": "bool",
            "closeColor": "Object",
            "closePath": "bool",
            "closeRadius": "number",
            "drawingType": "string",
            "draws": "bool",
            "enabled": "bool",
            "minDist": "number",
            "minimumSize": "number",
            "setup": "Object",
            "StencilData": "Object",
            "StencilPoints": "[?]",
            "type": "string",
            "addShadow": "fn(args: Object)",
            "animate": "fn(options: ?, create: ?)",
            "applyTransform": "fn(mx: ?)",
            "attr": "fn(key: String, value: String)",
            "checkClosePoint": "fn(firstPt: Object, currPt: Object, remove: bool) -> bool",
            "connect": "fn(o: ?, e: ?, s: ?, m: ?, once: bool) -> ?",
            "connectMouse": "fn()",
            "connectMult": "fn()",
            "dataToPoints": "fn(data: Object)",
            "deselect": "fn(useDelay: bool)",
            "destroy": "fn()",
            "disable": "fn()",
            "disconnect": "fn(handles: Object)",
            "disconnectMouse": "fn()",
            "enable": "fn()",
            "exporter": "fn() -> ?",
            "getAngle": "fn() -> ?",
            "getBounds": "fn(absolute: bool) -> Object",
            "getLabel": "fn() -> ?",
            "getRadius": "fn() -> ?",
            "getTransform": "fn() -> Object",
            "highlight": "fn()",
            "moveToBack": "fn()",
            "moveToFront": "fn()",
            "pointsToData": "fn(points: [?])",
            "preventNegativePos": "fn()",
            "remove": "fn()",
            "removeShadow": "fn()",
            "render": "fn()",
            "select": "fn()",
            "setData": "fn(data: Object)",
            "setLabel": "fn(text: String)",
            "setPoints": "fn(points: [Object])",
            "setTransform": "fn(mx: Object)",
            "transformPoints": "fn(mx: ?)",
            "unhighlight": "fn()",
            "onBeforeRender": "fn(stencil: Object)",
            "onChangeData": "fn(stencil: Object)",
            "onChangeStyle": "fn(stencil: Object)",
            "onChangeText": "fn(value: ?)",
            "onDelete": "fn(stencil: dojox.drawing.stencil._Base)",
            "onDown": "fn(obj: ?)",
            "onDrag": "fn(obj: ?)",
            "onModify": "fn(stencil: Object)",
            "onMove": "fn(obj: Event)",
            "onRender": "fn(stencil: Object)",
            "onTransform": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformBegin": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformEnd": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onUp": "fn(obj: ?)"
          },
          "setup": {
            "iconClass": "string",
            "name": "string",
            "tooltip": "string"
          }
        },
        "Rect": {
          "!type": "fn()",
          "prototype": {
            "anchorType": "string",
            "baseRender": "bool",
            "drawingType": "string",
            "draws": "bool",
            "enabled": "bool",
            "minimumSize": "number",
            "setup": "Object",
            "type": "string",
            "addShadow": "fn(args: Object)",
            "animate": "fn(options: ?, create: ?)",
            "applyTransform": "fn(mx: ?)",
            "attr": "fn(key: String, value: String)",
            "connect": "fn(o: ?, e: ?, s: ?, m: ?, once: bool) -> ?",
            "connectMouse": "fn()",
            "connectMult": "fn()",
            "dataToPoints": "fn(d: Object) -> [?]",
            "deselect": "fn(useDelay: bool)",
            "destroy": "fn()",
            "disable": "fn()",
            "disconnect": "fn(handles: Object)",
            "disconnectMouse": "fn()",
            "enable": "fn()",
            "exporter": "fn() -> ?",
            "getAngle": "fn() -> ?",
            "getBounds": "fn(absolute: bool) -> Object",
            "getLabel": "fn() -> ?",
            "getRadius": "fn() -> ?",
            "getTransform": "fn() -> Object",
            "highlight": "fn()",
            "moveToBack": "fn()",
            "moveToFront": "fn()",
            "pointsToData": "fn(p: [?]) -> Object",
            "preventNegativePos": "fn()",
            "remove": "fn()",
            "removeShadow": "fn()",
            "render": "fn()",
            "select": "fn()",
            "setData": "fn(data: Object)",
            "setLabel": "fn(text: String)",
            "setPoints": "fn(points: [Object])",
            "setTransform": "fn(mx: Object)",
            "transformPoints": "fn(mx: ?)",
            "unhighlight": "fn()",
            "onBeforeRender": "fn(stencil: Object)",
            "onChangeData": "fn(stencil: Object)",
            "onChangeStyle": "fn(stencil: Object)",
            "onChangeText": "fn(value: ?)",
            "onDelete": "fn(stencil: dojox.drawing.stencil._Base)",
            "onDown": "fn(obj: Event)",
            "onDrag": "fn(obj: Event)",
            "onModify": "fn(stencil: Object)",
            "onMove": "fn(obj: Event)",
            "onRender": "fn(stencil: Object)",
            "onTransform": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformBegin": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformEnd": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onUp": "fn(obj: Event)"
          },
          "setup": {
            "iconClass": "string",
            "name": "string",
            "tooltip": "string"
          }
        },
        "TextBlock": {
          "!type": "fn(options: ?)",
          "prototype": {
            "align": "string",
            "anchorType": "string",
            "baseRender": "bool",
            "drawingType": "string",
            "draws": "bool",
            "enabled": "bool",
            "minimumSize": "number",
            "selectOnExec": "bool",
            "setup": "Object",
            "showEmpty": "bool",
            "StencilData": "Object",
            "StencilPoints": "[?]",
            "type": "string",
            "valign": "string",
            "addShadow": "fn(args: Object)",
            "animate": "fn(options: ?, create: ?)",
            "applyTransform": "fn(mx: ?)",
            "attr": "fn(key: String, value: String)",
            "cleanText": "fn(txt: String, removeBreaks: bool) -> ?",
            "connect": "fn(o: ?, e: ?, s: ?, m: ?, once: bool) -> ?",
            "connectMouse": "fn()",
            "connectMult": "fn()",
            "connectTextField": "fn()",
            "createAnchors": "fn()",
            "createTextField": "fn(txt: String) -> ?",
            "dataToPoints": "fn(o: Object) -> [?]",
            "deselect": "fn(useDelay: bool)",
            "destroy": "fn()",
            "destroyAnchors": "fn()",
            "disable": "fn()",
            "disconnect": "fn(handles: Object)",
            "disconnectMouse": "fn()",
            "edit": "fn()",
            "enable": "fn()",
            "execText": "fn()",
            "exporter": "fn() -> ?",
            "getAngle": "fn() -> ?",
            "getBounds": "fn(absolute: bool) -> Object",
            "getLabel": "fn() -> ?",
            "getRadius": "fn() -> ?",
            "getSavedCaret": "fn() -> Object",
            "getSelection": "fn(node: ?)",
            "getText": "fn() -> ?",
            "getTransform": "fn() -> Object",
            "highlight": "fn()",
            "insertText": "fn(node: ?, val: ?)",
            "makeFit": "fn(text: ?, w: ?) -> Object",
            "measureText": "fn(str: String, width: number) -> Object",
            "moveToBack": "fn()",
            "moveToFront": "fn()",
            "pointsToData": "fn(p: [?]) -> Object",
            "preventNegativePos": "fn()",
            "remove": "fn()",
            "removeShadow": "fn()",
            "render": "fn(text: String)",
            "select": "fn()",
            "setData": "fn(data: Object)",
            "setLabel": "fn(text: String)",
            "setPoints": "fn(points: [Object])",
            "setSavedCaret": "fn(val: ?)",
            "setSelection": "fn(node: ?, what: ?)",
            "setText": "fn(text: ?)",
            "setTransform": "fn(mx: Object)",
            "showParent": "fn(obj: Event)",
            "transformPoints": "fn(mx: ?)",
            "typesetter": "fn(text: ?) -> ?",
            "unhighlight": "fn()",
            "onBeforeRender": "fn(stencil: Object)",
            "onChangeData": "fn(stencil: Object)",
            "onChangeStyle": "fn(stencil: Object)",
            "onChangeText": "fn(value: ?)",
            "onDelete": "fn(stencil: dojox.drawing.stencil._Base)",
            "onDown": "fn(obj: Event)",
            "onDrag": "fn(obj: Event)",
            "onModify": "fn(stencil: Object)",
            "onMove": "fn(obj: Event)",
            "onRender": "fn(stencil: Object)",
            "onTransform": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformBegin": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onTransformEnd": "fn(anchor: dojox.drawing.manager.Anchors)",
            "onUp": "fn(obj: Event)"
          },
          "setup": {
            "iconClass": "string",
            "name": "string",
            "tooltip": "string"
          }
        },
        "custom": {
          "Axes": {
            "!type": "fn(options: ?)",
            "prototype": {
              "baseRender": "bool",
              "closeColor": "Object",
              "closePath": "bool",
              "closeRadius": "number",
              "drawingType": "string",
              "draws": "bool",
              "enabled": "bool",
              "minimumSize": "number",
              "setup": "Object",
              "showAngle": "bool",
              "StencilData": "Object",
              "StencilPoints": "[?]",
              "type": "string",
              "zScale": "number",
              "addShadow": "fn(args: Object)",
              "anchorPositionCheck": "fn(x: number, y: number, anchor: dojox.drawing.manager.Anchors) -> Object",
              "animate": "fn(options: ?, create: ?)",
              "applyTransform": "fn(mx: ?)",
              "attr": "fn(key: String, value: String)",
              "checkClosePoint": "fn(firstPt: Object, currPt: Object, remove: bool) -> bool",
              "connect": "fn(o: ?, e: ?, s: ?, m: ?, once: bool) -> ?",
              "connectMouse": "fn()",
              "connectMult": "fn()",
              "createLabels": "fn()",
              "dataToPoints": "fn(o: Object) -> [?]",
              "deselect": "fn(useDelay: bool)",
              "destroy": "fn()",
              "disable": "fn()",
              "disconnect": "fn(handles: Object)",
              "disconnectMouse": "fn()",
              "enable": "fn()",
              "exporter": "fn() -> ?",
              "getAngle": "fn() -> ?",
              "getBounds": "fn(absolute: bool) -> Object",
              "getLabel": "fn() -> ?",
              "getRadius": "fn() -> ?",
              "getTransform": "fn() -> Object",
              "highlight": "fn()",
              "moveToBack": "fn()",
              "moveToFront": "fn()",
              "pointsToData": "fn() -> Object",
              "preventNegativePos": "fn()",
              "remove": "fn()",
              "removeShadow": "fn()",
              "render": "fn()",
              "select": "fn()",
              "setData": "fn(data: Object)",
              "setLabel": "fn(value: String)",
              "setLabelX": "fn() -> Object",
              "setLabelY": "fn() -> Object",
              "setLabelZ": "fn() -> Object",
              "setPoints": "fn(points: [Object])",
              "setTransform": "fn(mx: Object)",
              "transformPoints": "fn(mx: ?)",
              "unhighlight": "fn()",
              "zPoint": "fn(obj: ?) -> Object",
              "zSet": "fn()",
              "onBeforeRender": "fn(stencil: Object)",
              "onChangeData": "fn(stencil: Object)",
              "onChangeStyle": "fn(stencil: Object)",
              "onChangeText": "fn(value: ?)",
              "onDelete": "fn(stencil: dojox.drawing.stencil._Base)",
              "onDown": "fn(obj: Event)",
              "onDrag": "fn(obj: Event)",
              "onModify": "fn(stencil: Object)",
              "onMove": "fn(obj: Event)",
              "onRender": "fn(stencil: Object)",
              "onTransform": "fn(anchor: number)",
              "onTransformBegin": "fn(anchor: dojox.drawing.manager.Anchors)",
              "onTransformEnd": "fn(anchor: dojox.drawing.manager.Anchors)",
              "onUp": "fn(obj: Event)"
            },
            "setup": {
              "iconClass": "string",
              "name": "string",
              "tooltip": "string"
            }
          },
          "Equation": {
            "!type": "fn(options: ?)",
            "prototype": {
              "align": "string",
              "anchorType": "string",
              "baseRender": "bool",
              "customType": "string",
              "drawingType": "string",
              "draws": "bool",
              "enabled": "bool",
              "minimumSize": "number",
              "selectOnExec": "bool",
              "setup": "Object",
              "showEmpty": "bool",
              "StencilData": "Object",
              "StencilPoints": "[?]",
              "type": "string",
              "valign": "string",
              "addShadow": "fn(args: Object)",
              "animate": "fn(options: ?, create: ?)",
              "applyTransform": "fn(mx: ?)",
              "attr": "fn(key: String, value: String)",
              "cleanText": "fn(txt: String, removeBreaks: bool) -> ?",
              "connect": "fn(o: ?, e: ?, s: ?, m: ?, once: bool) -> ?",
              "connectMouse": "fn()",
              "connectMult": "fn()",
              "connectTextField": "fn()",
              "createAnchors": "fn()",
              "createTextField": "fn(txt: String) -> ?",
              "dataToPoints": "fn(o: Object) -> [?]",
              "deselect": "fn(useDelay: bool)",
              "destroy": "fn()",
              "destroyAnchors": "fn()",
              "disable": "fn()",
              "disconnect": "fn(handles: Object)",
              "disconnectMouse": "fn()",
              "edit": "fn()",
              "enable": "fn()",
              "execText": "fn()",
              "exporter": "fn() -> ?",
              "getAngle": "fn() -> ?",
              "getBounds": "fn(absolute: bool) -> Object",
              "getLabel": "fn() -> ?",
              "getRadius": "fn() -> ?",
              "getSavedCaret": "fn() -> Object",
              "getSelection": "fn(node: ?)",
              "getText": "fn() -> ?",
              "getTransform": "fn() -> Object",
              "highlight": "fn()",
              "insertText": "fn(node: ?, val: ?)",
              "makeFit": "fn(text: ?, w: ?) -> Object",
              "measureText": "fn(str: String, width: number) -> Object",
              "moveToBack": "fn()",
              "moveToFront": "fn()",
              "pointsToData": "fn(p: [?]) -> Object",
              "preventNegativePos": "fn()",
              "remove": "fn()",
              "removeShadow": "fn()",
              "render": "fn(text: String)",
              "select": "fn()",
              "setData": "fn(data: Object)",
              "setLabel": "fn(text: String)",
              "setPoints": "fn(points: [Object])",
              "setSavedCaret": "fn(val: ?)",
              "setSelection": "fn(node: ?, what: ?)",
              "setText": "fn(text: ?)",
              "setTransform": "fn(mx: Object)",
              "showParent": "fn(obj: Event)",
              "transformPoints": "fn(mx: ?)",
              "typesetter": "fn(text: ?) -> ?",
              "unhighlight": "fn()",
              "onBeforeRender": "fn(stencil: Object)",
              "onChangeData": "fn(stencil: Object)",
              "onChangeStyle": "fn(stencil: Object)",
              "onChangeText": "fn(value: ?)",
              "onDelete": "fn(stencil: dojox.drawing.stencil._Base)",
              "onDown": "fn(obj: Event)",
              "onDrag": "fn(obj: Event)",
              "onModify": "fn(stencil: Object)",
              "onMove": "fn(obj: Event)",
              "onRender": "fn(stencil: Object)",
              "onTransform": "fn(anchor: dojox.drawing.manager.Anchors)",
              "onTransformBegin": "fn(anchor: dojox.drawing.manager.Anchors)",
              "onTransformEnd": "fn(anchor: dojox.drawing.manager.Anchors)",
              "onUp": "fn(obj: Event)"
            },
            "setup": {
              "iconClass": "string",
              "name": "string",
              "tooltip": "string"
            }
          },
          "Vector": {
            "!type": "fn(options: ?)",
            "prototype": {
              "anchorType": "string",
              "arrowEnd": "bool",
              "arrowStart": "bool",
              "baseRender": "bool",
              "drawingType": "string",
              "draws": "bool",
              "enabled": "bool",
              "minimumSize": "number",
              "setup": "Object",
              "showAngle": "bool",
              "StencilData": "Object",
              "StencilPoints": "[?]",
              "type": "string",
              "addShadow": "fn(args: Object)",
              "anchorConstrain": "fn(x: ?, y: ?) -> ?",
              "animate": "fn(options: ?, create: ?)",
              "applyTransform": "fn(mx: ?)",
              "attr": "fn(key: String, value: String)",
              "changeAxis": "fn(cosphi: ?)",
              "connect": "fn(o: ?, e: ?, s: ?, m: ?, once: bool) -> ?",
              "connectMouse": "fn()",
              "connectMult": "fn()",
              "dataToPoints": "fn(o: ?) -> [?]",
              "deselect": "fn(useDelay: bool)",
              "destroy": "fn()",
              "disable": "fn()",
              "disconnect": "fn(handles: Object)",
              "disconnectMouse": "fn()",
              "enable": "fn()",
              "exporter": "fn() -> ?",
              "getAngle": "fn() -> ?",
              "getBounds": "fn(absolute: bool) -> Object",
              "getLabel": "fn() -> ?",
              "getRadius": "fn() -> ?",
              "getTransform": "fn() -> Object",
              "highlight": "fn()",
              "labelPosition": "fn() -> Object",
              "moveToBack": "fn()",
              "moveToFront": "fn()",
              "pointsToData": "fn(p: ?) -> Object",
              "preventNegativePos": "fn()",
              "remove": "fn()",
              "removeShadow": "fn()",
              "render": "fn()",
              "select": "fn()",
              "setData": "fn(data: Object)",
              "setLabel": "fn(text: String)",
              "setPoints": "fn(points: [Object])",
              "setTransform": "fn(mx: Object)",
              "transformPoints": "fn(mx: ?)",
              "unhighlight": "fn()",
              "zPoint": "fn(obj: ?) -> ?",
              "onBeforeRender": "fn(stencil: Object)",
              "onChangeData": "fn(stencil: Object)",
              "onChangeStyle": "fn(stencil: Object)",
              "onChangeText": "fn(value: ?)",
              "onDelete": "fn(stencil: dojox.drawing.stencil._Base)",
              "onDown": "fn(obj: Event)",
              "onDrag": "fn(obj: Event)",
              "onModify": "fn(stencil: Object)",
              "onMove": "fn(obj: Event)",
              "onRender": "fn(stencil: Object)",
              "onTransform": "fn(anchor: dojox.drawing.manager.Anchors)",
              "onTransformBegin": "fn(anchor: dojox.drawing.manager.Anchors)",
              "onTransformEnd": "fn(anchor: dojox.drawing.manager.Anchors)",
              "onUp": "fn(obj: Event)"
            },
            "setup": {
              "iconClass": "string",
              "name": "string",
              "tooltip": "string"
            }
          }
        }
      },
      "ui": {
        "Button": {
          "!type": "fn(options: ?)",
          "prototype": {
            "callback": "Object",
            "enabled": "bool",
            "hitched": "Object",
            "scope": "Object",
            "selected": "bool",
            "toolType": "string",
            "type": "string",
            "attr": "fn(options: ?)",
            "deselect": "fn()",
            "disable": "fn()",
            "enable": "fn()",
            "makeOptions": "fn(d: Object, s: number) -> Object",
            "select": "fn()",
            "onClick": "fn(button: Object)",
            "onDown": "fn()",
            "onOut": "fn()",
            "onOver": "fn()",
            "onUp": "fn()"
          }
        },
        "Tooltip": {
          "!type": "fn(options: ?)",
          "prototype": {
            "anchors": "Object",
            "button": "Object",
            "canvas": "Object",
            "drawing": "Object",
            "height": "number",
            "keys": "Object",
            "mouse": "Object",
            "node": "Object",
            "stencils": "Object",
            "type": "string",
            "util": "Object",
            "width": "number",
            "connect": "fn()",
            "disconnect": "fn(handles: Object)",
            "onOut": "fn()",
            "onOver": "fn()"
          }
        },
        "Toolbar": {
          "!type": "fn(props: ?, node: ?)",
          "prototype": {
            "margin": "number",
            "padding": "number",
            "radius": "number",
            "size": "number",
            "strPlugs": "string",
            "strSelected": "string",
            "strTools": "string",
            "toolPlugGap": "number",
            "addBack": "fn()",
            "addPlugin": "fn()",
            "addTool": "fn()",
            "makeButtons": "fn()",
            "onPlugClick": "fn(button: Object)",
            "onRenderStencil": "fn(stencil: Object)",
            "onToolClick": "fn(button: Object)"
          }
        },
        "dom": {
          "Toolbar": {
            "!type": "fn(props: ?, node: ?)",
            "prototype": {
              "baseClass": "string",
              "buttonClass": "string",
              "iconClass": "string",
              "createIcon": "fn(node: HTMLElement, constr: Function)",
              "createTool": "fn(node: HTMLElement)",
              "parse": "fn()",
              "onClick": "fn(type: String)",
              "onSetTool": "fn(type: String)"
            }
          },
          "Pan": {
            "!type": "fn(options: ?)",
            "prototype": {
              "anchors": "Object",
              "button": "Object",
              "canvas": "Object",
              "drawing": "Object",
              "keys": "Object",
              "mouse": "Object",
              "node": "Object",
              "selected": "bool",
              "setup": "Object",
              "stencils": "Object",
              "type": "string",
              "util": "Object",
              "checkBounds": "fn()",
              "connect": "fn()",
              "disconnect": "fn(handles: Object)",
              "onKeyDown": "fn(evt: ?)",
              "onKeyUp": "fn(evt: ?)",
              "onPanDrag": "fn(obj: ?)",
              "onSetPan": "fn(bool: bool)",
              "onStencilDrag": "fn(obj: ?)",
              "onStencilUp": "fn(obj: ?)"
            },
            "setup": {
              "iconClass": "string",
              "name": "string",
              "tooltip": "string"
            }
          },
          "Zoom": {
            "!type": "fn(options: ?)",
            "prototype": {
              "anchors": "Object",
              "baseClass": "string",
              "botClass": "string",
              "button": "Object",
              "canvas": "Object",
              "drawing": "Object",
              "keys": "Object",
              "maxZoom": "number",
              "midClass": "string",
              "minZoom": "number",
              "mouse": "Object",
              "node": "Object",
              "stencils": "Object",
              "topClass": "string",
              "type": "string",
              "util": "Object",
              "zoomFactor": "number",
              "zoomInc": "number",
              "connect": "fn()",
              "disconnect": "fn(handles: Object)",
              "makeButton": "fn(name: ?, cls: ?)",
              "onZoom100": "fn(evt: MouseEvent)",
              "onZoomIn": "fn(evt: MouseEvent)",
              "onZoomOut": "fn(evt: MouseEvent)"
            }
          }
        }
      },
      "util": {
        "common": {
          "objects": {},
          "abbr": "fn(type: ?) -> number",
          "angle": "fn(obj: Event, snap: number) -> ?",
          "argsToObj": "fn() -> ?",
          "attr": "fn(elem: Object, prop: String, value: ?, squelchErrors: ?) -> bool",
          "byId": "fn(id: String) -> ?",
          "constrainAngle": "fn(obj: Event, min: number, max: number) -> Event",
          "degToRad": "fn(n: number) -> number",
          "distance": "fn() -> ?",
          "idSetStart": "fn(num: ?)",
          "length": "fn(o: Event) -> ?",
          "lineSub": "fn(x1: number, y1: number, x2: number, y2: number, amt: number) -> Object",
          "mixin": "fn(o1: ?, o2: ?)",
          "oppAngle": "fn(ang: number) -> number",
          "pointOnCircle": "fn(cx: number, cy: number, radius: number, angle: number) -> Object",
          "radians": "fn(o: Event) -> ?",
          "radToDeg": "fn(n: number) -> number",
          "register": "fn(obj: Object)",
          "slope": "fn(p1: Object, p2: Object) -> number",
          "snapAngle": "fn(obj: Event, ca: number) -> ?",
          "uid": "fn(str: String) -> String"
        },
        "oo": {
          "declare": "fn() -> ?",
          "extend": "fn() -> Function"
        },
        "positioning": {
          "angle": "fn(start: Object, end: Object) -> Object",
          "label": "fn(start: Object, end: Object) -> Object"
        },
        "typeset": {
          "convertHTML": "fn(inText: ?) -> ?",
          "convertLaTeX": "fn(inText: ?) -> ?"
        }
      }
    }
  },
  "dojox/drawing": "exp",
  "dojox/drawing/_base": "exp",
  "dojox/drawing/Drawing": "exp",
  "dojox/drawing/defaults": "exp",
  "dojox/drawing/defaults.arrows": "exp",
  "dojox/drawing/defaults.disabled": "exp",
  "dojox/drawing/defaults.anchors": "exp",
  "dojox/drawing/defaults.highlighted": "exp",
  "dojox/drawing/defaults.button": "exp",
  "dojox/drawing/defaults.hitSelected": "exp",
  "dojox/drawing/defaults.hitNorm": "exp",
  "dojox/drawing/defaults.hitHighlighted": "exp",
  "dojox/drawing/defaults.selected": "exp",
  "dojox/drawing/defaults.norm": "exp",
  "dojox/drawing/defaults.textMode": "exp",
  "dojox/drawing/defaults.textDisabled": "exp",
  "dojox/drawing/defaults.text": "exp",
  "dojox/drawing/annotations/Label": "exp",
  "dojox/drawing/annotations/Label.Label": "exp",
  "dojox/drawing/annotations/Angle": "exp",
  "dojox/drawing/annotations/BoxShadow": "exp",
  "dojox/drawing/annotations/Arrow": "exp",
  "dojox/drawing/library/icons": "exp",
  "dojox/drawing/library/icons.ellipse": "exp",
  "dojox/drawing/library/icons.arrow": "exp",
  "dojox/drawing/library/icons.axes": "exp",
  "dojox/drawing/library/icons.pan": "exp",
  "dojox/drawing/library/icons.line": "exp",
  "dojox/drawing/library/icons.path": "exp",
  "dojox/drawing/library/icons.equation": "exp",
  "dojox/drawing/library/icons.iconize": "exp",
  "dojox/drawing/library/icons.pencil": "exp",
  "dojox/drawing/library/icons.plus": "exp",
  "dojox/drawing/library/icons.triangle": "exp",
  "dojox/drawing/library/icons.vector": "exp",
  "dojox/drawing/library/icons.rect": "exp",
  "dojox/drawing/library/icons.zoom100": "exp",
  "dojox/drawing/library/icons.textBlock": "exp",
  "dojox/drawing/library/icons.zoomIn": "exp",
  "dojox/drawing/library/icons.zoomOut": "exp",
  "dojox/drawing/library/greek": "exp",
  "dojox/drawing/manager/_registry": "exp",
  "dojox/drawing/manager/keys": "exp",
  "dojox/drawing/manager/Anchors": "exp",
  "dojox/drawing/manager/Canvas": "exp",
  "dojox/drawing/manager/StencilUI": "exp",
  "dojox/drawing/manager/Undo": "exp",
  "dojox/drawing/manager/Mouse": "exp",
  "dojox/drawing/manager/Stencil": "exp",
  "dojox/drawing/plugins/_Plugin": "exp",
  "dojox/drawing/plugins/drawing/Grid": "exp",
  "dojox/drawing/plugins/drawing/GreekPalette": "exp",
  "dojox/drawing/plugins/tools/Zoom": "exp",
  "dojox/drawing/plugins/tools/Zoom.Zoom100": "exp",
  "dojox/drawing/plugins/tools/Zoom.ZoomOut": "exp",
  "dojox/drawing/plugins/tools/Zoom.ZoomIn": "exp",
  "dojox/drawing/plugins/tools/Iconize": "exp",
  "dojox/drawing/plugins/tools/Iconize.setup": "exp",
  "dojox/drawing/plugins/tools/Pan": "exp",
  "dojox/drawing/plugins/tools/Pan.setup": "exp",
  "dojox/drawing/stencil/_Base": "exp",
  "dojox/drawing/stencil/Line": "exp",
  "dojox/drawing/stencil/Ellipse": "exp",
  "dojox/drawing/stencil/Path": "exp",
  "dojox/drawing/stencil/Rect": "exp",
  "dojox/drawing/stencil/Image": "exp",
  "dojox/drawing/stencil/Text": "exp",
  "dojox/drawing/tools/Arrow": "exp",
  "dojox/drawing/tools/Arrow.setup": "exp",
  "dojox/drawing/tools/Ellipse": "exp",
  "dojox/drawing/tools/Ellipse.setup": "exp",
  "dojox/drawing/tools/Pencil": "exp",
  "dojox/drawing/tools/Pencil.setup": "exp",
  "dojox/drawing/tools/Rect": "exp",
  "dojox/drawing/tools/Rect.setup": "exp",
  "dojox/drawing/tools/Path": "exp",
  "dojox/drawing/tools/Path.setup": "exp",
  "dojox/drawing/tools/Line": "exp",
  "dojox/drawing/tools/Line.setup": "exp",
  "dojox/drawing/tools/TextBlock": "exp",
  "dojox/drawing/tools/TextBlock.setup": "exp",
  "dojox/drawing/tools/custom/Axes": "exp",
  "dojox/drawing/tools/custom/Axes.setup": "exp",
  "dojox/drawing/tools/custom/Vector": "exp",
  "dojox/drawing/tools/custom/Vector.setup": "exp",
  "dojox/drawing/tools/custom/Equation": "exp",
  "dojox/drawing/tools/custom/Equation.setup": "exp",
  "dojox/drawing/ui/Button": "exp",
  "dojox/drawing/ui/Toolbar": "exp",
  "dojox/drawing/ui/Tooltip": "exp",
  "dojox/drawing/ui/dom/Toolbar": "exp",
  "dojox/drawing/ui/dom/Pan": "exp",
  "dojox/drawing/ui/dom/Pan.setup": "exp",
  "dojox/drawing/ui/dom/Zoom": "exp",
  "dojox/drawing/util/positioning": "exp",
  "dojox/drawing/util/oo": "exp",
  "dojox/drawing/util/typeset": "exp",
  "dojox/drawing/util/common": "exp",
  "dojox/drawing/util/common.objects": "exp",
  "!name": "dojox.drawing.d.ts",
  "!define": {
    "ret": {
      "unwatch": "fn()"
    },
    "ret1": {
      "unwatch": "fn()"
    },
    "ret2": {
      "unwatch": "fn()"
    },
    "ret3": {
      "unwatch": "fn()"
    },
    "ret4": {
      "unwatch": "fn()"
    },
    "ret5": {
      "unwatch": "fn()"
    },
    "ret6": {
      "unwatch": "fn()"
    },
    "ret7": {
      "unwatch": "fn()"
    },
    "ret8": {
      "unwatch": "fn()"
    },
    "ret9": {
      "unwatch": "fn()"
    },
    "ret10": {
      "unwatch": "fn()"
    },
    "ret11": {
      "unwatch": "fn()"
    },
    "ret12": {
      "unwatch": "fn()"
    },
    "ret13": {
      "unwatch": "fn()"
    },
    "ret14": {
      "unwatch": "fn()"
    },
    "ret15": {
      "unwatch": "fn()"
    },
    "ret16": {
      "unwatch": "fn()"
    },
    "ret17": {
      "unwatch": "fn()"
    },
    "ret18": {
      "unwatch": "fn()"
    },
    "ret19": {
      "unwatch": "fn()"
    },
    "ret20": {
      "unwatch": "fn()"
    },
    "ret21": {
      "unwatch": "fn()"
    },
    "ret22": {
      "unwatch": "fn()"
    },
    "ret23": {
      "unwatch": "fn()"
    },
    "ret24": {
      "unwatch": "fn()"
    },
    "ret25": {
      "unwatch": "fn()"
    },
    "ret26": {
      "unwatch": "fn()"
    },
    "ret27": {
      "unwatch": "fn()"
    },
    "ret28": {
      "unwatch": "fn()"
    }
  }
}
