{
  "formatters_info": {
    "i": "string",
    "u": "string",
    "xxx": "string",
    "vvv": "fn(xdate: XDate, useutc: bool)"
  },
  "locale_detail": {
    "monthNames": "[string]",
    "monthNamesShort": "[string]",
    "dayNames": "[string]",
    "dayNamesShort": "[string]",
    "amDesignator": "string",
    "pmDesignator": "string"
  },
  "XDate": {
    "!type": "fn()",
    "getDaysInMonth": "fn(year: number, month: number) -> number",
    "parse": "fn(dateString: string) -> number",
    "now": "fn() -> number",
    "today": "fn() -> XDate",
    "UTC": "fn(year: number, month: number, date: number, hours: number, minutes: number, seconds: number, milliseconds: number) -> XDate",
    "locales": {},
    "defaultLocale": "string",
    "formatters": "formatters_info",
    "prototype": {
      "getFullYear": "fn() -> number",
      "getMonth": "fn() -> number",
      "getWeek": "fn() -> number",
      "getDate": "fn() -> number",
      "getDay": "fn() -> number",
      "getHours": "fn() -> number",
      "getMinutes": "fn() -> number",
      "getSeconds": "fn() -> number",
      "getMilliseconds": "fn() -> number",
      "getTime": "fn() -> number",
      "setFullYear": "fn(year: number, preventOverflow?: bool) -> XDate",
      "setMonth": "fn(month: number, preventOverflow?: bool) -> XDate",
      "setWeek": "fn(week: number, year?: number) -> XDate",
      "setDate": "fn(date: number) -> XDate",
      "setHours": "fn(hours: number) -> XDate",
      "setMinutes": "fn(minutes: number) -> XDate",
      "setSeconds": "fn(seconds: number) -> XDate",
      "setMilliseconds": "fn(milliseconds: number) -> XDate",
      "setTime": "fn(milliseconds: number) -> XDate",
      "addYears": "fn(years: number, preventOverflow?: bool) -> XDate",
      "addMonths": "fn(months: number, preventOverflow?: bool) -> XDate",
      "addWeeks": "fn(weeks: number) -> XDate",
      "addDays": "fn(days: number) -> XDate",
      "addHours": "fn(hours: number) -> XDate",
      "addMinutes": "fn(minutes: number) -> XDate",
      "addSeconds": "fn(seconds: number) -> XDate",
      "addMilliseconds": "fn(milliseconds: number) -> XDate",
      "diffYears": "fn(otherDate: string) -> number",
      "diffMonths": "fn(otherDate: string) -> number",
      "diffWeeks": "fn(otherDate: string) -> number",
      "diffDays": "fn(otherDate: string) -> number",
      "diffHours": "fn(otherDate: string) -> number",
      "diffMinutes": "fn(otherDate: string) -> number",
      "diffSeconds": "fn(otherDate: string) -> number",
      "diffMilliseconds": "fn(otherDate: string) -> number",
      "toUTCString": "fn(formatString?: string, settings?: Object) -> string",
      "toGMTString": "fn(formatString?: string, settings?: Object) -> string",
      "toISOString": "fn() -> string",
      "toDateString": "fn() -> string",
      "toTimeString": "fn() -> string",
      "toLocaleDateString": "fn() -> string",
      "toLocaleTimeString": "fn() -> string",
      "getUTCFullYear": "fn() -> number",
      "getUTCMonth": "fn() -> number",
      "getUTCWeek": "fn() -> number",
      "getUTCDate": "fn() -> number",
      "getUTCDay": "fn() -> number",
      "getUTCHours": "fn() -> number",
      "getUTCMinutes": "fn() -> number",
      "getUTCSeconds": "fn() -> number",
      "getUTCMilliseconds": "fn() -> number",
      "setUTCFullYear": "fn(year: number) -> XDate",
      "setUTCMonth": "fn(month: number) -> XDate",
      "setUTCWeek": "fn(week: number, year?: number) -> XDate",
      "setUTCDate": "fn(date: number) -> XDate",
      "setUTCHours": "fn(hours: number) -> XDate",
      "setUTCMinutes": "fn(minutes: number) -> XDate",
      "setUTCSeconds": "fn(seconds: number) -> XDate",
      "setUTCMilliseconds": "fn(milliseconds: number) -> XDate",
      "getUTCMode": "fn() -> bool",
      "setUTCMode": "fn(utcMode: bool, doCoercion?: bool) -> XDate",
      "getTimezoneOffset": "fn() -> number",
      "clone": "fn() -> XDate",
      "clearTime": "fn() -> XDate",
      "valid": "fn() -> bool",
      "toDate": "fn() -> Date"
    }
  },
  "!name": "xdate"
}
