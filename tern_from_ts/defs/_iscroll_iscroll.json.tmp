{
  "iScrollEvent": {},
  "iScrollOptions": {
    "hScroll": "bool",
    "vScroll": "bool",
    "x": "number",
    "y": "number",
    "bounce": "bool",
    "bounceLock": "bool",
    "momentum": "bool",
    "lockDirection": "bool",
    "useTransform": "bool",
    "useTransition": "bool",
    "topOffset": "number",
    "checkDOMChanges": "bool",
    "handleClick": "bool",
    "hScrollbar": "bool",
    "vScrollbar": "bool",
    "fixedScrollbar": "bool",
    "hideScrollbar": "bool",
    "fadeScrollbar": "bool",
    "scrollbarClass": "string",
    "zoom": "bool",
    "zoomMin": "number",
    "zoomMax": "number",
    "doubleTapZoom": "number",
    "wheelAction": "string",
    "snap": "?",
    "snapThreshold": "number",
    "onRefresh": "iScrollEvent",
    "onBeforeScrollStart": "iScrollEvent",
    "onScrollStart": "iScrollEvent",
    "onBeforeScrollMove": "iScrollEvent",
    "onScrollMove": "iScrollEvent",
    "onBeforeScrollEnd": "iScrollEvent",
    "onScrollEnd": "iScrollEvent",
    "onTouchEnd": "iScrollEvent",
    "onDestroy": "iScrollEvent",
    "onZoomStart": "iScrollEvent",
    "onZoom": "iScrollEvent",
    "onZoomEnd": "iScrollEvent"
  },
  "iScroll": {
    "!type": "fn(element: string, options?: iScrollOptions)",
    "prototype": {
      "destroy": "fn()",
      "refresh": "fn()",
      "scrollTo": "fn(x: number, y: number, time?: number, relative?: bool)",
      "scrollToElement": "fn(element: string, time?: number)",
      "scrollToPage": "fn(pageX: number, pageY: number, time?: number)",
      "disable": "fn()",
      "enable": "fn()",
      "stop": "fn()",
      "zoom": "fn(x: number, y: number, scale: number, time?: number)",
      "isReady": "fn() -> bool"
    }
  },
  "!name": "iscroll.d.ts"
}
