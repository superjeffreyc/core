{
  "GoogleAppsScript": {
    "Sites": {
      "Attachment": {
        "deleteAttachment": "fn()",
        "getAs": "fn(contentType: string) -> Base.Blob",
        "getAttachmentType": "fn() -> AttachmentType",
        "getBlob": "fn() -> Base.Blob",
        "getContentType": "fn() -> string",
        "getDatePublished": "fn() -> Date",
        "getDescription": "fn() -> string",
        "getLastUpdated": "fn() -> Date",
        "getParent": "fn() -> Page",
        "getTitle": "fn() -> string",
        "getUrl": "fn() -> string",
        "setContentType": "fn(contentType: string) -> Attachment",
        "setDescription": "fn(description: string) -> Attachment",
        "setFrom": "fn(blob: Base.BlobSource) -> Attachment",
        "setParent": "fn(parent: Page) -> Attachment",
        "setTitle": "fn(title: string) -> Attachment",
        "setUrl": "fn(url: string) -> Attachment"
      },
      "AttachmentType": "number",
      "Column": {
        "deleteColumn": "fn()",
        "getName": "fn() -> string",
        "getParent": "fn() -> Page",
        "setName": "fn(name: string) -> Column"
      },
      "Comment": {
        "deleteComment": "fn()",
        "getAuthorEmail": "fn() -> string",
        "getAuthorName": "fn() -> string",
        "getContent": "fn() -> string",
        "getDatePublished": "fn() -> Date",
        "getLastUpdated": "fn() -> Date",
        "getParent": "fn() -> Page",
        "setContent": "fn(content: string) -> Comment",
        "setParent": "fn(parent: Page) -> Comment"
      },
      "ListItem": {
        "deleteListItem": "fn()",
        "getDatePublished": "fn() -> Date",
        "getLastUpdated": "fn() -> Date",
        "getParent": "fn() -> Page",
        "getValueByIndex": "fn(index: Integer) -> string",
        "getValueByName": "fn(name: string) -> string",
        "setParent": "fn(parent: Page) -> ListItem",
        "setValueByIndex": "fn(index: Integer, value: string) -> ListItem",
        "setValueByName": "fn(name: string, value: string) -> ListItem"
      },
      "Page": {
        "addColumn": "fn(name: string) -> Column",
        "addHostedAttachment": "fn(blob: Base.BlobSource) -> Attachment",
        "addListItem": "fn(values: [String]) -> ListItem",
        "addWebAttachment": "fn(title: string, description: string, url: string) -> Attachment",
        "createAnnouncement": "fn(title: string, html: string) -> Page",
        "createAnnouncementsPage": "fn(title: string, name: string, html: string) -> Page",
        "createFileCabinetPage": "fn(title: string, name: string, html: string) -> Page",
        "createListPage": "fn(title: string, name: string, html: string, columnNames: [String]) -> Page",
        "createPageFromTemplate": "fn(title: string, name: string, template: Page) -> Page",
        "createWebPage": "fn(title: string, name: string, html: string) -> Page",
        "deletePage": "fn()",
        "getAllDescendants": "fn() -> [Page]",
        "getAnnouncements": "fn() -> [Page]",
        "getAttachments": "fn() -> [Attachment]",
        "getAuthors": "fn() -> [String]",
        "getChildByName": "fn(name: string) -> Page",
        "getChildren": "fn() -> [Page]",
        "getColumns": "fn() -> [Column]",
        "getComments": "fn() -> [Comment]",
        "getDatePublished": "fn() -> Date",
        "getHtmlContent": "fn() -> string",
        "getIsDraft": "fn() -> bool",
        "getLastEdited": "fn() -> Date",
        "getLastUpdated": "fn() -> Date",
        "getListItems": "fn() -> [ListItem]",
        "getName": "fn() -> string",
        "getPageType": "fn() -> PageType",
        "getParent": "fn() -> Page",
        "getTextContent": "fn() -> string",
        "getTitle": "fn() -> string",
        "getUrl": "fn() -> string",
        "isDeleted": "fn() -> bool",
        "isTemplate": "fn() -> bool",
        "publishAsTemplate": "fn(name: string) -> Page",
        "search": "fn(query: string) -> [Page]",
        "setHtmlContent": "fn(html: string) -> Page",
        "setIsDraft": "fn(draft: bool) -> Page",
        "setName": "fn(name: string) -> Page",
        "setParent": "fn(parent: Page) -> Page",
        "setTitle": "fn(title: string) -> Page",
        "addComment": "fn(content: string) -> Comment",
        "getPageName": "fn() -> string",
        "getSelfLink": "fn() -> string"
      },
      "PageType": "number",
      "Site": {
        "addEditor": "fn(emailAddress: string) -> Site",
        "addEditors": "fn(emailAddresses: [String]) -> Site",
        "addOwner": "fn(email: string) -> Site",
        "addViewer": "fn(emailAddress: string) -> Site",
        "addViewers": "fn(emailAddresses: [String]) -> Site",
        "createAnnouncementsPage": "fn(title: string, name: string, html: string) -> Page",
        "createFileCabinetPage": "fn(title: string, name: string, html: string) -> Page",
        "createListPage": "fn(title: string, name: string, html: string, columnNames: [String]) -> Page",
        "createPageFromTemplate": "fn(title: string, name: string, template: Page) -> Page",
        "createWebPage": "fn(title: string, name: string, html: string) -> Page",
        "getAllDescendants": "fn() -> [Page]",
        "getChildByName": "fn(name: string) -> Page",
        "getChildren": "fn() -> [Page]",
        "getEditors": "fn() -> [Base.User]",
        "getName": "fn() -> string",
        "getOwners": "fn() -> [Base.User]",
        "getSummary": "fn() -> string",
        "getTemplates": "fn() -> [Page]",
        "getTheme": "fn() -> string",
        "getTitle": "fn() -> string",
        "getUrl": "fn() -> string",
        "getViewers": "fn() -> [Base.User]",
        "removeEditor": "fn(emailAddress: string) -> Site",
        "removeOwner": "fn(email: string) -> Site",
        "removeViewer": "fn(emailAddress: string) -> Site",
        "search": "fn(query: string) -> [Page]",
        "setSummary": "fn(summary: string) -> Site",
        "setTheme": "fn(theme: string) -> Site",
        "setTitle": "fn(title: string) -> Site",
        "addCollaborator": "fn(email: string) -> Site",
        "createAnnouncement": "fn(title: string, html: string, parent: Page) -> Page",
        "createComment": "fn(inReplyTo: string, html: string, parent: Page) -> Comment",
        "createListItem": "fn(html: string, columnNames: [String], values: [String], parent: Page) -> ListItem",
        "createWebAttachment": "fn(title: string, url: string, parent: Page) -> Attachment",
        "deleteSite": "fn()",
        "getAnnouncements": "fn() -> [Page]",
        "getAnnouncementsPages": "fn() -> [Page]",
        "getAttachments": "fn() -> [Attachment]",
        "getCollaborators": "fn() -> [Base.User]",
        "getComments": "fn() -> [Comment]",
        "getFileCabinetPages": "fn() -> [Page]",
        "getListItems": "fn() -> [ListItem]",
        "getListPages": "fn() -> [Page]",
        "getSelfLink": "fn() -> string",
        "getSiteName": "fn() -> string",
        "getWebAttachments": "fn() -> [Attachment]",
        "getWebPages": "fn() -> [Page]",
        "removeCollaborator": "fn(email: string) -> Site"
      },
      "SitesApp": {
        "AttachmentType": "AttachmentType",
        "PageType": "PageType",
        "copySite": "fn(domain: string, name: string, title: string, summary: string, site: Site) -> Site",
        "createSite": "fn(domain: string, name: string, title: string, summary: string) -> Site",
        "getActivePage": "fn() -> Page",
        "getActiveSite": "fn() -> Site",
        "getAllSites": "fn(domain: string) -> [Site]",
        "getPageByUrl": "fn(url: string) -> Page",
        "getSite": "fn(name: string) -> Site",
        "getSiteByUrl": "fn(url: string) -> Site",
        "getSites": "fn() -> [Site]"
      }
    }
  },
  "SitesApp": "GoogleAppsScript.Sites.SitesApp",
  "!name": "google-apps-script.sites.d.ts"
}
