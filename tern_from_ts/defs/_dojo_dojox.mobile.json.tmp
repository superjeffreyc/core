{
  "dojox": {
    "mobile": {
      "_ComboBoxMenu": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "selected": "HTMLElement",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "buildRendering": "fn()",
          "clearResultList": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "createOptions": "fn(results: ?, options: ?, labelFunc: ?)",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn()",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getHighlightedOption": "fn() -> ?",
          "getParent": "fn() -> ?",
          "highlightFirstOption": "fn()",
          "highlightLastOption": "fn()",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "selectFirstNode": "fn()",
          "selectLastNode": "fn()",
          "selectNextNode": "fn()",
          "selectPreviousNode": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onChange": "fn(direction: number)",
          "onClick": "fn(node: HTMLElement)",
          "onClose": "fn()",
          "onDeselect": "fn(node: HTMLElement)",
          "onFocus": "fn()",
          "onOpen": "fn()",
          "onPage": "fn(direction: number)",
          "onSelect": "fn(node: HTMLElement)"
        }
      },
      "_ContentPaneMixin": {
        "!type": "fn()",
        "prototype": {
          "content": "string",
          "executeScripts": "bool",
          "href": "string",
          "lazy": "string",
          "parseOnLoad": "bool",
          "prog": "bool",
          "errorHandler": "fn(err: ?)",
          "execScript": "fn(html: String) -> ?",
          "load": "fn()",
          "loadHandler": "fn(response: String)",
          "onLoad": "fn() -> bool"
        }
      },
      "_DataMixin": {
        "!type": "fn()",
        "prototype": {
          "query": "Object",
          "queryOptions": "Object",
          "store": "Object",
          "refresh": "fn() -> ?",
          "setQuery": "fn(query: dojo.data.api.Request, queryOptions: Object) -> ?",
          "setStore": "fn(store: dojo.data.api.Read, query: dojo.data.api.Request, queryOptions: Object) -> ?"
        }
      },
      "_DataListMixin": {
        "!type": "fn()",
        "prototype": {
          "append": "bool",
          "itemMap": "Object",
          "query": "Object",
          "queryOptions": "Object",
          "store": "Object",
          "buildRendering": "fn()",
          "createListItem": "fn(item: Object) -> ?",
          "generateList": "fn(items: [?], dataObject: Object)",
          "itemRenderer": "fn()",
          "refresh": "fn() -> ?",
          "setQuery": "fn(query: dojo.data.api.Request, queryOptions: Object) -> ?",
          "setStore": "fn(store: dojo.data.api.Read, query: dojo.data.api.Request, queryOptions: Object) -> ?",
          "onComplete": "fn(items: [?], request: Object)",
          "onDelete": "fn(deletedItem: Object)",
          "onError": "fn(errorData: Object, request: Object)",
          "onNew": "fn(newItem: Object, parentInfo: Object)",
          "onSet": "fn(item: Object, attribute: String, oldValue: Object, newValue: Object)",
          "onStoreClose": "fn(request: Object)"
        }
      },
      "_DatePickerMixin": {
        "!type": "fn()",
        "prototype": {
          "dayPattern": "string",
          "monthPattern": "string",
          "value": "string",
          "yearPattern": "string",
          "initSlots": "fn()",
          "reorderSlots": "fn()",
          "reset": "fn()",
          "onDaySet": "fn()",
          "onMonthSet": "fn()",
          "onYearSet": "fn()"
        }
      },
      "_EditableIconMixin": {
        "!type": "fn()",
        "prototype": {
          "deleteIconForEdit": "string",
          "threshold": "number",
          "deleteIconClicked": "fn(e: Event)",
          "deleteItem": "fn(item: dijit._WidgetBase)",
          "destroy": "fn()",
          "endEdit": "fn()",
          "moveChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "moveChildWithAnimation": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "removeChildWithAnimation": "fn(widget: dijit._WidgetBase)",
          "scaleItem": "fn(widget: dijit._WidgetBase, ratio: number)",
          "startEdit": "fn()",
          "onDeleteItem": "fn(item: dijit._WidgetBase)",
          "onEndEdit": "fn()",
          "onMoveItem": "fn(item: dijit._WidgetBase, from: number, to: number)",
          "onStartEdit": "fn()"
        }
      },
      "_ExecScriptMixin": {
        "!type": "fn()",
        "prototype": {
          "execScript": "fn(html: String) -> ?"
        }
      },
      "_EditableListMixin": {
        "!type": "fn()",
        "prototype": {
          "deleteIconForEdit": "string",
          "isEditing": "bool",
          "rightIconForEdit": "string",
          "destroy": "fn()",
          "endEdit": "fn()",
          "startEdit": "fn()",
          "onClick": "fn(e: Event)",
          "onDeleteItem": "fn(item: dijit._WidgetBase)",
          "onEndEdit": "fn()",
          "onMoveItem": "fn(item: dijit._WidgetBase, from: number, to: number)",
          "onStartEdit": "fn()"
        }
      },
      "_IconItemPane": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret16",
          "baseClass": "string",
          "class": "string",
          "closeIcon": "string",
          "closeIconRole": "string",
          "closeIconTitle": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "iconPos": "string",
          "id": "string",
          "label": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tabIndex": "string",
          "title": "string",
          "tooltip": "string",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "hide": "fn()",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "isOpen": "fn(e: ?) -> bool",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "resize": "fn()",
          "show": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "_ListTouchMixin": {
        "!type": "fn()",
        "prototype": {
          "selected": "HTMLElement",
          "postCreate": "fn()",
          "selectFirstNode": "fn()",
          "selectLastNode": "fn()",
          "selectNextNode": "fn()",
          "selectPreviousNode": "fn()"
        }
      },
      "_ItemBase": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "alt": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret37",
          "attributeMap": "Object",
          "back": "bool",
          "baseClass": "string",
          "callback": "Function",
          "class": "string",
          "clickable": "bool",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "href": "string",
          "hrefTarget": "string",
          "icon": "string",
          "iconPos": "string",
          "id": "string",
          "label": "string",
          "lang": "string",
          "moveTo": "string",
          "ownerDocument": "Object",
          "paramsToInherit": "string",
          "scene": "string",
          "selected": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tabIndex": "string",
          "title": "string",
          "toggle": "bool",
          "tooltip": "string",
          "transition": "string",
          "transitionDir": "number",
          "transitionOptions": "Object",
          "url": "string",
          "urlTarget": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "cancel": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defaultClickAction": "fn(e: Event)",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "getTransOpts": "fn() -> String",
          "handleSelection": "fn(e: Event)",
          "hasChildren": "fn() -> bool",
          "inheritParams": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "makeTransition": "fn(e: Event)",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "setTransitionPos": "fn(e: ?)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "transitionTo": "fn(moveTo: String, href: String, url: String, scene: String)",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "userClickAction": "fn(e: Event)",
          "onBlur": "fn()",
          "onFocus": "fn()",
          "onTouchStart": "fn(e: Event)"
        }
      },
      "_PickerBase": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret72",
          "baseClass": "string",
          "class": "string",
          "colors": "[?]",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "slotClasses": "[?]",
          "slotOrder": "[?]",
          "slotProps": "[?]",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "values": "[?]",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "getSlots": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "reset": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "_StoreListMixin": {
        "!type": "fn()",
        "prototype": {
          "append": "bool",
          "childrenProperty": "string",
          "itemMap": "Object",
          "labelProperty": "string",
          "query": "Object",
          "queryOptions": "Object",
          "store": "Object",
          "buildRendering": "fn()",
          "createListItem": "fn(item: Object) -> ?",
          "destroy": "fn()",
          "generateList": "fn(items: [?])",
          "itemRenderer": "fn()",
          "refresh": "fn() -> ?",
          "setQuery": "fn(query: String, queryOptions: Object) -> ?",
          "setStore": "fn(store: dojo.store.api.Store, query: String, queryOptions: Object) -> ?",
          "onAdd": "fn(item: Object, insertedInto: number)",
          "onComplete": "fn(items: [?])",
          "onDelete": "fn(item: Object, removedFrom: number)",
          "onError": "fn(errorData: Object)",
          "onUpdate": "fn(item: Object, insertedInto: number)"
        }
      },
      "_ScrollableMixin": {
        "!type": "fn()",
        "prototype": {
          "allowNestedScrolls": "bool",
          "appBars": "bool",
          "constraint": "bool",
          "dirLock": "bool",
          "disableFlashScrollBar": "bool",
          "fadeScrollBar": "bool",
          "fixedFooter": "string",
          "fixedFooterHeight": "number",
          "fixedHeader": "string",
          "fixedHeaderHeight": "number",
          "height": "string",
          "isLocalFooter": "bool",
          "propagatable": "bool",
          "scrollableParams": "Object",
          "scrollBar": "bool",
          "scrollDir": "string",
          "scrollType": "number",
          "threshold": "number",
          "touchNode": "HTMLElement",
          "weight": "number",
          "abort": "fn()",
          "addCover": "fn()",
          "adjustDestination": "fn(to: Object, pos: Object, dim: Object) -> bool",
          "calcScrollBarPos": "fn(to: Object) -> Object",
          "calcSpeed": "fn(distance: number, time: number) -> number",
          "checkFixedBar": "fn(node: HTMLElement, local: bool) -> ?",
          "cleanup": "fn()",
          "createMask": "fn()",
          "destroy": "fn()",
          "findAppBars": "fn()",
          "findDisp": "fn(node: HTMLElement) -> ?",
          "flashScrollBar": "fn()",
          "getDim": "fn() -> Object",
          "getPos": "fn() -> Object",
          "getScreenSize": "fn() -> Object",
          "getSpeed": "fn() -> Object",
          "hideScrollBar": "fn()",
          "init": "fn(params: Object)",
          "isFormElement": "fn(node: HTMLElement) -> bool",
          "isTopLevel": "fn() -> bool",
          "makeTranslateStr": "fn(to: Object) -> String",
          "removeCover": "fn()",
          "resetScrollBar": "fn()",
          "resize": "fn(e: ?)",
          "scrollIntoView": "fn(node: HTMLElement, alignWithTop: bool, duration: number)",
          "scrollScrollBarTo": "fn(to: Object)",
          "scrollTo": "fn(to: Object, doNotMoveScrollBar: bool, node: HTMLElement)",
          "setKeyframes": "fn(from: Object, to: Object, idx: number)",
          "setSelectable": "fn(node: HTMLElement, selectable: bool)",
          "showScrollBar": "fn()",
          "slideScrollBarTo": "fn(to: Object, duration: number, easing: String)",
          "slideTo": "fn(to: Object, duration: number, easing: String)",
          "startup": "fn()",
          "stopAnimation": "fn()",
          "onAfterScroll": "fn(e: Event)",
          "onBeforeScroll": "fn(e: Event) -> bool",
          "onFlickAnimationEnd": "fn(e: ?)",
          "onFlickAnimationStart": "fn(e: ?)",
          "onTouchEnd": "fn(e: Event)",
          "onTouchMove": "fn(e: ?)",
          "onTouchStart": "fn(e: ?)"
        }
      },
      "_StoreMixin": {
        "!type": "fn()",
        "prototype": {
          "childrenProperty": "string",
          "labelProperty": "string",
          "query": "Object",
          "queryOptions": "Object",
          "store": "Object",
          "destroy": "fn()",
          "refresh": "fn() -> ?",
          "setQuery": "fn(query: String, queryOptions: Object) -> ?",
          "setStore": "fn(store: dojo.store.api.Store, query: String, queryOptions: Object) -> ?",
          "onAdd": "fn(item: ?, insertedInto: ?)",
          "onComplete": "fn(items: ?)",
          "onDelete": "fn(item: ?, removedFrom: ?)",
          "onError": "fn(errorData: ?)",
          "onUpdate": "fn(item: ?, insertedInto: ?)"
        }
      },
      "_TimePickerMixin": {
        "!type": "fn()",
        "prototype": {
          "date": "Date",
          "reset": "fn()"
        }
      },
      "Accordion": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "animation": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret92",
          "attributeMap": "Object",
          "baseClass": "string",
          "ChildWidgetProperties": "Object",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "duration": "number",
          "fixedHeight": "bool",
          "focused": "bool",
          "iconBase": "string",
          "iconPos": "string",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "roundRect": "bool",
          "singleOpen": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "collapse": "fn(pane: dijit._WidgetBase, noAnimation: bool)",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "deselect": "fn(pane: dijit._WidgetBase)",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "expand": "fn(pane: dijit._WidgetBase, noAnimation: bool)",
          "getChildren": "fn() -> ?",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "getSelectedPanes": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "resize": "fn()",
          "select": "fn(pane: dijit._WidgetBase)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onFocus": "fn()"
        },
        "ChildWidgetProperties": {
          "alt": "string",
          "icon1": "string",
          "icon2": "string",
          "iconPos1": "string",
          "iconPos2": "string",
          "label": "string",
          "lazy": "bool",
          "selected": "bool"
        }
      },
      "Badge": {
        "!type": "fn(params?: Object, node?: HTMLElement)",
        "prototype": {
          "className": "string",
          "fontSize": "number",
          "value": "string",
          "getValue": "fn() -> String",
          "setValue": "fn(value: String)"
        }
      },
      "Audio": {
        "!type": "fn()",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret115",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "height": "string",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "source": "[?]",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "width": "string",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "Button": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "alt": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret133",
          "aria-label": "string",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "disabled": "bool",
          "domNode": "HTMLElement",
          "duration": "number",
          "focused": "bool",
          "id": "string",
          "intermediateChanges": "bool",
          "label": "string",
          "lang": "string",
          "name": "string",
          "ownerDocument": "Object",
          "scrollOnFocus": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tabIndex": "string",
          "title": "string",
          "tooltip": "string",
          "type": "string",
          "value": "string",
          "buildRendering": "fn()",
          "create": "fn()",
          "compare": "fn(val1: ?, val2: ?) -> number",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "focus": "fn()",
          "getChildren": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> bool",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onClick": "fn(e: Event) -> bool",
          "onFocus": "fn()"
        }
      },
      "CarouselItem": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "alt": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret159",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "footerText": "string",
          "headerText": "string",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "src": "string",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "resize": "fn(size: ?)",
          "select": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "Carousel": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret178",
          "baseClass": "string",
          "ChildSwapViewProperties": "Object",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "height": "string",
          "id": "string",
          "itemWidth": "number",
          "lang": "string",
          "navButton": "bool",
          "numVisible": "number",
          "ownerDocument": "Object",
          "pageIndicator": "bool",
          "selectable": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "fillPages": "fn()",
          "getChildren": "fn() -> [?]",
          "getIndexByItemWidget": "fn(w: dijit._WidgetBase) -> number",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getItemWidgetByIndex": "fn(index: number) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getParentView": "fn(node: HTMLElement) -> ?",
          "getPreviousSibling": "fn() -> ?",
          "handleViewChanged": "fn(view: ?)",
          "hasChildren": "fn() -> bool",
          "instantiateView": "fn(view: ?)",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "resize": "fn()",
          "resizeItems": "fn()",
          "select": "fn(itemWidget: dijit._WidgetBase)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onClick": "fn(e: Event)",
          "onComplete": "fn(items: [?])",
          "onDelete": "fn(item: Object, removedFrom: number)",
          "onError": "fn(errText: String)",
          "onFocus": "fn()",
          "onNew": "fn(newItem: ?, parentInfo: ?)",
          "onNextBtnClick": "fn(e: Event)",
          "onPrevBtnClick": "fn(e: Event)",
          "onSet": "fn(item: ?, attribute: ?, oldValue: ?, newValue: ?)",
          "onStoreClose": "fn(request: ?)",
          "onUpdate": "fn(item: Object, insertedInto: number)"
        },
        "ChildSwapViewProperties": {
          "lazy": "bool"
        }
      },
      "CheckBox": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "alt": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret200",
          "aria-label": "string",
          "attributeMap": "Object",
          "baseClass": "string",
          "checked": "bool",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "disabled": "bool",
          "domNode": "HTMLElement",
          "duration": "number",
          "focused": "bool",
          "id": "string",
          "intermediateChanges": "bool",
          "label": "string",
          "lang": "string",
          "name": "string",
          "ownerDocument": "Object",
          "readOnly": "bool",
          "scrollOnFocus": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tabIndex": "string",
          "title": "string",
          "tooltip": "string",
          "type": "string",
          "value": "string",
          "buildRendering": "fn()",
          "compare": "fn(val1: ?, val2: ?) -> number",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "focus": "fn()",
          "getChildren": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> bool",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "reset": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onClick": "fn(e: Event) -> bool",
          "onFocus": "fn()"
        }
      },
      "ComboBox": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "alt": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret228",
          "aria-label": "string",
          "attributeMap": "Object",
          "autoComplete": "bool",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "disabled": "bool",
          "displayedValue": "string",
          "domNode": "HTMLElement",
          "dropDown": "Object",
          "dropDownClass": "string",
          "dropDownPosition": "Object",
          "fetchProperties": "Object",
          "focused": "bool",
          "highlightMatch": "string",
          "id": "string",
          "ignoreCase": "bool",
          "intermediateChanges": "bool",
          "item": "Object",
          "labelAttr": "Object",
          "labelType": "string",
          "lang": "string",
          "lowercase": "bool",
          "maxHeight": "number",
          "maxLength": "string",
          "name": "string",
          "ownerDocument": "Object",
          "pageSize": "number",
          "placeHolder": "string",
          "propercase": "bool",
          "query": "Object",
          "queryExpr": "string",
          "readOnly": "bool",
          "scrollOnFocus": "bool",
          "searchAttr": "string",
          "searchDelay": "number",
          "selectOnClick": "bool",
          "srcNodeRef": "HTMLElement",
          "store": "Object",
          "style": "string",
          "tabIndex": "string",
          "title": "string",
          "tooltip": "string",
          "trim": "bool",
          "type": "string",
          "uppercase": "bool",
          "value": "string",
          "buildRendering": "fn()",
          "closeDropDown": "fn()",
          "compare": "fn(val1: ?, val2: ?) -> number",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn()",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "doHighlight": "fn(label: String, find: String) -> ?",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "filter": "fn(val: ?) -> ?",
          "focus": "fn()",
          "format": "fn(value: String, constraints: Object) -> String",
          "getChildren": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "isLoaded": "fn() -> bool",
          "loadDropDown": "fn(callback: Function)",
          "on": "fn(type: String, func: Function) -> ?",
          "openDropDown": "fn() -> ?",
          "own": "fn() -> ?",
          "parse": "fn(value: String, constraints: Object) -> String",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "reset": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "undo": "fn()",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onFocus": "fn()",
          "onInput": "fn(e: ?)",
          "onSearch": "fn(results: Object, query: Object, options: Object)"
        }
      },
      "Container": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret278",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "resize": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "ContentPane": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret293",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "content": "string",
          "dir": "string",
          "domNode": "HTMLElement",
          "executeScripts": "bool",
          "focused": "bool",
          "href": "string",
          "id": "string",
          "lang": "string",
          "lazy": "string",
          "ownerDocument": "Object",
          "parseOnLoad": "bool",
          "prog": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "errorHandler": "fn(err: ?)",
          "execScript": "fn(html: String) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "load": "fn()",
          "loadHandler": "fn(response: String)",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "resize": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onFocus": "fn()",
          "onLoad": "fn() -> bool"
        }
      },
      "DataCarousel": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret314",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "height": "string",
          "id": "string",
          "itemWidth": "number",
          "lang": "string",
          "navButton": "bool",
          "numVisible": "number",
          "ownerDocument": "Object",
          "pageIndicator": "bool",
          "query": "Object",
          "queryOptions": "Object",
          "selectable": "bool",
          "srcNodeRef": "HTMLElement",
          "store": "Object",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "fillPages": "fn()",
          "getChildren": "fn() -> [?]",
          "getIndexByItemWidget": "fn(w: dijit._WidgetBase) -> number",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getItemWidgetByIndex": "fn(index: number) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getParentView": "fn(node: HTMLElement) -> ?",
          "getPreviousSibling": "fn() -> ?",
          "handleViewChanged": "fn(view: ?)",
          "hasChildren": "fn() -> bool",
          "instantiateView": "fn(view: ?)",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "refresh": "fn() -> ?",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "resize": "fn()",
          "resizeItems": "fn()",
          "select": "fn(itemWidget: dijit._WidgetBase)",
          "setQuery": "fn(query: dojo.data.api.Request, queryOptions: Object) -> ?",
          "setStore": "fn(store: dojo.data.api.Read, query: dojo.data.api.Request, queryOptions: Object) -> ?",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onClick": "fn(e: Event)",
          "onComplete": "fn(items: [?])",
          "onDelete": "fn(item: Object, removedFrom: number)",
          "onError": "fn(errText: String)",
          "onFocus": "fn()",
          "onNew": "fn(newItem: ?, parentInfo: ?)",
          "onNextBtnClick": "fn(e: Event)",
          "onPrevBtnClick": "fn(e: Event)",
          "onSet": "fn(item: ?, attribute: ?, oldValue: ?, newValue: ?)",
          "onStoreClose": "fn(request: ?)",
          "onUpdate": "fn(item: Object, insertedInto: number)"
        }
      },
      "EdgeToEdgeCategory": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret338",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "label": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tag": "string",
          "title": "string",
          "tooltip": "string",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "EdgeToEdgeList": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret355",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "editable": "bool",
          "editableMixinClass": "string",
          "filterBoxClass": "string",
          "focused": "bool",
          "iconBase": "string",
          "iconPos": "string",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "select": "string",
          "srcNodeRef": "HTMLElement",
          "stateful": "bool",
          "style": "string",
          "syncWithViews": "bool",
          "tag": "string",
          "title": "string",
          "tooltip": "string",
          "transition": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "deselectAll": "fn()",
          "deselectItem": "fn(item: dojox.mobile.ListItem)",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "resize": "fn()",
          "selectItem": "fn(item: dojox.mobile.ListItem)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onCheckStateChanged": "fn(listItem: dijit._WidgetBase, newState: String)",
          "onFocus": "fn()"
        }
      },
      "EdgeToEdgeDataList": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "append": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret380",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "editable": "bool",
          "editableMixinClass": "string",
          "filterBoxClass": "string",
          "focused": "bool",
          "iconBase": "string",
          "iconPos": "string",
          "id": "string",
          "itemMap": "Object",
          "lang": "string",
          "ownerDocument": "Object",
          "query": "Object",
          "queryOptions": "Object",
          "select": "string",
          "srcNodeRef": "HTMLElement",
          "stateful": "bool",
          "store": "Object",
          "style": "string",
          "syncWithViews": "bool",
          "tag": "string",
          "title": "string",
          "tooltip": "string",
          "transition": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "createListItem": "fn(item: Object) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "deselectAll": "fn()",
          "deselectItem": "fn(item: dojox.mobile.ListItem)",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "generateList": "fn(items: [?], dataObject: Object)",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "itemRenderer": "fn()",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "refresh": "fn() -> ?",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "resize": "fn()",
          "selectItem": "fn(item: dojox.mobile.ListItem)",
          "setQuery": "fn(query: dojo.data.api.Request, queryOptions: Object) -> ?",
          "setStore": "fn(store: dojo.data.api.Read, query: dojo.data.api.Request, queryOptions: Object) -> ?",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onCheckStateChanged": "fn(listItem: dijit._WidgetBase, newState: String)",
          "onComplete": "fn(items: [?], request: Object)",
          "onDelete": "fn(deletedItem: Object)",
          "onError": "fn(errorData: Object, request: Object)",
          "onFocus": "fn()",
          "onNew": "fn(newItem: Object, parentInfo: Object)",
          "onSet": "fn(item: Object, attribute: String, oldValue: Object, newValue: Object)",
          "onStoreClose": "fn(request: Object)"
        }
      },
      "EdgeToEdgeStoreList": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "append": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret410",
          "attributeMap": "Object",
          "baseClass": "string",
          "childrenProperty": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "editable": "bool",
          "editableMixinClass": "string",
          "filterBoxClass": "string",
          "focused": "bool",
          "iconBase": "string",
          "iconPos": "string",
          "id": "string",
          "itemMap": "Object",
          "labelProperty": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "query": "Object",
          "queryOptions": "Object",
          "select": "string",
          "srcNodeRef": "HTMLElement",
          "stateful": "bool",
          "store": "Object",
          "style": "string",
          "syncWithViews": "bool",
          "tag": "string",
          "title": "string",
          "tooltip": "string",
          "transition": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "createListItem": "fn(item: Object) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "deselectAll": "fn()",
          "deselectItem": "fn(item: dojox.mobile.ListItem)",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "generateList": "fn(items: [?])",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "itemRenderer": "fn()",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "refresh": "fn() -> ?",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "resize": "fn()",
          "selectItem": "fn(item: dojox.mobile.ListItem)",
          "setQuery": "fn(query: String, queryOptions: Object) -> ?",
          "setStore": "fn(store: dojo.store.api.Store, query: String, queryOptions: Object) -> ?",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onAdd": "fn(item: Object, insertedInto: number)",
          "onBlur": "fn()",
          "onCheckStateChanged": "fn(listItem: dijit._WidgetBase, newState: String)",
          "onComplete": "fn(items: [?])",
          "onDelete": "fn(item: Object, removedFrom: number)",
          "onError": "fn(errorData: Object)",
          "onFocus": "fn()",
          "onUpdate": "fn(item: Object, insertedInto: number)"
        }
      },
      "ExpandingTextArea": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "alt": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret442",
          "aria-label": "string",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "disabled": "bool",
          "displayedValue": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "intermediateChanges": "bool",
          "lang": "string",
          "lowercase": "bool",
          "maxLength": "string",
          "name": "string",
          "ownerDocument": "Object",
          "placeHolder": "string",
          "propercase": "bool",
          "readOnly": "bool",
          "scrollOnFocus": "bool",
          "selectOnClick": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tabIndex": "string",
          "title": "string",
          "tooltip": "string",
          "trim": "bool",
          "type": "string",
          "uppercase": "bool",
          "value": "string",
          "buildRendering": "fn()",
          "compare": "fn(val1: ?, val2: ?) -> number",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "filter": "fn(val: ?) -> ?",
          "focus": "fn()",
          "format": "fn(value: String, constraints: Object) -> String",
          "getChildren": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "parse": "fn(value: String, constraints: Object) -> String",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "reset": "fn()",
          "resize": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "undo": "fn()",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onFocus": "fn()",
          "onInput": "fn(event: ?)"
        }
      },
      "FilteredListMixin": {
        "!type": "fn()",
        "prototype": {
          "filterBoxRef": "string",
          "filterBoxVisible": "bool",
          "placeHolder": "string",
          "destroy": "fn(preserveDom?: bool)",
          "getFilterBox": "fn() -> ?",
          "getScrollableView": "fn() -> ?",
          "startup": "fn()",
          "onFilter": "fn(results: ?, query: ?, options: ?)"
        }
      },
      "FixedSplitter": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret475",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "lang": "string",
          "orientation": "string",
          "ownerDocument": "Object",
          "screenSizeAware": "bool",
          "screenSizeAwareClass": "string",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "variablePane": "number",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "resize": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "FixedSplitterPane": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret494",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "resize": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "FormLayout": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret509",
          "baseClass": "string",
          "class": "string",
          "columns": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "rightAlign": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "resize": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "GridLayout": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret526",
          "baseClass": "string",
          "childItemClass": "string",
          "class": "string",
          "cols": "number",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "iconBase": "string",
          "iconPos": "string",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "selectOne": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tag": "string",
          "title": "string",
          "tooltip": "string",
          "transition": "string",
          "addChild": "fn(widget: ?, insertIndex: number)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "hide": "fn()",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "refresh": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "Heading": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret548",
          "back": "string",
          "baseClass": "string",
          "busy": "bool",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "href": "string",
          "iconBase": "string",
          "id": "string",
          "label": "string",
          "lang": "string",
          "moveTo": "string",
          "ownerDocument": "Object",
          "progStyle": "string",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tag": "string",
          "title": "string",
          "tooltip": "string",
          "transition": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "resize": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "Icon": {
        "!type": "fn(args?: Object, node?: HTMLElement)",
        "prototype": {
          "alt": "string",
          "icon": "string",
          "iconPos": "string",
          "tag": "string"
        }
      },
      "IconContainer": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret572",
          "back": "string",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "defaultIcon": "string",
          "dir": "string",
          "domNode": "HTMLElement",
          "editable": "bool",
          "editableMixinClass": "string",
          "focused": "bool",
          "iconBase": "string",
          "iconItemPaneClass": "string",
          "iconItemPaneContainerClass": "string",
          "iconItemPaneContainerProps": "Object",
          "iconItemPaneProps": "Object",
          "iconPos": "string",
          "id": "string",
          "label": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "pressedIconOpacity": "number",
          "single": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tag": "string",
          "title": "string",
          "tooltip": "string",
          "transition": "string",
          "addChild": "fn(widget: ?, insertIndex: number)",
          "buildRendering": "fn()",
          "closeAll": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "IconItem": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "alt": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret602",
          "attributeMap": "Object",
          "back": "bool",
          "badge": "string",
          "badgeClass": "string",
          "baseClass": "string",
          "callback": "Function",
          "class": "string",
          "clickable": "bool",
          "containerNode": "HTMLElement",
          "content": "string",
          "deletable": "bool",
          "deleteIcon": "string",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "href": "string",
          "hrefTarget": "string",
          "icon": "string",
          "iconPos": "string",
          "id": "string",
          "label": "string",
          "lang": "string",
          "lazy": "string",
          "moveTo": "string",
          "ownerDocument": "Object",
          "paramsToInherit": "string",
          "requires": "string",
          "scene": "string",
          "selected": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tabIndex": "string",
          "tag": "string",
          "timeout": "string",
          "title": "string",
          "toggle": "bool",
          "tooltip": "string",
          "transition": "string",
          "transitionDir": "number",
          "transitionOptions": "Object",
          "url": "string",
          "urlTarget": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "cancel": "fn()",
          "close": "fn(noAnimation: bool)",
          "closeIconClicked": "fn(e: Event)",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defaultClickAction": "fn(e: Event)",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn()",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "getTransOpts": "fn() -> String",
          "handleSelection": "fn(e: Event)",
          "hasChildren": "fn() -> bool",
          "highlight": "fn(timeout: number)",
          "inheritParams": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "isOpen": "fn(e: ?) -> ?",
          "makeTransition": "fn(e: Event)",
          "on": "fn(type: String, func: Function) -> ?",
          "open": "fn(e: ?)",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "scrollIntoView": "fn(node: HTMLElement)",
          "setTransitionPos": "fn(e: ?)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "transitionTo": "fn(moveTo: String, href: String, url: String, scene: String)",
          "unhighlight": "fn()",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "userClickAction": "fn(e: Event)",
          "onBlur": "fn()",
          "onClick": "fn(e: Event)",
          "onClose": "fn()",
          "onFocus": "fn()",
          "onOpen": "fn()",
          "onTouchStart": "fn(e: Event)"
        }
      },
      "IconMenu": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret646",
          "baseClass": "string",
          "childItemClass": "string",
          "class": "string",
          "cols": "number",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "iconBase": "string",
          "iconPos": "string",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "selectOne": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tag": "string",
          "title": "string",
          "tooltip": "string",
          "transition": "string",
          "addChild": "fn(widget: ?, insertIndex: number)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "hide": "fn()",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "refresh": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "IconMenuItem": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "alt": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret668",
          "attributeMap": "Object",
          "back": "bool",
          "baseClass": "string",
          "callback": "Function",
          "class": "string",
          "clickable": "bool",
          "closeOnAction": "bool",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "href": "string",
          "hrefTarget": "string",
          "icon": "string",
          "iconPos": "string",
          "id": "string",
          "label": "string",
          "lang": "string",
          "moveTo": "string",
          "ownerDocument": "Object",
          "paramsToInherit": "string",
          "scene": "string",
          "selColor": "string",
          "selected": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tabIndex": "string",
          "tag": "string",
          "title": "string",
          "toggle": "bool",
          "tooltip": "string",
          "transition": "string",
          "transitionDir": "number",
          "transitionOptions": "Object",
          "url": "string",
          "urlTarget": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "cancel": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defaultClickAction": "fn(e: Event)",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "getTransOpts": "fn() -> String",
          "handleSelection": "fn(e: Event)",
          "hasChildren": "fn() -> bool",
          "inheritParams": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "makeTransition": "fn(e: Event)",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "setTransitionPos": "fn(e: ?)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "transitionTo": "fn(moveTo: String, href: String, url: String, scene: String)",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "userClickAction": "fn(e: Event)",
          "onBlur": "fn()",
          "onClick": "fn(e: Event)",
          "onFocus": "fn()",
          "onTouchStart": "fn(e: Event)"
        }
      },
      "LongListMixin": {
        "!type": "fn()",
        "prototype": {
          "maxPages": "number",
          "pageSize": "number",
          "unloadPages": "number",
          "addChild": "fn(widget: dijit._Widget, insertIndex: number)",
          "generateList": "fn(items: [?])",
          "getChildren": "fn() -> ?",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "resize": "fn()",
          "startup": "fn()"
        }
      },
      "ListItem": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "alt": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret706",
          "anchorLabel": "bool",
          "arrowClass": "string",
          "attributeMap": "Object",
          "back": "bool",
          "baseClass": "string",
          "busy": "bool",
          "callback": "Function",
          "checkClass": "string",
          "checked": "bool",
          "ChildWidgetProperties": "Object",
          "class": "string",
          "clickable": "bool",
          "containerNode": "HTMLElement",
          "deleteIcon": "string",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "header": "bool",
          "href": "string",
          "hrefTarget": "string",
          "icon": "string",
          "iconPos": "string",
          "id": "string",
          "label": "string",
          "lang": "string",
          "moveTo": "string",
          "noArrow": "bool",
          "ownerDocument": "Object",
          "paramsToInherit": "string",
          "progStyle": "string",
          "rightIcon": "string",
          "rightIcon2": "string",
          "rightIcon2Title": "string",
          "rightIconTitle": "string",
          "rightText": "string",
          "scene": "string",
          "selected": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tabIndex": "string",
          "tag": "string",
          "title": "string",
          "toggle": "bool",
          "tooltip": "string",
          "transition": "string",
          "transitionDir": "number",
          "transitionOptions": "Object",
          "uncheckClass": "string",
          "url": "string",
          "urlTarget": "string",
          "variableHeight": "bool",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "cancel": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defaultClickAction": "fn(e: Event)",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "getTransOpts": "fn() -> String",
          "handleSelection": "fn(e: Event)",
          "hasChildren": "fn() -> bool",
          "inheritParams": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "layoutChildren": "fn()",
          "layoutVariableHeight": "fn()",
          "makeTransition": "fn(e: Event)",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "resize": "fn()",
          "setArrow": "fn()",
          "setTransitionPos": "fn(e: ?)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "transitionTo": "fn(moveTo: String, href: String, url: String, scene: String)",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "userClickAction": "fn(e: Event)",
          "onAnchorLabelClicked": "fn(e: ?)",
          "onBlur": "fn()",
          "onClick": "fn(e: Event)",
          "onFocus": "fn()",
          "onTouchStart": "fn(e: Event)"
        },
        "ChildWidgetProperties": {
          "layout": "string",
          "preventTouch": "bool"
        }
      },
      "Opener": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret759",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "lang": "string",
          "lazy": "string",
          "ownerDocument": "Object",
          "requires": "string",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn()",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "hide": "fn(val?: ?)",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "show": "fn(node: ?, positions: ?) -> ?",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn(e: Event) -> bool",
          "onFocus": "fn()",
          "onHide": "fn(node: HTMLElement, v: ?)",
          "onShow": "fn(node: HTMLElement)"
        }
      },
      "Overlay": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret776",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "hide": "fn()",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "show": "fn(aroundNode: HTMLElement) -> ?",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn(e?: Event)",
          "onFocus": "fn()"
        }
      },
      "PageIndicator": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret791",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "refId": "string",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "isView": "fn(node: ?) -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "reset": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onClick": "fn(e: Event)",
          "onFocus": "fn()"
        }
      },
      "Pane": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret807",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "resize": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "ProgressBar": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret822",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "label": "string",
          "lang": "string",
          "maximum": "number",
          "ownerDocument": "Object",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "value": "string",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onChange": "fn(percent: number)",
          "onFocus": "fn()"
        }
      },
      "ProgressIndicator": {
        "!type": "fn()",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret840",
          "baseClass": "string",
          "center": "bool",
          "class": "string",
          "colors": "Object",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "interval": "number",
          "lang": "string",
          "ownerDocument": "Object",
          "removeOnStop": "bool",
          "size": "number",
          "srcNodeRef": "HTMLElement",
          "startSpinning": "bool",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn()",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getInstance": "fn(props: ?) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "scale": "fn(size: number)",
          "setImage": "fn(file: String)",
          "start": "fn()",
          "startup": "fn()",
          "stop": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "Rating": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "alt": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret861",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "image": "string",
          "lang": "string",
          "numStars": "number",
          "ownerDocument": "Object",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "value": "number",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "RadioButton": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "alt": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret880",
          "aria-label": "string",
          "attributeMap": "Object",
          "baseClass": "string",
          "checked": "bool",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "disabled": "bool",
          "domNode": "HTMLElement",
          "duration": "number",
          "focused": "bool",
          "id": "string",
          "intermediateChanges": "bool",
          "label": "string",
          "lang": "string",
          "name": "string",
          "ownerDocument": "Object",
          "readOnly": "bool",
          "scrollOnFocus": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tabIndex": "string",
          "title": "string",
          "tooltip": "string",
          "type": "string",
          "value": "string",
          "buildRendering": "fn()",
          "compare": "fn(val1: ?, val2: ?) -> number",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "focus": "fn()",
          "getChildren": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> bool",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "reset": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onClick": "fn(e: Event) -> bool",
          "onFocus": "fn()"
        }
      },
      "RoundRect": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret908",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "shadow": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "resize": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "RoundRectCategory": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret924",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "label": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tag": "string",
          "title": "string",
          "tooltip": "string",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "RoundRectList": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret941",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "editable": "bool",
          "editableMixinClass": "string",
          "filterBoxClass": "string",
          "focused": "bool",
          "iconBase": "string",
          "iconPos": "string",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "select": "string",
          "srcNodeRef": "HTMLElement",
          "stateful": "bool",
          "style": "string",
          "syncWithViews": "bool",
          "tag": "string",
          "title": "string",
          "tooltip": "string",
          "transition": "string",
          "addChild": "fn(widget: ?, insertIndex: number)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "deselectAll": "fn()",
          "deselectItem": "fn(item: dojox.mobile.ListItem)",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "redrawBorders": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "resize": "fn()",
          "selectItem": "fn(item: dojox.mobile.ListItem)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onCheckStateChanged": "fn(listItem: dijit._WidgetBase, newState: String)",
          "onFocus": "fn()"
        }
      },
      "RoundRectDataList": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "append": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret966",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "editable": "bool",
          "editableMixinClass": "string",
          "filterBoxClass": "string",
          "focused": "bool",
          "iconBase": "string",
          "iconPos": "string",
          "id": "string",
          "itemMap": "Object",
          "lang": "string",
          "ownerDocument": "Object",
          "query": "Object",
          "queryOptions": "Object",
          "select": "string",
          "srcNodeRef": "HTMLElement",
          "stateful": "bool",
          "store": "Object",
          "style": "string",
          "syncWithViews": "bool",
          "tag": "string",
          "title": "string",
          "tooltip": "string",
          "transition": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "createListItem": "fn(item: Object) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "deselectAll": "fn()",
          "deselectItem": "fn(item: dojox.mobile.ListItem)",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "generateList": "fn(items: [?], dataObject: Object)",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "itemRenderer": "fn()",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "refresh": "fn() -> ?",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "resize": "fn()",
          "selectItem": "fn(item: dojox.mobile.ListItem)",
          "setQuery": "fn(query: dojo.data.api.Request, queryOptions: Object) -> ?",
          "setStore": "fn(store: dojo.data.api.Read, query: dojo.data.api.Request, queryOptions: Object) -> ?",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onCheckStateChanged": "fn(listItem: dijit._WidgetBase, newState: String)",
          "onComplete": "fn(items: [?], request: Object)",
          "onDelete": "fn(deletedItem: Object)",
          "onError": "fn(errorData: Object, request: Object)",
          "onFocus": "fn()",
          "onNew": "fn(newItem: Object, parentInfo: Object)",
          "onSet": "fn(item: Object, attribute: String, oldValue: Object, newValue: Object)",
          "onStoreClose": "fn(request: Object)"
        }
      },
      "ScreenSizeAware": {
        "!type": "fn(options?: Object)",
        "prototype": {
          "leftListId": "string",
          "leftPaneId": "string",
          "leftViewId": "string",
          "rightPaneId": "string",
          "splitterId": "string",
          "getDestinationId": "fn(item: ?) -> ?",
          "getInstance": "fn()",
          "getShowingView": "fn() -> ?",
          "init": "fn()",
          "isPhone": "fn() -> bool",
          "leftItemSelected": "fn(e: Event)",
          "moveList": "fn()",
          "showLeftView": "fn()",
          "showRightView": "fn()",
          "transformUI": "fn(mode: String)",
          "updateBackButton": "fn()",
          "updateSelectedItem": "fn()",
          "updateStateful": "fn()",
          "updateTransition": "fn()"
        }
      },
      "RoundRectStoreList": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "append": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret996",
          "attributeMap": "Object",
          "baseClass": "string",
          "childrenProperty": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "editable": "bool",
          "editableMixinClass": "string",
          "filterBoxClass": "string",
          "focused": "bool",
          "iconBase": "string",
          "iconPos": "string",
          "id": "string",
          "itemMap": "Object",
          "labelProperty": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "query": "Object",
          "queryOptions": "Object",
          "select": "string",
          "srcNodeRef": "HTMLElement",
          "stateful": "bool",
          "store": "Object",
          "style": "string",
          "syncWithViews": "bool",
          "tag": "string",
          "title": "string",
          "tooltip": "string",
          "transition": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "createListItem": "fn(item: Object) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "deselectAll": "fn()",
          "deselectItem": "fn(item: dojox.mobile.ListItem)",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "generateList": "fn(items: [?])",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "itemRenderer": "fn()",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "refresh": "fn() -> ?",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "resize": "fn()",
          "selectItem": "fn(item: dojox.mobile.ListItem)",
          "setQuery": "fn(query: String, queryOptions: Object) -> ?",
          "setStore": "fn(store: dojo.store.api.Store, query: String, queryOptions: Object) -> ?",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onAdd": "fn(item: Object, insertedInto: number)",
          "onBlur": "fn()",
          "onCheckStateChanged": "fn(listItem: dijit._WidgetBase, newState: String)",
          "onComplete": "fn(items: [?])",
          "onDelete": "fn(item: Object, removedFrom: number)",
          "onError": "fn(errorData: Object)",
          "onFocus": "fn()",
          "onUpdate": "fn(item: Object, insertedInto: number)"
        }
      },
      "ScrollablePane": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "allowNestedScrolls": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret1028",
          "appBars": "bool",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "constraint": "bool",
          "containerNode": "HTMLElement",
          "dir": "string",
          "dirLock": "bool",
          "disableFlashScrollBar": "bool",
          "domNode": "HTMLElement",
          "fadeScrollBar": "bool",
          "fixedFooter": "string",
          "fixedFooterHeight": "number",
          "fixedHeader": "string",
          "fixedHeaderHeight": "number",
          "focused": "bool",
          "height": "string",
          "id": "string",
          "isLocalFooter": "bool",
          "lang": "string",
          "ownerDocument": "Object",
          "propagatable": "bool",
          "radius": "number",
          "roundCornerMask": "bool",
          "scrollableParams": "Object",
          "scrollBar": "bool",
          "scrollDir": "string",
          "scrollType": "number",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "threshold": "number",
          "title": "string",
          "tooltip": "string",
          "touchNode": "HTMLElement",
          "weight": "number",
          "abort": "fn()",
          "addCover": "fn()",
          "adjustDestination": "fn(to: Object, pos: Object, dim: Object) -> bool",
          "buildRendering": "fn()",
          "calcScrollBarPos": "fn(to: Object) -> Object",
          "calcSpeed": "fn(distance: number, time: number) -> number",
          "checkFixedBar": "fn(node: HTMLElement, local: bool) -> ?",
          "cleanup": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "createMask": "fn()",
          "createRoundMask": "fn()",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "findAppBars": "fn()",
          "findDisp": "fn(node: HTMLElement) -> ?",
          "flashScrollBar": "fn()",
          "getChildren": "fn() -> [?]",
          "getDim": "fn() -> Object",
          "getIndexInParent": "fn() -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPos": "fn() -> Object",
          "getPreviousSibling": "fn() -> ?",
          "getScreenSize": "fn() -> Object",
          "getSpeed": "fn() -> Object",
          "hideScrollBar": "fn()",
          "init": "fn(params: Object)",
          "isFocusable": "fn() -> ?",
          "isFormElement": "fn(node: HTMLElement) -> bool",
          "isLeftToRight": "fn() -> ?",
          "isTopLevel": "fn(e?: ?) -> bool",
          "makeTranslateStr": "fn(to: Object) -> String",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeCover": "fn()",
          "resetScrollBar": "fn()",
          "resize": "fn()",
          "scrollIntoView": "fn(node: HTMLElement, alignWithTop: bool, duration: number)",
          "scrollScrollBarTo": "fn(to: Object)",
          "scrollTo": "fn(to: Object, doNotMoveScrollBar: bool, node: HTMLElement)",
          "setKeyframes": "fn(from: Object, to: Object, idx: number)",
          "setSelectable": "fn(node: HTMLElement, selectable: bool)",
          "showScrollBar": "fn()",
          "slideScrollBarTo": "fn(to: Object, duration: number, easing: String)",
          "slideTo": "fn(to: Object, duration: number, easing: String)",
          "startup": "fn()",
          "stopAnimation": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onAfterScroll": "fn(e: Event)",
          "onBeforeScroll": "fn(e: Event) -> bool",
          "onBlur": "fn()",
          "onFlickAnimationEnd": "fn(e: ?)",
          "onFlickAnimationStart": "fn(e: ?)",
          "onFocus": "fn()",
          "onTouchEnd": "fn(e: Event)",
          "onTouchMove": "fn(e: ?)",
          "onTouchStart": "fn(e: ?)"
        }
      },
      "ScrollableView": {
        "!type": "fn()",
        "prototype": {
          "allowNestedScrolls": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret1065",
          "appBars": "bool",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "constraint": "bool",
          "containerNode": "HTMLElement",
          "dir": "string",
          "dirLock": "bool",
          "disableFlashScrollBar": "bool",
          "domNode": "HTMLElement",
          "fadeScrollBar": "bool",
          "fixedFooter": "string",
          "fixedFooterHeight": "number",
          "fixedHeader": "string",
          "fixedHeaderHeight": "number",
          "focused": "bool",
          "height": "string",
          "id": "string",
          "isLocalFooter": "bool",
          "keepScrollPos": "bool",
          "lang": "string",
          "ownerDocument": "Object",
          "propagatable": "bool",
          "scrollableParams": "Object",
          "scrollBar": "bool",
          "scrollDir": "string",
          "scrollType": "number",
          "selected": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tag": "string",
          "threshold": "number",
          "title": "string",
          "tooltip": "string",
          "touchNode": "HTMLElement",
          "weight": "number",
          "abort": "fn()",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "addCover": "fn()",
          "addFixedBar": "fn(widget: dijit._WidgetBase)",
          "adjustDestination": "fn(to: Object, pos: Object, dim: Object) -> bool",
          "buildRendering": "fn()",
          "calcScrollBarPos": "fn(to: Object) -> Object",
          "calcSpeed": "fn(distance: number, time: number) -> number",
          "checkFixedBar": "fn(node: HTMLElement, local: bool) -> ?",
          "cleanup": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "convertToId": "fn(moveTo: ?) -> ?",
          "createMask": "fn()",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn()",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "findAppBars": "fn()",
          "findDisp": "fn(node: HTMLElement) -> ?",
          "flashScrollBar": "fn()",
          "getChildren": "fn() -> ?",
          "getDim": "fn() -> Object",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPos": "fn() -> Object",
          "getPreviousSibling": "fn() -> ?",
          "getScreenSize": "fn() -> Object",
          "getShowingView": "fn() -> ?",
          "getSiblingViews": "fn() -> ?",
          "getSpeed": "fn() -> Object",
          "hasChildren": "fn() -> bool",
          "hide": "fn()",
          "hideScrollBar": "fn()",
          "init": "fn(params: Object)",
          "invokeCallback": "fn()",
          "isFocusable": "fn() -> ?",
          "isFormElement": "fn(node: HTMLElement) -> bool",
          "isLeftToRight": "fn() -> ?",
          "isTopLevel": "fn(e?: Event) -> bool",
          "isVisible": "fn(checkAncestors: bool) -> ?",
          "makeTranslateStr": "fn(to: Object) -> String",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "performTransition": "fn(moveTo: String, transitionDir: number, transition: String, context: Object, method: String)",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "removeCover": "fn()",
          "reparent": "fn()",
          "resetScrollBar": "fn()",
          "resize": "fn()",
          "scrollIntoView": "fn(node: HTMLElement, alignWithTop: bool, duration: number)",
          "scrollScrollBarTo": "fn(to: Object)",
          "scrollTo": "fn(to: Object, doNotMoveScrollBar: bool, node: HTMLElement)",
          "setKeyframes": "fn(from: Object, to: Object, idx: number)",
          "setSelectable": "fn(node: HTMLElement, selectable: bool)",
          "show": "fn(noEvent: bool, doNotHideOthers: bool)",
          "showScrollBar": "fn()",
          "slideScrollBarTo": "fn(to: Object, duration: number, easing: String)",
          "slideTo": "fn(to: Object, duration: number, easing: String)",
          "startup": "fn()",
          "stopAnimation": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onAfterScroll": "fn(e: Event)",
          "onAfterTransitionIn": "fn(moveTo: ?, dir: ?, transition: ?, context: ?, method: ?)",
          "onAfterTransitionOut": "fn(moveTo: ?, dir: ?, transition: ?, context: ?, method: ?)",
          "onAnimationEnd": "fn(e: ?)",
          "onAnimationStart": "fn(e: ?)",
          "onBeforeScroll": "fn(e: Event) -> bool",
          "onBeforeTransitionIn": "fn(moveTo: ?, dir: ?, transition: ?, context: ?, method: ?)",
          "onBeforeTransitionOut": "fn(moveTo: ?, dir: ?, transition: ?, context: ?, method: ?)",
          "onBlur": "fn()",
          "onFlickAnimationEnd": "fn(e: ?)",
          "onFlickAnimationStart": "fn(e: ?)",
          "onFocus": "fn()",
          "onStartView": "fn()",
          "onTouchEnd": "fn(e: Event)",
          "onTouchMove": "fn(e: ?)",
          "onTouchStart": "fn(e: ?)"
        }
      },
      "SearchBox": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "alt": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret1103",
          "aria-label": "string",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "disabled": "bool",
          "displayedValue": "string",
          "domNode": "HTMLElement",
          "fetchProperties": "Object",
          "focused": "bool",
          "id": "string",
          "ignoreCase": "bool",
          "incremental": "bool",
          "intermediateChanges": "bool",
          "lang": "string",
          "lowercase": "bool",
          "maxLength": "string",
          "name": "string",
          "ownerDocument": "Object",
          "pageSize": "number",
          "placeHolder": "string",
          "propercase": "bool",
          "query": "Object",
          "queryExpr": "string",
          "readOnly": "bool",
          "scrollOnFocus": "bool",
          "searchAttr": "string",
          "searchDelay": "number",
          "selectOnClick": "bool",
          "srcNodeRef": "HTMLElement",
          "store": "Object",
          "style": "string",
          "tabIndex": "string",
          "title": "string",
          "tooltip": "string",
          "trim": "bool",
          "type": "string",
          "uppercase": "bool",
          "value": "string",
          "buildRendering": "fn()",
          "compare": "fn(val1: ?, val2: ?) -> number",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "filter": "fn(val: ?) -> ?",
          "focus": "fn()",
          "format": "fn(value: String, constraints: Object) -> String",
          "getChildren": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "parse": "fn(value: String, constraints: Object) -> String",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "reset": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "undo": "fn()",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onFocus": "fn()",
          "onInput": "fn(event: ?)",
          "onSearch": "fn(results: Object, query: Object, options: Object)"
        }
      },
      "SimpleDialog": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret1145",
          "baseClass": "string",
          "class": "string",
          "closeButton": "bool",
          "closeButtonClass": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "lang": "string",
          "left": "string",
          "modal": "bool",
          "ownerDocument": "Object",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tabIndex": "string",
          "title": "string",
          "tooltip": "string",
          "top": "string",
          "addCover": "fn()",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "hide": "fn()",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "refresh": "fn()",
          "removeCover": "fn()",
          "resize": "fn()",
          "show": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onCloseButtonClick": "fn(e: Event)",
          "onFocus": "fn()"
        }
      },
      "Slider": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "alt": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret1166",
          "aria-label": "string",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "disabled": "bool",
          "domNode": "HTMLElement",
          "flip": "bool",
          "focused": "bool",
          "halo": "number",
          "id": "string",
          "intermediateChanges": "bool",
          "lang": "string",
          "max": "number",
          "min": "number",
          "name": "string",
          "orientation": "string",
          "ownerDocument": "Object",
          "readOnly": "bool",
          "scrollOnFocus": "bool",
          "srcNodeRef": "HTMLElement",
          "step": "number",
          "style": "string",
          "tabIndex": "string",
          "title": "string",
          "tooltip": "string",
          "type": "string",
          "value": "number",
          "buildRendering": "fn()",
          "compare": "fn(val1: ?, val2: ?) -> number",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "create": "fn()",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "focus": "fn()",
          "getChildren": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "reset": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "undo": "fn()",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onFocus": "fn()"
        }
      },
      "SpinWheel": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret1197",
          "baseClass": "string",
          "class": "string",
          "colors": "[?]",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "slotClasses": "[?]",
          "slotOrder": "[?]",
          "slotProps": "[?]",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "values": "[?]",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "getSlots": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "reset": "fn()",
          "resize": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "SpinWheelDatePicker": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret1217",
          "baseClass": "string",
          "class": "string",
          "colors": "[?]",
          "containerNode": "HTMLElement",
          "dayPattern": "string",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "lang": "string",
          "monthPattern": "string",
          "ownerDocument": "Object",
          "slotClasses": "[?]",
          "slotOrder": "[?]",
          "slotProps": "[?]",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "value": "string",
          "values": "[?]",
          "yearPattern": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disableValues": "fn(daysInMonth: number)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "getSlots": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "initSlots": "fn()",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "reorderSlots": "fn()",
          "reset": "fn()",
          "resize": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onDaySet": "fn()",
          "onFocus": "fn()",
          "onMonthSet": "fn()",
          "onYearSet": "fn()"
        }
      },
      "SpinWheelSlot": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "constraint": "bool",
          "androidWorkaroud": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret1241",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "dirLock": "bool",
          "disableFlashScrollBar": "bool",
          "domNode": "HTMLElement",
          "fadeScrollBar": "bool",
          "fixedFooterHeight": "number",
          "fixedHeaderHeight": "number",
          "focused": "bool",
          "height": "string",
          "id": "string",
          "isLocalFooter": "bool",
          "items": "[?]",
          "labelFrom": "number",
          "labels": "[?]",
          "labelTo": "number",
          "lang": "string",
          "ownerDocument": "Object",
          "propagatable": "bool",
          "scrollBar": "bool",
          "scrollDir": "string",
          "scrollType": "number",
          "srcNodeRef": "HTMLElement",
          "step": "number",
          "style": "string",
          "tabIndex": "string",
          "threshold": "number",
          "title": "string",
          "tooltip": "string",
          "touchNode": "HTMLElement",
          "value": "string",
          "weight": "number",
          "zeroPad": "number",
          "abort": "fn()",
          "addCover": "fn()",
          "adjust": "fn()",
          "adjustDestination": "fn(to: ?, pos: ?, dim: ?) -> bool",
          "buildRendering": "fn()",
          "calcScrollBarPos": "fn(to: Object) -> Object",
          "calcSpeed": "fn(d: number, t: number) -> number",
          "cleanup": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "createMask": "fn()",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disableValues": "fn(n: number)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "findDisp": "fn(node: HTMLElement) -> ?",
          "flashScrollBar": "fn()",
          "getCenterItem": "fn() -> ?",
          "getChildren": "fn() -> [?]",
          "getDim": "fn() -> Object",
          "getIndexInParent": "fn() -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPos": "fn() -> Object",
          "getPreviousSibling": "fn() -> ?",
          "getScreenSize": "fn() -> Object",
          "getSpeed": "fn() -> Object",
          "hideScrollBar": "fn()",
          "init": "fn(params: Object)",
          "isFocusable": "fn() -> ?",
          "isFormElement": "fn(node: HTMLElement) -> bool",
          "isLeftToRight": "fn() -> ?",
          "isTopLevel": "fn() -> bool",
          "makeTranslateStr": "fn(to: Object) -> String",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeCover": "fn()",
          "resetScrollBar": "fn()",
          "resize": "fn(e: ?)",
          "scrollIntoView": "fn(node: HTMLElement, alignWithTop: bool, duration: number)",
          "scrollScrollBarTo": "fn(to: Object)",
          "scrollTo": "fn(to: Object, doNotMoveScrollBar: bool, node: HTMLElement)",
          "setColor": "fn(value: String, color: String)",
          "setInitialValue": "fn()",
          "setKeyframes": "fn(from: Object, to: Object, idx: number)",
          "setSelectable": "fn(node: HTMLElement, selectable: bool)",
          "showScrollBar": "fn()",
          "slideScrollBarTo": "fn(to: Object, duration: number, easing: String)",
          "slideTo": "fn(to: Object, duration: number, easing: String)",
          "spin": "fn(steps: number)",
          "startup": "fn()",
          "stopAnimation": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onAfterScroll": "fn(e: Event)",
          "onBeforeScroll": "fn(e: Event) -> bool",
          "onBlur": "fn()",
          "onFlickAnimationEnd": "fn(e: ?)",
          "onFlickAnimationStart": "fn(e: ?)",
          "onFocus": "fn()",
          "onTouchEnd": "fn(e: Event)",
          "onTouchMove": "fn(e: ?)",
          "onTouchStart": "fn(e: ?)"
        }
      },
      "SpinWheelTimePicker": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret1278",
          "baseClass": "string",
          "class": "string",
          "colors": "[?]",
          "containerNode": "HTMLElement",
          "date": "Date",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "slotClasses": "[?]",
          "slotOrder": "[?]",
          "slotProps": "[?]",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "values": "[?]",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "getSlots": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "reset": "fn()",
          "resize": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "StoreCarousel": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret1299",
          "baseClass": "string",
          "childrenProperty": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "height": "string",
          "id": "string",
          "itemWidth": "number",
          "labelProperty": "string",
          "lang": "string",
          "navButton": "bool",
          "numVisible": "number",
          "ownerDocument": "Object",
          "pageIndicator": "bool",
          "query": "Object",
          "queryOptions": "Object",
          "selectable": "bool",
          "srcNodeRef": "HTMLElement",
          "store": "Object",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "fillPages": "fn()",
          "getChildren": "fn() -> [?]",
          "getIndexByItemWidget": "fn(w: dijit._WidgetBase) -> number",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getItemWidgetByIndex": "fn(index: number) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getParentView": "fn(node: HTMLElement) -> ?",
          "getPreviousSibling": "fn() -> ?",
          "handleViewChanged": "fn(view: ?)",
          "hasChildren": "fn() -> bool",
          "instantiateView": "fn(view: ?)",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "refresh": "fn() -> ?",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "resize": "fn()",
          "resizeItems": "fn()",
          "select": "fn(itemWidget: dijit._WidgetBase)",
          "setQuery": "fn(query: String, queryOptions: Object) -> ?",
          "setStore": "fn(store: dojo.store.api.Store, query: String, queryOptions: Object) -> ?",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onAdd": "fn(item: ?, insertedInto: ?)",
          "onBlur": "fn()",
          "onClick": "fn(e: Event)",
          "onComplete": "fn(items: [?])",
          "onDelete": "fn(item: Object, removedFrom: number)",
          "onError": "fn(errText: String)",
          "onFocus": "fn()",
          "onNew": "fn(newItem: ?, parentInfo: ?)",
          "onNextBtnClick": "fn(e: Event)",
          "onPrevBtnClick": "fn(e: Event)",
          "onSet": "fn(item: ?, attribute: ?, oldValue: ?, newValue: ?)",
          "onStoreClose": "fn(request: ?)",
          "onUpdate": "fn(item: Object, insertedInto: number)"
        }
      },
      "Switch": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret1325",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "lang": "string",
          "leftLabel": "string",
          "name": "string",
          "ownerDocument": "Object",
          "rightLabel": "string",
          "shape": "string",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tabIndex": "string",
          "title": "string",
          "tooltip": "string",
          "value": "string",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "reset": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onClick": "fn(e: Event)",
          "onFocus": "fn()",
          "onStateChanged": "fn(newState: String)",
          "onTouchEnd": "fn(e: Event)",
          "onTouchMove": "fn(e: Event)",
          "onTouchStart": "fn(e: Event)"
        }
      },
      "SwapView": {
        "!type": "fn(params: Object, node?: HTMLElement)",
        "prototype": {
          "allowNestedScrolls": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret1346",
          "appBars": "bool",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "constraint": "bool",
          "containerNode": "HTMLElement",
          "dir": "string",
          "dirLock": "bool",
          "disableFlashScrollBar": "bool",
          "domNode": "HTMLElement",
          "fadeScrollBar": "bool",
          "fixedFooter": "string",
          "fixedFooterHeight": "number",
          "fixedHeader": "string",
          "fixedHeaderHeight": "number",
          "focused": "bool",
          "height": "string",
          "id": "string",
          "isLocalFooter": "bool",
          "keepScrollPos": "bool",
          "lang": "string",
          "ownerDocument": "Object",
          "propagatable": "bool",
          "scrollableParams": "Object",
          "scrollBar": "bool",
          "scrollDir": "string",
          "scrollType": "number",
          "selected": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tag": "string",
          "threshold": "number",
          "title": "string",
          "tooltip": "string",
          "touchNode": "HTMLElement",
          "weight": "number",
          "abort": "fn()",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "addCover": "fn()",
          "adjustDestination": "fn(to: Object, pos: Object, dim: Object) -> bool",
          "buildRendering": "fn()",
          "calcScrollBarPos": "fn(to: Object) -> Object",
          "calcSpeed": "fn(distance: number, time: number) -> number",
          "checkFixedBar": "fn(node: HTMLElement, local: bool) -> ?",
          "cleanup": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "convertToId": "fn(moveTo: ?) -> ?",
          "createMask": "fn()",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn()",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "findAppBars": "fn()",
          "findDisp": "fn(node: HTMLElement) -> ?",
          "flashScrollBar": "fn()",
          "getChildren": "fn() -> [?]",
          "getDim": "fn() -> Object",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPos": "fn() -> Object",
          "getPreviousSibling": "fn() -> ?",
          "getScreenSize": "fn() -> Object",
          "getShowingView": "fn() -> ?",
          "getSiblingViews": "fn() -> ?",
          "getSpeed": "fn() -> Object",
          "goTo": "fn(dir: number, moveTo: String)",
          "handleNextPage": "fn(w: dijit._WidgetBase)",
          "handlePrevPage": "fn(w: dijit._WidgetBase)",
          "hasChildren": "fn() -> bool",
          "hide": "fn()",
          "hideScrollBar": "fn()",
          "init": "fn(params: Object)",
          "invokeCallback": "fn()",
          "isFocusable": "fn() -> ?",
          "isFormElement": "fn(node: HTMLElement) -> bool",
          "isLeftToRight": "fn() -> ?",
          "isSwapView": "fn(node: HTMLElement) -> ?",
          "isTopLevel": "fn() -> bool",
          "isVisible": "fn(checkAncestors: bool) -> ?",
          "makeTranslateStr": "fn(to: Object) -> String",
          "nextView": "fn(node: HTMLElement) -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "performTransition": "fn(moveTo: String, transitionDir: number, transition: String, context: Object, method: String)",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "previousView": "fn(node: HTMLElement) -> ?",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "removeCover": "fn()",
          "resetScrollBar": "fn()",
          "resize": "fn()",
          "scrollIntoView": "fn(node: HTMLElement, alignWithTop: bool, duration: number)",
          "scrollScrollBarTo": "fn(to: Object)",
          "scrollTo": "fn(to: Object)",
          "setKeyframes": "fn(from: Object, to: Object, idx: number)",
          "setSelectable": "fn(node: HTMLElement, selectable: bool)",
          "show": "fn(noEvent: bool, doNotHideOthers: bool)",
          "showScrollBar": "fn()",
          "slideScrollBarTo": "fn(to: Object, duration: number, easing: String)",
          "slideTo": "fn(to: Object, duration: number, easing: String, fake_pos?: Object)",
          "startup": "fn()",
          "stopAnimation": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onAfterScroll": "fn(e: Event)",
          "onAfterTransitionIn": "fn(moveTo: ?, dir: ?, transition: ?, context: ?, method: ?)",
          "onAfterTransitionOut": "fn(moveTo: ?, dir: ?, transition: ?, context: ?, method: ?)",
          "onAnimationEnd": "fn(e: Event)",
          "onAnimationStart": "fn(e: ?)",
          "onBeforeScroll": "fn(e: Event) -> bool",
          "onBeforeTransitionIn": "fn(moveTo: ?, dir: ?, transition: ?, context: ?, method: ?)",
          "onBeforeTransitionOut": "fn(moveTo: ?, dir: ?, transition: ?, context: ?, method: ?)",
          "onBlur": "fn()",
          "onFlickAnimationEnd": "fn(e: Event)",
          "onFlickAnimationStart": "fn(e: ?)",
          "onFocus": "fn()",
          "onStartView": "fn()",
          "onTouchEnd": "fn(e: Event)",
          "onTouchMove": "fn(e: ?)",
          "onTouchStart": "fn(e: Event)"
        }
      },
      "TabBar": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret1384",
          "barType": "string",
          "baseClass": "string",
          "center": "bool",
          "class": "string",
          "closable": "bool",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "fill": "string",
          "focused": "bool",
          "iconBase": "string",
          "iconPos": "string",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "syncWithViews": "bool",
          "tag": "string",
          "title": "string",
          "tooltip": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "getSelectedTab": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "reset": "fn()",
          "resize": "fn(size: ?)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onCloseButtonClick": "fn(tab: dojox.mobile.TabBarButton) -> bool",
          "onFocus": "fn()"
        }
      },
      "TabBarButton": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "alt": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret1407",
          "attributeMap": "Object",
          "back": "bool",
          "badge": "string",
          "baseClass": "string",
          "callback": "Function",
          "class": "string",
          "clickable": "bool",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "href": "string",
          "hrefTarget": "string",
          "icon": "string",
          "icon1": "string",
          "icon2": "string",
          "iconPos": "string",
          "iconPos1": "string",
          "iconPos2": "string",
          "id": "string",
          "label": "string",
          "lang": "string",
          "moveTo": "string",
          "ownerDocument": "Object",
          "paramsToInherit": "string",
          "scene": "string",
          "selected": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tabIndex": "string",
          "tag": "string",
          "title": "string",
          "toggle": "bool",
          "tooltip": "string",
          "transition": "string",
          "transitionDir": "number",
          "transitionOptions": "Object",
          "url": "string",
          "urlTarget": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "cancel": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defaultClickAction": "fn(e: Event)",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn()",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "getTransOpts": "fn() -> String",
          "handleSelection": "fn(e: Event)",
          "hasChildren": "fn() -> bool",
          "inheritParams": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "makeTransition": "fn(e: Event)",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "setTransitionPos": "fn(e: ?)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "transitionTo": "fn(moveTo: String, href: String, url: String, scene: String)",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "userClickAction": "fn(e: Event)",
          "onBlur": "fn()",
          "onClick": "fn(e: Event)",
          "onClose": "fn(e: ?) -> ?",
          "onCloseButtonClick": "fn(e: Event)",
          "onFocus": "fn()",
          "onTouchStart": "fn(e: Event)"
        }
      },
      "TextArea": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "alt": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret1448",
          "aria-label": "string",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "disabled": "bool",
          "displayedValue": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "intermediateChanges": "bool",
          "lang": "string",
          "lowercase": "bool",
          "maxLength": "string",
          "name": "string",
          "ownerDocument": "Object",
          "placeHolder": "string",
          "propercase": "bool",
          "readOnly": "bool",
          "scrollOnFocus": "bool",
          "selectOnClick": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tabIndex": "string",
          "title": "string",
          "tooltip": "string",
          "trim": "bool",
          "type": "string",
          "uppercase": "bool",
          "value": "string",
          "buildRendering": "fn()",
          "compare": "fn(val1: ?, val2: ?) -> number",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "filter": "fn(val: ?) -> ?",
          "focus": "fn()",
          "format": "fn(value: String, constraints: Object) -> String",
          "getChildren": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "parse": "fn(value: String, constraints: Object) -> String",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "reset": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "undo": "fn()",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onFocus": "fn()",
          "onInput": "fn(event: ?)"
        }
      },
      "TextBox": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "alt": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret1481",
          "aria-label": "string",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "disabled": "bool",
          "displayedValue": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "intermediateChanges": "bool",
          "lang": "string",
          "lowercase": "bool",
          "maxLength": "string",
          "name": "string",
          "ownerDocument": "Object",
          "placeHolder": "string",
          "propercase": "bool",
          "readOnly": "bool",
          "scrollOnFocus": "bool",
          "selectOnClick": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tabIndex": "string",
          "title": "string",
          "tooltip": "string",
          "trim": "bool",
          "type": "string",
          "uppercase": "bool",
          "value": "string",
          "buildRendering": "fn()",
          "compare": "fn(val1: ?, val2: ?) -> number",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "create": "fn()",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "filter": "fn(val: ?) -> ?",
          "focus": "fn()",
          "format": "fn(value: String, constraints: Object) -> String",
          "getChildren": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "parse": "fn(value: String, constraints: Object) -> String",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "reset": "fn()",
          "selectInputText": "fn(element: HTMLElement, start: number, stop: number)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "undo": "fn()",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onFocus": "fn()",
          "onInput": "fn(event: ?)"
        }
      },
      "ToggleButton": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "alt": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret1514",
          "aria-label": "string",
          "attributeMap": "Object",
          "baseClass": "string",
          "checked": "bool",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "disabled": "bool",
          "domNode": "HTMLElement",
          "duration": "number",
          "focused": "bool",
          "id": "string",
          "intermediateChanges": "bool",
          "label": "string",
          "lang": "string",
          "name": "string",
          "ownerDocument": "Object",
          "scrollOnFocus": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tabIndex": "string",
          "title": "string",
          "tooltip": "string",
          "type": "string",
          "value": "string",
          "buildRendering": "fn()",
          "compare": "fn(val1: ?, val2: ?) -> number",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "focus": "fn()",
          "getChildren": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> bool",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "reset": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onChange": "fn(newValue: ?)",
          "onClick": "fn(e: Event) -> bool",
          "onFocus": "fn()"
        }
      },
      "ToolBarButton": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "alt": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret1541",
          "arrow": "string",
          "attributeMap": "Object",
          "back": "bool",
          "baseClass": "string",
          "callback": "Function",
          "class": "string",
          "clickable": "bool",
          "containerNode": "HTMLElement",
          "defaultColor": "string",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "href": "string",
          "hrefTarget": "string",
          "icon": "string",
          "iconPos": "string",
          "id": "string",
          "label": "string",
          "lang": "string",
          "light": "bool",
          "moveTo": "string",
          "ownerDocument": "Object",
          "paramsToInherit": "string",
          "scene": "string",
          "selColor": "string",
          "selected": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tabIndex": "string",
          "title": "string",
          "toggle": "bool",
          "tooltip": "string",
          "transition": "string",
          "transitionDir": "number",
          "transitionOptions": "Object",
          "url": "string",
          "urlTarget": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "cancel": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defaultClickAction": "fn(e: Event)",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "getTransOpts": "fn() -> String",
          "handleSelection": "fn(e: Event)",
          "hasChildren": "fn() -> bool",
          "inheritParams": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "makeTransition": "fn(e: Event)",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "setTransitionPos": "fn(e: ?)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "transitionTo": "fn(moveTo: String, href: String, url: String, scene: String)",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "userClickAction": "fn(e: Event)",
          "onBlur": "fn()",
          "onClick": "fn(e: Event)",
          "onFocus": "fn()",
          "onTouchStart": "fn(e: Event)"
        }
      },
      "Tooltip": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret1580",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn()",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "hide": "fn()",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "show": "fn(aroundNode: HTMLElement, positions: [?]) -> ?",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn(e?: Event) -> bool",
          "onFocus": "fn()"
        }
      },
      "TransitionEvent": {
        "!type": "fn(target: HTMLElement, transitionOptions: Object, triggerEvent?: Event)",
        "prototype": {
          "dispatch": "fn()"
        }
      },
      "TreeView": {
        "!type": "fn()",
        "prototype": {
          "allowNestedScrolls": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret1595",
          "appBars": "bool",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "constraint": "bool",
          "containerNode": "HTMLElement",
          "dir": "string",
          "dirLock": "bool",
          "disableFlashScrollBar": "bool",
          "domNode": "HTMLElement",
          "fadeScrollBar": "bool",
          "fixedFooter": "string",
          "fixedFooterHeight": "number",
          "fixedHeader": "string",
          "fixedHeaderHeight": "number",
          "focused": "bool",
          "height": "string",
          "id": "string",
          "isLocalFooter": "bool",
          "keepScrollPos": "bool",
          "lang": "string",
          "ownerDocument": "Object",
          "propagatable": "bool",
          "scrollableParams": "Object",
          "scrollBar": "bool",
          "scrollDir": "string",
          "scrollType": "number",
          "selected": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tag": "string",
          "threshold": "number",
          "title": "string",
          "tooltip": "string",
          "touchNode": "HTMLElement",
          "weight": "number",
          "abort": "fn()",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "addCover": "fn()",
          "addFixedBar": "fn(widget: dijit._WidgetBase)",
          "adjustDestination": "fn(to: Object, pos: Object, dim: Object) -> bool",
          "buildRendering": "fn()",
          "calcScrollBarPos": "fn(to: Object) -> Object",
          "calcSpeed": "fn(distance: number, time: number) -> number",
          "checkFixedBar": "fn(node: HTMLElement, local: bool) -> ?",
          "cleanup": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "convertToId": "fn(moveTo: ?) -> ?",
          "createMask": "fn()",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn()",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "findAppBars": "fn()",
          "findDisp": "fn(node: HTMLElement) -> ?",
          "flashScrollBar": "fn()",
          "getChildren": "fn() -> ?",
          "getDim": "fn() -> Object",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPos": "fn() -> Object",
          "getPreviousSibling": "fn() -> ?",
          "getScreenSize": "fn() -> Object",
          "getShowingView": "fn() -> ?",
          "getSiblingViews": "fn() -> ?",
          "getSpeed": "fn() -> Object",
          "handleClick": "fn(li: dojox.mobile.ListItem)",
          "hasChildren": "fn() -> bool",
          "hide": "fn()",
          "hideScrollBar": "fn()",
          "init": "fn(params: Object)",
          "invokeCallback": "fn()",
          "isFocusable": "fn() -> ?",
          "isFormElement": "fn(node: HTMLElement) -> bool",
          "isLeftToRight": "fn() -> ?",
          "isTopLevel": "fn(e: Event) -> bool",
          "isVisible": "fn(checkAncestors: bool) -> ?",
          "makeTranslateStr": "fn(to: Object) -> String",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "performTransition": "fn(moveTo: String, transitionDir: number, transition: String, context: Object, method: String)",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "removeCover": "fn()",
          "reparent": "fn()",
          "resetScrollBar": "fn()",
          "resize": "fn()",
          "scrollIntoView": "fn(node: HTMLElement, alignWithTop: bool, duration: number)",
          "scrollScrollBarTo": "fn(to: Object)",
          "scrollTo": "fn(to: Object, doNotMoveScrollBar: bool, node: HTMLElement)",
          "setKeyframes": "fn(from: Object, to: Object, idx: number)",
          "setSelectable": "fn(node: HTMLElement, selectable: bool)",
          "show": "fn(noEvent: bool, doNotHideOthers: bool)",
          "showScrollBar": "fn()",
          "slideScrollBarTo": "fn(to: Object, duration: number, easing: String)",
          "slideTo": "fn(to: Object, duration: number, easing: String)",
          "startup": "fn()",
          "stopAnimation": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onAfterScroll": "fn(e: Event)",
          "onAfterTransitionIn": "fn(moveTo: ?, dir: ?, transition: ?, context: ?, method: ?)",
          "onAfterTransitionOut": "fn(moveTo: ?, dir: ?, transition: ?, context: ?, method: ?)",
          "onAnimationEnd": "fn(e: ?)",
          "onAnimationStart": "fn(e: ?)",
          "onBeforeScroll": "fn(e: Event) -> bool",
          "onBeforeTransitionIn": "fn(moveTo: ?, dir: ?, transition: ?, context: ?, method: ?)",
          "onBeforeTransitionOut": "fn(moveTo: ?, dir: ?, transition: ?, context: ?, method: ?)",
          "onBlur": "fn()",
          "onFlickAnimationEnd": "fn(e: ?)",
          "onFlickAnimationStart": "fn(e: ?)",
          "onFocus": "fn()",
          "onStartView": "fn()",
          "onTouchEnd": "fn(e: Event)",
          "onTouchMove": "fn(e: ?)",
          "onTouchStart": "fn(e: ?)"
        }
      },
      "ValuePicker": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret1633",
          "baseClass": "string",
          "class": "string",
          "colors": "[?]",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "slotClasses": "[?]",
          "slotOrder": "[?]",
          "slotProps": "[?]",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "values": "[?]",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "getSlots": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "reset": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onFocus": "fn()",
          "onValueChanged": "fn(slot: dojox.mobile.ValuePickerSlot)"
        }
      },
      "ValuePickerDatePicker": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret1653",
          "baseClass": "string",
          "class": "string",
          "colors": "[?]",
          "containerNode": "HTMLElement",
          "dayMinusBtnLabel": "string",
          "dayMinusBtnLabelRef": "string",
          "dayPattern": "string",
          "dayPlusBtnLabel": "string",
          "dayPlusBtnLabelRef": "string",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "lang": "string",
          "monthMinusBtnLabel": "string",
          "monthMinusBtnLabelRef": "string",
          "monthPattern": "string",
          "monthPlusBtnLabel": "string",
          "monthPlusBtnLabelRef": "string",
          "ownerDocument": "Object",
          "readOnly": "bool",
          "slotClasses": "[?]",
          "slotOrder": "[?]",
          "slotProps": "[?]",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "value": "string",
          "values": "[?]",
          "yearMinusBtnLabel": "string",
          "yearMinusBtnLabelRef": "string",
          "yearPattern": "string",
          "yearPlusBtnLabel": "string",
          "yearPlusBtnLabelRef": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disableValues": "fn(daysInMonth: number)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "getSlots": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "initSlots": "fn()",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "reorderSlots": "fn()",
          "reset": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onDaySet": "fn()",
          "onFocus": "fn()",
          "onMonthSet": "fn()",
          "onValueChanged": "fn(slot: dojox.mobile.ValuePickerSlot)",
          "onYearSet": "fn()"
        }
      },
      "ValuePickerSlot": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret1690",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "items": "[?]",
          "key": "Object",
          "labelFrom": "number",
          "labels": "Object",
          "labelTo": "number",
          "lang": "string",
          "minusBtnLabel": "string",
          "minusBtnLabelRef": "string",
          "ownerDocument": "Object",
          "plusBtnLabel": "string",
          "plusBtnLabelRef": "string",
          "readOnly": "bool",
          "srcNodeRef": "HTMLElement",
          "step": "number",
          "style": "string",
          "tabIndex": "string",
          "title": "string",
          "tooltip": "string",
          "value": "string",
          "zeroPad": "number",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "setInitialValue": "fn()",
          "spin": "fn(steps: number)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "validate": "fn(value: ?) -> ?",
          "onBlur": "fn()",
          "onChange": "fn(e: Event)",
          "onClick": "fn(e: Event)",
          "onFocus": "fn()"
        }
      },
      "ValuePickerTimePicker": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret1719",
          "baseClass": "string",
          "class": "string",
          "colors": "[?]",
          "containerNode": "HTMLElement",
          "date": "Date",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "hourMinusBtnLabel": "string",
          "hourMinusBtnLabelRef": "string",
          "hourPlusBtnLabel": "string",
          "hourPlusBtnLabelRef": "string",
          "id": "string",
          "is24h": "bool",
          "lang": "string",
          "minuteMinusBtnLabel": "string",
          "minuteMinusBtnLabelRef": "string",
          "minutePlusBtnLabel": "string",
          "minutePlusBtnLabelRef": "string",
          "ownerDocument": "Object",
          "readOnly": "bool",
          "slotClasses": "[?]",
          "slotOrder": "[?]",
          "slotProps": "[?]",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "values": "[?]",
          "values12": "[?]",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "getSlots": "fn() -> ?",
          "hasChildren": "fn() -> bool",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "reset": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onBtnClick": "fn()",
          "onFocus": "fn()",
          "onValueChanged": "fn(slot: dojox.mobile.ValuePickerSlot)"
        }
      },
      "Video": {
        "!type": "fn()",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret1751",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "height": "string",
          "id": "string",
          "lang": "string",
          "ownerDocument": "Object",
          "source": "[?]",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "width": "string",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "ViewController": {
        "!type": "fn()",
        "prototype": {
          "dataHandlerClass": "Object",
          "dataSourceClass": "Object",
          "fileTypeMapClass": "Object",
          "findTransitionViews": "fn(moveTo: String) -> [?]",
          "getInstance": "fn()",
          "openExternalView": "fn(transOpts: Object, target: HTMLElement) -> ?",
          "onStartTransition": "fn(evt: ?)"
        }
      },
      "View": {
        "!type": "fn(params: Object, node?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret1769",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "keepScrollPos": "bool",
          "lang": "string",
          "ownerDocument": "Object",
          "selected": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "tag": "string",
          "title": "string",
          "tooltip": "string",
          "addChild": "fn(widget: dijit._WidgetBase, insertIndex: number)",
          "addTransitionInfo": "fn()",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "convertToId": "fn(moveTo: ?) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn()",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getIndexInParent": "fn() -> ?",
          "getIndexOfChild": "fn(child: dijit._WidgetBase) -> ?",
          "getNextSibling": "fn() -> ?",
          "getParent": "fn() -> ?",
          "getPreviousSibling": "fn() -> ?",
          "getShowingView": "fn() -> ?",
          "getSiblingViews": "fn() -> ?",
          "getTransitionInfo": "fn()",
          "handleFragIds": "fn()",
          "hasChildren": "fn() -> bool",
          "hide": "fn()",
          "invokeCallback": "fn()",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "isVisible": "fn(checkAncestors: bool) -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "performTransition": "fn(moveTo: String, transitionDir: number, transition: String, context: Object, method: String)",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "removeChild": "fn(widget: dijit._WidgetBase)",
          "resize": "fn()",
          "setFragIds": "fn()",
          "show": "fn(noEvent: bool, doNotHideOthers: bool)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "wakeUp": "fn(node: HTMLElement)",
          "onAfterTransitionIn": "fn(moveTo: ?, dir: ?, transition: ?, context: ?, method: ?)",
          "onAfterTransitionOut": "fn(moveTo: ?, dir: ?, transition: ?, context: ?, method: ?)",
          "onAnimationEnd": "fn(e: ?)",
          "onAnimationStart": "fn(e: ?)",
          "onBeforeTransitionIn": "fn(moveTo: ?, dir: ?, transition: ?, context: ?, method: ?)",
          "onBeforeTransitionOut": "fn(moveTo: ?, dir: ?, transition: ?, context: ?, method: ?)",
          "onBlur": "fn()",
          "onFocus": "fn()",
          "onStartView": "fn()"
        }
      },
      "_base": {},
      "_compat": {},
      "_css3": {
        "add": "fn(styles: Object, css3Styles: Object) -> ?",
        "name": "fn(p: String, hyphen: bool) -> String"
      },
      "_maskUtils": {
        "createRoundMask": "fn(node: HTMLElement, x: ?, y: ?, r: ?, b: ?, w: ?, h: ?, rx: number, ry: number, e: ?)"
      },
      "_PickerChooser": {
        "load": "fn(id: ?, parentRequire: ?, loaded: ?)"
      },
      "bookmarkable": {
        "transitionInfo": "[?]",
        "addTransitionInfo": "fn(fromViewId: String, toViewId: String, args: Object)",
        "findTransitionViews": "fn(moveTo: String) -> [?]",
        "getTransitionInfo": "fn(fromViewId: String, toViewId: String) -> ?",
        "handleFragIds": "fn(fragIds: String) -> Object",
        "setFragIds": "fn(toView: dijit._WidgetBase)"
      },
      "common": {
        "toView": "Object",
        "fromView": "fn(moveTo: String, transitionDir: number, transition: String, context: Object, method: String)"
      },
      "compat": {},
      "i18n": {
        "I18NProperties": {
          "mblNoConv": "bool"
        },
        "load": "fn(packageName: String, bundleName: String, locale: String)",
        "registerBundle": "fn(bundle: [?])"
      },
      "mobile_all": {},
      "sniff": {},
      "transition": {},
      "uacss": {},
      "viewRegistry": {
        "initialView": "Object",
        "length": "number",
        "add": "fn(view: dojox.mobile.View)",
        "getChildViews": "fn(parent: dojox.mobile.View) -> [?]",
        "getEnclosingScrollable": "fn(node: HTMLElement) -> dojox.mobile.scrollable",
        "getEnclosingView": "fn(node: HTMLElement) -> dojox.mobile.View",
        "getParentView": "fn(view: dojox.mobile.View) -> dojox.mobile.View",
        "getViews": "fn() -> [?]",
        "remove": "fn(id: String)",
        "hash": {}
      },
      "DatePicker": {},
      "pageTurningUtils": {},
      "scrollable": {
        "prototype": {
          "constraint": "bool",
          "dirLock": "bool",
          "disableFlashScrollBar": "bool",
          "fadeScrollBar": "bool",
          "fixedFooterHeight": "number",
          "fixedHeaderHeight": "number",
          "height": "string",
          "isLocalFooter": "bool",
          "propagatable": "bool",
          "scrollBar": "bool",
          "scrollDir": "string",
          "scrollType": "number",
          "threshold": "number",
          "touchNode": "HTMLElement",
          "weight": "number",
          "abort": "fn()",
          "addCover": "fn()",
          "adjustDestination": "fn(to: Object, pos: Object, dim: Object) -> bool",
          "calcScrollBarPos": "fn(to: Object) -> Object",
          "calcSpeed": "fn(distance: number, time: number) -> number",
          "cleanup": "fn()",
          "createMask": "fn()",
          "findDisp": "fn(node: HTMLElement) -> ?",
          "flashScrollBar": "fn()",
          "getDim": "fn() -> Object",
          "getPos": "fn() -> Object",
          "getScreenSize": "fn() -> Object",
          "getSpeed": "fn() -> Object",
          "hideScrollBar": "fn()",
          "init": "fn(params: Object)",
          "isFormElement": "fn(node: HTMLElement) -> bool",
          "isTopLevel": "fn() -> bool",
          "makeTranslateStr": "fn(to: Object) -> String",
          "removeCover": "fn()",
          "resetScrollBar": "fn()",
          "resize": "fn(e: ?)",
          "scrollIntoView": "fn(node: HTMLElement, alignWithTop: bool, duration: number)",
          "scrollScrollBarTo": "fn(to: Object)",
          "scrollTo": "fn(to: Object, doNotMoveScrollBar: bool, node: HTMLElement)",
          "setKeyframes": "fn(from: Object, to: Object, idx: number)",
          "setSelectable": "fn(node: HTMLElement, selectable: bool)",
          "showScrollBar": "fn()",
          "slideScrollBarTo": "fn(to: Object, duration: number, easing: String)",
          "slideTo": "fn(to: Object, duration: number, easing: String)",
          "stopAnimation": "fn()"
        }
      },
      "TimePicker": {},
      "bidi": {
        "_ComboBoxMenu": {
          "!type": "fn()",
          "prototype": {
            "buildRendering": "fn()"
          }
        },
        "_ItemBase": {
          "!type": "fn()",
          "prototype": {
            "getTransOpts": "fn() -> ?"
          }
        },
        "_StoreListMixin": {
          "!type": "fn()",
          "prototype": {
            "createListItem": "fn(item: ?) -> ?"
          }
        },
        "Accordion": {
          "!type": "fn()",
          "prototype": {}
        },
        "Badge": {
          "!type": "fn()",
          "prototype": {
            "textDir": "string",
            "setTextDir": "fn(textDir: String)",
            "setValue": "fn(value: String)"
          }
        },
        "Button": {
          "!type": "fn()",
          "prototype": {}
        },
        "CarouselItem": {
          "!type": "fn()",
          "prototype": {}
        },
        "Carousel": {
          "!type": "fn()",
          "prototype": {
            "buildRendering": "fn()"
          }
        },
        "Heading": {
          "!type": "fn()",
          "prototype": {}
        },
        "IconItem": {
          "!type": "fn()",
          "prototype": {}
        },
        "IconMenu": {
          "!type": "fn()",
          "prototype": {}
        },
        "RoundRectCategory": {
          "!type": "fn()",
          "prototype": {}
        },
        "ListItem": {
          "!type": "fn()",
          "prototype": {}
        },
        "SwapView": {
          "!type": "fn()",
          "prototype": {
            "callParentFunction": "bool",
            "nextView": "fn(node: HTMLElement) -> ?",
            "previousView": "fn(node: HTMLElement) -> ?"
          }
        },
        "SpinWheelSlot": {
          "!type": "fn()",
          "prototype": {
            "postCreate": "fn()"
          }
        },
        "TabBar": {
          "!type": "fn()",
          "prototype": {}
        },
        "Switch": {
          "!type": "fn()",
          "prototype": {
            "buildRendering": "fn()",
            "postCreate": "fn()"
          }
        },
        "TextBox": {
          "!type": "fn()",
          "prototype": {}
        },
        "TabBarButton": {
          "!type": "fn()",
          "prototype": {}
        },
        "ToolBarButton": {
          "!type": "fn()",
          "prototype": {
            "buildRendering": "fn()"
          }
        },
        "Tooltip": {
          "!type": "fn()",
          "prototype": {
            "buildRendering": "fn()",
            "postCreate": "fn()"
          }
        },
        "ValuePickerSlot": {
          "!type": "fn()",
          "prototype": {
            "postCreate": "fn()"
          }
        },
        "TreeView": {
          "!type": "fn()",
          "prototype": {}
        },
        "common": {
          "MARK": {
            "LRE": "string",
            "PDF": "string",
            "RLE": "string"
          },
          "enforceTextDirWithUcc": "fn(text: ?, textDir: ?) -> String",
          "removeUCCFromText": "fn(text: ?) -> ?",
          "setTextDirForButtons": "fn(widget: ?)"
        }
      },
      "dh": {
        "DataHandler": {
          "!type": "fn(ds: Object, target: HTMLElement, refNode?: HTMLElement)",
          "prototype": {
            "ds": "Object",
            "refNode": "HTMLElement",
            "target": "HTMLElement",
            "processData": "fn(contentType: String, callback: Function)"
          }
        },
        "HtmlContentHandler": {
          "!type": "fn()",
          "prototype": {
            "parse": "fn(content: String, target: HTMLElement, refNode: HTMLElement) -> ?"
          }
        },
        "HtmlScriptContentHandler": {
          "!type": "fn()",
          "prototype": {
            "execScript": "fn(html: String) -> ?",
            "parse": "fn(content: String, target: HTMLElement, refNode: HTMLElement) -> ?"
          }
        },
        "JsonContentHandler": {
          "!type": "fn()",
          "prototype": {
            "parse": "fn(content: Object, target: HTMLElement, refNode: HTMLElement) -> ?"
          }
        },
        "StringDataSource": {
          "!type": "fn(text: String)",
          "prototype": {
            "text": "string",
            "getData": "fn() -> ?"
          }
        },
        "UrlDataSource": {
          "!type": "fn(url: String)",
          "prototype": {
            "text": "string",
            "getData": "fn() -> ?"
          }
        },
        "ContentTypeMap": {
          "map": {
            "html": "string",
            "json": "string"
          },
          "add": "fn(contentType: String, handlerClass: String)",
          "getHandlerClass": "fn(contentType: String) -> ?"
        },
        "PatternFileTypeMap": {
          "map": {
            ".*.html": "string",
            ".*.json": "string"
          },
          "add": "fn(key: String, contentType: String)",
          "getContentType": "fn(fileName: String)"
        },
        "SuffixFileTypeMap": {
          "map": {
            "html": "string",
            "json": "string"
          },
          "add": "fn(key: String, contentType: String)",
          "getContentType": "fn(fileName: String)"
        }
      }
    }
  },
  "dojox/mobile": "exp",
  "dojox/mobile/_ContentPaneMixin": "exp",
  "dojox/mobile/_DataMixin": "exp",
  "dojox/mobile/_ComboBoxMenu": "exp",
  "dojox/mobile/_DatePickerMixin": "exp",
  "dojox/mobile/_ExecScriptMixin": "exp",
  "dojox/mobile/_DataListMixin": "exp",
  "dojox/mobile/_EditableIconMixin": "exp",
  "dojox/mobile/_EditableListMixin": "exp",
  "dojox/mobile/_ListTouchMixin": "exp",
  "dojox/mobile/_IconItemPane": "exp",
  "dojox/mobile/_StoreListMixin": "exp",
  "dojox/mobile/_StoreMixin": "exp",
  "dojox/mobile/_TimePickerMixin": "exp",
  "dojox/mobile/_ItemBase": "exp",
  "dojox/mobile/Badge": "exp",
  "dojox/mobile/_ScrollableMixin": "exp",
  "dojox/mobile/_PickerBase": "exp",
  "dojox/mobile/Audio": "exp",
  "dojox/mobile/Accordion": "exp",
  "dojox/mobile/Accordion.ChildWidgetProperties": "exp",
  "dojox/mobile/Button": "exp",
  "dojox/mobile/CarouselItem": "exp",
  "dojox/mobile/Carousel": "exp",
  "dojox/mobile/Carousel.ChildSwapViewProperties": "exp",
  "dojox/mobile/CheckBox": "exp",
  "dojox/mobile/Container": "exp",
  "dojox/mobile/ComboBox": "exp",
  "dojox/mobile/ContentPane": "exp",
  "dojox/mobile/DataCarousel": "exp",
  "dojox/mobile/FilteredListMixin": "exp",
  "dojox/mobile/EdgeToEdgeList": "exp",
  "dojox/mobile/EdgeToEdgeCategory": "exp",
  "dojox/mobile/EdgeToEdgeStoreList": "exp",
  "dojox/mobile/EdgeToEdgeDataList": "exp",
  "dojox/mobile/ExpandingTextArea": "exp",
  "dojox/mobile/FixedSplitterPane": "exp",
  "dojox/mobile/Icon": "exp",
  "dojox/mobile/FixedSplitter": "exp",
  "dojox/mobile/FormLayout": "exp",
  "dojox/mobile/GridLayout": "exp",
  "dojox/mobile/IconMenu": "exp",
  "dojox/mobile/IconMenuItem": "exp",
  "dojox/mobile/IconContainer": "exp",
  "dojox/mobile/Heading": "exp",
  "dojox/mobile/LongListMixin": "exp",
  "dojox/mobile/IconItem": "exp",
  "dojox/mobile/ListItem": "exp",
  "dojox/mobile/ListItem.ChildWidgetProperties": "exp",
  "dojox/mobile/Pane": "exp",
  "dojox/mobile/Opener": "exp",
  "dojox/mobile/Overlay": "exp",
  "dojox/mobile/PageIndicator": "exp",
  "dojox/mobile/ProgressBar": "exp",
  "dojox/mobile/ProgressIndicator": "exp",
  "dojox/mobile/RoundRectCategory": "exp",
  "dojox/mobile/RoundRect": "exp",
  "dojox/mobile/RadioButton": "exp",
  "dojox/mobile/RoundRectList": "exp",
  "dojox/mobile/ScreenSizeAware": "exp",
  "dojox/mobile/RoundRectDataList": "exp",
  "dojox/mobile/RoundRectStoreList": "exp",
  "dojox/mobile/ScrollablePane": "exp",
  "dojox/mobile/Rating": "exp",
  "dojox/mobile/Slider": "exp",
  "dojox/mobile/SimpleDialog": "exp",
  "dojox/mobile/SearchBox": "exp",
  "dojox/mobile/ScrollableView": "exp",
  "dojox/mobile/SpinWheel": "exp",
  "dojox/mobile/SpinWheelDatePicker": "exp",
  "dojox/mobile/SpinWheelTimePicker": "exp",
  "dojox/mobile/Switch": "exp",
  "dojox/mobile/SpinWheelSlot": "exp",
  "dojox/mobile/StoreCarousel": "exp",
  "dojox/mobile/TabBar": "exp",
  "dojox/mobile/SwapView": "exp",
  "dojox/mobile/TextArea": "exp",
  "dojox/mobile/ToggleButton": "exp",
  "dojox/mobile/TransitionEvent": "exp",
  "dojox/mobile/Tooltip": "exp",
  "dojox/mobile/TextBox": "exp",
  "dojox/mobile/ToolBarButton": "exp",
  "dojox/mobile/TabBarButton": "exp",
  "dojox/mobile/ValuePicker": "exp",
  "dojox/mobile/ValuePickerSlot": "exp",
  "dojox/mobile/ValuePickerDatePicker": "exp",
  "dojox/mobile/ViewController": "exp",
  "dojox/mobile/TreeView": "exp",
  "dojox/mobile/Video": "exp",
  "dojox/mobile/ValuePickerTimePicker": "exp",
  "dojox/mobile/View": "exp",
  "dojox/mobile/DatePicker": "exp",
  "dojox/mobile/pageTurningUtils": "exp",
  "dojox/mobile/scrollable": "exp",
  "dojox/mobile/TimePicker": "exp",
  "dojox/mobile/_base": "exp",
  "dojox/mobile/_compat": "exp",
  "dojox/mobile/_css3": "exp",
  "dojox/mobile/_PickerChooser": "exp",
  "dojox/mobile/_maskUtils": "exp",
  "dojox/mobile/bookmarkable": "exp",
  "dojox/mobile/common": "exp",
  "dojox/mobile/compat": "exp",
  "dojox/mobile/i18n": "exp",
  "dojox/mobile/i18n.I18NProperties": "exp",
  "dojox/mobile/mobile-all": "exp",
  "dojox/mobile/sniff": "exp",
  "dojox/mobile/transition": "exp",
  "dojox/mobile/uacss": "exp",
  "dojox/mobile/viewRegistry": "exp",
  "dojox/mobile/viewRegistry.hash": "exp",
  "dojox/mobile/bidi/common": "exp",
  "dojox/mobile/bidi/common.MARK": "exp",
  "dojox/mobile/bidi/_ComboBoxMenu": "exp",
  "dojox/mobile/bidi/_ItemBase": "exp",
  "dojox/mobile/bidi/_StoreListMixin": "exp",
  "dojox/mobile/bidi/Accordion": "exp",
  "dojox/mobile/bidi/Badge": "exp",
  "dojox/mobile/bidi/Button": "exp",
  "dojox/mobile/bidi/Carousel": "exp",
  "dojox/mobile/bidi/Heading": "exp",
  "dojox/mobile/bidi/IconMenu": "exp",
  "dojox/mobile/bidi/IconItem": "exp",
  "dojox/mobile/bidi/CarouselItem": "exp",
  "dojox/mobile/bidi/ListItem": "exp",
  "dojox/mobile/bidi/RoundRectCategory": "exp",
  "dojox/mobile/bidi/TabBar": "exp",
  "dojox/mobile/bidi/SwapView": "exp",
  "dojox/mobile/bidi/Switch": "exp",
  "dojox/mobile/bidi/SpinWheelSlot": "exp",
  "dojox/mobile/bidi/TextBox": "exp",
  "dojox/mobile/bidi/TabBarButton": "exp",
  "dojox/mobile/bidi/ToolBarButton": "exp",
  "dojox/mobile/bidi/Tooltip": "exp",
  "dojox/mobile/bidi/ValuePickerSlot": "exp",
  "dojox/mobile/bidi/TreeView": "exp",
  "dojox/mobile/dh/ContentTypeMap": "exp",
  "dojox/mobile/dh/ContentTypeMap.map": "exp",
  "dojox/mobile/dh/PatternFileTypeMap": "exp",
  "dojox/mobile/dh/PatternFileTypeMap.map": "exp",
  "dojox/mobile/dh/SuffixFileTypeMap": "exp",
  "dojox/mobile/dh/SuffixFileTypeMap.map": "exp",
  "dojox/mobile/dh/DataHandler": "exp",
  "dojox/mobile/dh/HtmlContentHandler": "exp",
  "dojox/mobile/dh/HtmlScriptContentHandler": "exp",
  "dojox/mobile/dh/JsonContentHandler": "exp",
  "dojox/mobile/dh/StringDataSource": "exp",
  "dojox/mobile/dh/UrlDataSource": "exp",
  "!name": "dojox.mobile.d.ts",
  "!define": {
    "ret": {
      "unwatch": "fn()"
    },
    "ret1": {
      "unwatch": "fn()"
    },
    "ret2": {
      "unwatch": "fn()"
    },
    "ret3": {
      "unwatch": "fn()"
    },
    "ret4": {
      "unwatch": "fn()"
    },
    "ret5": {
      "unwatch": "fn()"
    },
    "ret6": {
      "unwatch": "fn()"
    },
    "ret7": {
      "unwatch": "fn()"
    },
    "ret8": {
      "unwatch": "fn()"
    },
    "ret9": {
      "unwatch": "fn()"
    },
    "ret10": {
      "unwatch": "fn()"
    },
    "ret11": {
      "unwatch": "fn()"
    },
    "ret12": {
      "unwatch": "fn()"
    },
    "ret13": {
      "unwatch": "fn()"
    },
    "ret14": {
      "unwatch": "fn()"
    },
    "ret15": {
      "unwatch": "fn()"
    },
    "ret16": {
      "unwatch": "fn()"
    },
    "ret17": {
      "unwatch": "fn()"
    },
    "ret18": {
      "unwatch": "fn()"
    },
    "ret19": {
      "unwatch": "fn()"
    },
    "ret20": {
      "unwatch": "fn()"
    },
    "ret21": {
      "unwatch": "fn()"
    },
    "ret22": {
      "unwatch": "fn()"
    },
    "ret23": {
      "unwatch": "fn()"
    },
    "ret24": {
      "unwatch": "fn()"
    },
    "ret25": {
      "unwatch": "fn()"
    },
    "ret26": {
      "unwatch": "fn()"
    },
    "ret27": {
      "unwatch": "fn()"
    },
    "ret28": {
      "unwatch": "fn()"
    },
    "ret29": {
      "unwatch": "fn()"
    },
    "ret30": {
      "unwatch": "fn()"
    },
    "ret31": {
      "unwatch": "fn()"
    },
    "ret32": {
      "unwatch": "fn()"
    },
    "ret33": {
      "unwatch": "fn()"
    },
    "ret34": {
      "unwatch": "fn()"
    },
    "ret35": {
      "unwatch": "fn()"
    },
    "ret36": {
      "unwatch": "fn()"
    },
    "ret37": {
      "unwatch": "fn()"
    },
    "ret38": {
      "unwatch": "fn()"
    },
    "ret39": {
      "unwatch": "fn()"
    },
    "ret40": {
      "unwatch": "fn()"
    },
    "ret41": {
      "unwatch": "fn()"
    },
    "ret42": {
      "unwatch": "fn()"
    },
    "ret43": {
      "unwatch": "fn()"
    },
    "ret44": {
      "unwatch": "fn()"
    },
    "ret45": {
      "unwatch": "fn()"
    },
    "ret46": {
      "unwatch": "fn()"
    },
    "ret47": {
      "unwatch": "fn()"
    },
    "ret48": {
      "unwatch": "fn()"
    },
    "ret49": {
      "unwatch": "fn()"
    },
    "ret50": {
      "unwatch": "fn()"
    },
    "ret51": {
      "unwatch": "fn()"
    },
    "ret52": {
      "unwatch": "fn()"
    },
    "ret53": {
      "unwatch": "fn()"
    },
    "ret54": {
      "unwatch": "fn()"
    },
    "ret55": {
      "unwatch": "fn()"
    },
    "ret56": {
      "unwatch": "fn()"
    },
    "ret57": {
      "unwatch": "fn()"
    },
    "ret58": {
      "unwatch": "fn()"
    },
    "ret59": {
      "unwatch": "fn()"
    },
    "ret60": {
      "unwatch": "fn()"
    },
    "ret61": {
      "unwatch": "fn()"
    },
    "ret62": {
      "unwatch": "fn()"
    },
    "ret63": {
      "unwatch": "fn()"
    },
    "ret64": {
      "unwatch": "fn()"
    },
    "ret65": {
      "unwatch": "fn()"
    },
    "ret66": {
      "unwatch": "fn()"
    },
    "ret67": {
      "unwatch": "fn()"
    },
    "ret68": {
      "unwatch": "fn()"
    },
    "ret69": {
      "unwatch": "fn()"
    },
    "ret70": {
      "unwatch": "fn()"
    },
    "ret71": {
      "unwatch": "fn()"
    },
    "ret72": {
      "unwatch": "fn()"
    },
    "ret73": {
      "unwatch": "fn()"
    },
    "ret74": {
      "unwatch": "fn()"
    },
    "ret75": {
      "unwatch": "fn()"
    },
    "ret76": {
      "unwatch": "fn()"
    },
    "ret77": {
      "unwatch": "fn()"
    },
    "ret78": {
      "unwatch": "fn()"
    },
    "ret79": {
      "unwatch": "fn()"
    },
    "ret80": {
      "unwatch": "fn()"
    },
    "ret81": {
      "unwatch": "fn()"
    },
    "ret82": {
      "unwatch": "fn()"
    },
    "ret83": {
      "unwatch": "fn()"
    },
    "ret84": {
      "unwatch": "fn()"
    },
    "ret85": {
      "unwatch": "fn()"
    },
    "ret86": {
      "unwatch": "fn()"
    },
    "ret87": {
      "unwatch": "fn()"
    },
    "ret88": {
      "unwatch": "fn()"
    },
    "ret89": {
      "unwatch": "fn()"
    },
    "ret90": {
      "unwatch": "fn()"
    },
    "ret91": {
      "unwatch": "fn()"
    },
    "ret92": {
      "unwatch": "fn()"
    },
    "ret93": {
      "unwatch": "fn()"
    },
    "ret94": {
      "unwatch": "fn()"
    },
    "ret95": {
      "unwatch": "fn()"
    },
    "ret96": {
      "unwatch": "fn()"
    },
    "ret97": {
      "unwatch": "fn()"
    },
    "ret98": {
      "unwatch": "fn()"
    },
    "ret99": {
      "unwatch": "fn()"
    },
    "ret100": {
      "unwatch": "fn()"
    },
    "ret101": {
      "unwatch": "fn()"
    },
    "ret102": {
      "unwatch": "fn()"
    },
    "ret103": {
      "unwatch": "fn()"
    },
    "ret104": {
      "unwatch": "fn()"
    },
    "ret105": {
      "unwatch": "fn()"
    },
    "ret106": {
      "unwatch": "fn()"
    },
    "ret107": {
      "unwatch": "fn()"
    },
    "ret108": {
      "unwatch": "fn()"
    },
    "ret109": {
      "unwatch": "fn()"
    },
    "ret110": {
      "unwatch": "fn()"
    },
    "ret111": {
      "unwatch": "fn()"
    },
    "ret112": {
      "unwatch": "fn()"
    },
    "ret113": {
      "unwatch": "fn()"
    },
    "ret114": {
      "unwatch": "fn()"
    },
    "ret115": {
      "unwatch": "fn()"
    },
    "ret116": {
      "unwatch": "fn()"
    },
    "ret117": {
      "unwatch": "fn()"
    },
    "ret118": {
      "unwatch": "fn()"
    },
    "ret119": {
      "unwatch": "fn()"
    },
    "ret120": {
      "unwatch": "fn()"
    },
    "ret121": {
      "unwatch": "fn()"
    },
    "ret122": {
      "unwatch": "fn()"
    },
    "ret123": {
      "unwatch": "fn()"
    },
    "ret124": {
      "unwatch": "fn()"
    },
    "ret125": {
      "unwatch": "fn()"
    },
    "ret126": {
      "unwatch": "fn()"
    },
    "ret127": {
      "unwatch": "fn()"
    },
    "ret128": {
      "unwatch": "fn()"
    },
    "ret129": {
      "unwatch": "fn()"
    },
    "ret130": {
      "unwatch": "fn()"
    },
    "ret131": {
      "unwatch": "fn()"
    },
    "ret132": {
      "unwatch": "fn()"
    },
    "ret133": {
      "unwatch": "fn()"
    },
    "ret134": {
      "unwatch": "fn()"
    },
    "ret135": {
      "unwatch": "fn()"
    },
    "ret136": {
      "unwatch": "fn()"
    },
    "ret137": {
      "unwatch": "fn()"
    },
    "ret138": {
      "unwatch": "fn()"
    },
    "ret139": {
      "unwatch": "fn()"
    },
    "ret140": {
      "unwatch": "fn()"
    },
    "ret141": {
      "unwatch": "fn()"
    },
    "ret142": {
      "unwatch": "fn()"
    },
    "ret143": {
      "unwatch": "fn()"
    },
    "ret144": {
      "unwatch": "fn()"
    },
    "ret145": {
      "unwatch": "fn()"
    },
    "ret146": {
      "unwatch": "fn()"
    },
    "ret147": {
      "unwatch": "fn()"
    },
    "ret148": {
      "unwatch": "fn()"
    },
    "ret149": {
      "unwatch": "fn()"
    },
    "ret150": {
      "unwatch": "fn()"
    },
    "ret151": {
      "unwatch": "fn()"
    },
    "ret152": {
      "unwatch": "fn()"
    },
    "ret153": {
      "unwatch": "fn()"
    },
    "ret154": {
      "unwatch": "fn()"
    },
    "ret155": {
      "unwatch": "fn()"
    },
    "ret156": {
      "unwatch": "fn()"
    },
    "ret157": {
      "unwatch": "fn()"
    },
    "ret158": {
      "unwatch": "fn()"
    },
    "ret159": {
      "unwatch": "fn()"
    },
    "ret160": {
      "unwatch": "fn()"
    },
    "ret161": {
      "unwatch": "fn()"
    },
    "ret162": {
      "unwatch": "fn()"
    },
    "ret163": {
      "unwatch": "fn()"
    },
    "ret164": {
      "unwatch": "fn()"
    },
    "ret165": {
      "unwatch": "fn()"
    },
    "ret166": {
      "unwatch": "fn()"
    },
    "ret167": {
      "unwatch": "fn()"
    },
    "ret168": {
      "unwatch": "fn()"
    },
    "ret169": {
      "unwatch": "fn()"
    },
    "ret170": {
      "unwatch": "fn()"
    },
    "ret171": {
      "unwatch": "fn()"
    },
    "ret172": {
      "unwatch": "fn()"
    },
    "ret173": {
      "unwatch": "fn()"
    },
    "ret174": {
      "unwatch": "fn()"
    },
    "ret175": {
      "unwatch": "fn()"
    },
    "ret176": {
      "unwatch": "fn()"
    },
    "ret177": {
      "unwatch": "fn()"
    },
    "ret178": {
      "unwatch": "fn()"
    },
    "ret179": {
      "unwatch": "fn()"
    },
    "ret180": {
      "unwatch": "fn()"
    },
    "ret181": {
      "unwatch": "fn()"
    },
    "ret182": {
      "unwatch": "fn()"
    },
    "ret183": {
      "unwatch": "fn()"
    },
    "ret184": {
      "unwatch": "fn()"
    },
    "ret185": {
      "unwatch": "fn()"
    },
    "ret186": {
      "unwatch": "fn()"
    },
    "ret187": {
      "unwatch": "fn()"
    },
    "ret188": {
      "unwatch": "fn()"
    },
    "ret189": {
      "unwatch": "fn()"
    },
    "ret190": {
      "unwatch": "fn()"
    },
    "ret191": {
      "unwatch": "fn()"
    },
    "ret192": {
      "unwatch": "fn()"
    },
    "ret193": {
      "unwatch": "fn()"
    },
    "ret194": {
      "unwatch": "fn()"
    },
    "ret195": {
      "unwatch": "fn()"
    },
    "ret196": {
      "unwatch": "fn()"
    },
    "ret197": {
      "unwatch": "fn()"
    },
    "ret198": {
      "unwatch": "fn()"
    },
    "ret199": {
      "unwatch": "fn()"
    },
    "ret200": {
      "unwatch": "fn()"
    },
    "ret201": {
      "unwatch": "fn()"
    },
    "ret202": {
      "unwatch": "fn()"
    },
    "ret203": {
      "unwatch": "fn()"
    },
    "ret204": {
      "unwatch": "fn()"
    },
    "ret205": {
      "unwatch": "fn()"
    },
    "ret206": {
      "unwatch": "fn()"
    },
    "ret207": {
      "unwatch": "fn()"
    },
    "ret208": {
      "unwatch": "fn()"
    },
    "ret209": {
      "unwatch": "fn()"
    },
    "ret210": {
      "unwatch": "fn()"
    },
    "ret211": {
      "unwatch": "fn()"
    },
    "ret212": {
      "unwatch": "fn()"
    },
    "ret213": {
      "unwatch": "fn()"
    },
    "ret214": {
      "unwatch": "fn()"
    },
    "ret215": {
      "unwatch": "fn()"
    },
    "ret216": {
      "unwatch": "fn()"
    },
    "ret217": {
      "unwatch": "fn()"
    },
    "ret218": {
      "unwatch": "fn()"
    },
    "ret219": {
      "unwatch": "fn()"
    },
    "ret220": {
      "unwatch": "fn()"
    },
    "ret221": {
      "unwatch": "fn()"
    },
    "ret222": {
      "unwatch": "fn()"
    },
    "ret223": {
      "unwatch": "fn()"
    },
    "ret224": {
      "unwatch": "fn()"
    },
    "ret225": {
      "unwatch": "fn()"
    },
    "ret226": {
      "unwatch": "fn()"
    },
    "ret227": {
      "unwatch": "fn()"
    },
    "ret228": {
      "unwatch": "fn()"
    },
    "ret229": {
      "unwatch": "fn()"
    },
    "ret230": {
      "unwatch": "fn()"
    },
    "ret231": {
      "unwatch": "fn()"
    },
    "ret232": {
      "unwatch": "fn()"
    },
    "ret233": {
      "unwatch": "fn()"
    },
    "ret234": {
      "unwatch": "fn()"
    },
    "ret235": {
      "unwatch": "fn()"
    },
    "ret236": {
      "unwatch": "fn()"
    },
    "ret237": {
      "unwatch": "fn()"
    },
    "ret238": {
      "unwatch": "fn()"
    },
    "ret239": {
      "unwatch": "fn()"
    },
    "ret240": {
      "unwatch": "fn()"
    },
    "ret241": {
      "unwatch": "fn()"
    },
    "ret242": {
      "unwatch": "fn()"
    },
    "ret243": {
      "unwatch": "fn()"
    },
    "ret244": {
      "unwatch": "fn()"
    },
    "ret245": {
      "unwatch": "fn()"
    },
    "ret246": {
      "unwatch": "fn()"
    },
    "ret247": {
      "unwatch": "fn()"
    },
    "ret248": {
      "unwatch": "fn()"
    },
    "ret249": {
      "unwatch": "fn()"
    },
    "ret250": {
      "unwatch": "fn()"
    },
    "ret251": {
      "unwatch": "fn()"
    },
    "ret252": {
      "unwatch": "fn()"
    },
    "ret253": {
      "unwatch": "fn()"
    },
    "ret254": {
      "unwatch": "fn()"
    },
    "ret255": {
      "unwatch": "fn()"
    },
    "ret256": {
      "unwatch": "fn()"
    },
    "ret257": {
      "unwatch": "fn()"
    },
    "ret258": {
      "unwatch": "fn()"
    },
    "ret259": {
      "unwatch": "fn()"
    },
    "ret260": {
      "unwatch": "fn()"
    },
    "ret261": {
      "unwatch": "fn()"
    },
    "ret262": {
      "unwatch": "fn()"
    },
    "ret263": {
      "unwatch": "fn()"
    },
    "ret264": {
      "unwatch": "fn()"
    },
    "ret265": {
      "unwatch": "fn()"
    },
    "ret266": {
      "unwatch": "fn()"
    },
    "ret267": {
      "unwatch": "fn()"
    },
    "ret268": {
      "unwatch": "fn()"
    },
    "ret269": {
      "unwatch": "fn()"
    },
    "ret270": {
      "unwatch": "fn()"
    },
    "ret271": {
      "unwatch": "fn()"
    },
    "ret272": {
      "unwatch": "fn()"
    },
    "ret273": {
      "unwatch": "fn()"
    },
    "ret274": {
      "unwatch": "fn()"
    },
    "ret275": {
      "unwatch": "fn()"
    },
    "ret276": {
      "unwatch": "fn()"
    },
    "ret277": {
      "unwatch": "fn()"
    },
    "ret278": {
      "unwatch": "fn()"
    },
    "ret279": {
      "unwatch": "fn()"
    },
    "ret280": {
      "unwatch": "fn()"
    },
    "ret281": {
      "unwatch": "fn()"
    },
    "ret282": {
      "unwatch": "fn()"
    },
    "ret283": {
      "unwatch": "fn()"
    },
    "ret284": {
      "unwatch": "fn()"
    },
    "ret285": {
      "unwatch": "fn()"
    },
    "ret286": {
      "unwatch": "fn()"
    },
    "ret287": {
      "unwatch": "fn()"
    },
    "ret288": {
      "unwatch": "fn()"
    },
    "ret289": {
      "unwatch": "fn()"
    },
    "ret290": {
      "unwatch": "fn()"
    },
    "ret291": {
      "unwatch": "fn()"
    },
    "ret292": {
      "unwatch": "fn()"
    },
    "ret293": {
      "unwatch": "fn()"
    },
    "ret294": {
      "unwatch": "fn()"
    },
    "ret295": {
      "unwatch": "fn()"
    },
    "ret296": {
      "unwatch": "fn()"
    },
    "ret297": {
      "unwatch": "fn()"
    },
    "ret298": {
      "unwatch": "fn()"
    },
    "ret299": {
      "unwatch": "fn()"
    },
    "ret300": {
      "unwatch": "fn()"
    },
    "ret301": {
      "unwatch": "fn()"
    },
    "ret302": {
      "unwatch": "fn()"
    },
    "ret303": {
      "unwatch": "fn()"
    },
    "ret304": {
      "unwatch": "fn()"
    },
    "ret305": {
      "unwatch": "fn()"
    },
    "ret306": {
      "unwatch": "fn()"
    },
    "ret307": {
      "unwatch": "fn()"
    },
    "ret308": {
      "unwatch": "fn()"
    },
    "ret309": {
      "unwatch": "fn()"
    },
    "ret310": {
      "unwatch": "fn()"
    },
    "ret311": {
      "unwatch": "fn()"
    },
    "ret312": {
      "unwatch": "fn()"
    },
    "ret313": {
      "unwatch": "fn()"
    },
    "ret314": {
      "unwatch": "fn()"
    },
    "ret315": {
      "unwatch": "fn()"
    },
    "ret316": {
      "unwatch": "fn()"
    },
    "ret317": {
      "unwatch": "fn()"
    },
    "ret318": {
      "unwatch": "fn()"
    },
    "ret319": {
      "unwatch": "fn()"
    },
    "ret320": {
      "unwatch": "fn()"
    },
    "ret321": {
      "unwatch": "fn()"
    },
    "ret322": {
      "unwatch": "fn()"
    },
    "ret323": {
      "unwatch": "fn()"
    },
    "ret324": {
      "unwatch": "fn()"
    },
    "ret325": {
      "unwatch": "fn()"
    },
    "ret326": {
      "unwatch": "fn()"
    },
    "ret327": {
      "unwatch": "fn()"
    },
    "ret328": {
      "unwatch": "fn()"
    },
    "ret329": {
      "unwatch": "fn()"
    },
    "ret330": {
      "unwatch": "fn()"
    },
    "ret331": {
      "unwatch": "fn()"
    },
    "ret332": {
      "unwatch": "fn()"
    },
    "ret333": {
      "unwatch": "fn()"
    },
    "ret334": {
      "unwatch": "fn()"
    },
    "ret335": {
      "unwatch": "fn()"
    },
    "ret336": {
      "unwatch": "fn()"
    },
    "ret337": {
      "unwatch": "fn()"
    },
    "ret338": {
      "unwatch": "fn()"
    },
    "ret339": {
      "unwatch": "fn()"
    },
    "ret340": {
      "unwatch": "fn()"
    },
    "ret341": {
      "unwatch": "fn()"
    },
    "ret342": {
      "unwatch": "fn()"
    },
    "ret343": {
      "unwatch": "fn()"
    },
    "ret344": {
      "unwatch": "fn()"
    },
    "ret345": {
      "unwatch": "fn()"
    },
    "ret346": {
      "unwatch": "fn()"
    },
    "ret347": {
      "unwatch": "fn()"
    },
    "ret348": {
      "unwatch": "fn()"
    },
    "ret349": {
      "unwatch": "fn()"
    },
    "ret350": {
      "unwatch": "fn()"
    },
    "ret351": {
      "unwatch": "fn()"
    },
    "ret352": {
      "unwatch": "fn()"
    },
    "ret353": {
      "unwatch": "fn()"
    },
    "ret354": {
      "unwatch": "fn()"
    },
    "ret355": {
      "unwatch": "fn()"
    },
    "ret356": {
      "unwatch": "fn()"
    },
    "ret357": {
      "unwatch": "fn()"
    },
    "ret358": {
      "unwatch": "fn()"
    },
    "ret359": {
      "unwatch": "fn()"
    },
    "ret360": {
      "unwatch": "fn()"
    },
    "ret361": {
      "unwatch": "fn()"
    },
    "ret362": {
      "unwatch": "fn()"
    },
    "ret363": {
      "unwatch": "fn()"
    },
    "ret364": {
      "unwatch": "fn()"
    },
    "ret365": {
      "unwatch": "fn()"
    },
    "ret366": {
      "unwatch": "fn()"
    },
    "ret367": {
      "unwatch": "fn()"
    },
    "ret368": {
      "unwatch": "fn()"
    },
    "ret369": {
      "unwatch": "fn()"
    },
    "ret370": {
      "unwatch": "fn()"
    },
    "ret371": {
      "unwatch": "fn()"
    },
    "ret372": {
      "unwatch": "fn()"
    },
    "ret373": {
      "unwatch": "fn()"
    },
    "ret374": {
      "unwatch": "fn()"
    },
    "ret375": {
      "unwatch": "fn()"
    },
    "ret376": {
      "unwatch": "fn()"
    },
    "ret377": {
      "unwatch": "fn()"
    },
    "ret378": {
      "unwatch": "fn()"
    },
    "ret379": {
      "unwatch": "fn()"
    },
    "ret380": {
      "unwatch": "fn()"
    },
    "ret381": {
      "unwatch": "fn()"
    },
    "ret382": {
      "unwatch": "fn()"
    },
    "ret383": {
      "unwatch": "fn()"
    },
    "ret384": {
      "unwatch": "fn()"
    },
    "ret385": {
      "unwatch": "fn()"
    },
    "ret386": {
      "unwatch": "fn()"
    },
    "ret387": {
      "unwatch": "fn()"
    },
    "ret388": {
      "unwatch": "fn()"
    },
    "ret389": {
      "unwatch": "fn()"
    },
    "ret390": {
      "unwatch": "fn()"
    },
    "ret391": {
      "unwatch": "fn()"
    },
    "ret392": {
      "unwatch": "fn()"
    },
    "ret393": {
      "unwatch": "fn()"
    },
    "ret394": {
      "unwatch": "fn()"
    },
    "ret395": {
      "unwatch": "fn()"
    },
    "ret396": {
      "unwatch": "fn()"
    },
    "ret397": {
      "unwatch": "fn()"
    },
    "ret398": {
      "unwatch": "fn()"
    },
    "ret399": {
      "unwatch": "fn()"
    },
    "ret400": {
      "unwatch": "fn()"
    },
    "ret401": {
      "unwatch": "fn()"
    },
    "ret402": {
      "unwatch": "fn()"
    },
    "ret403": {
      "unwatch": "fn()"
    },
    "ret404": {
      "unwatch": "fn()"
    },
    "ret405": {
      "unwatch": "fn()"
    },
    "ret406": {
      "unwatch": "fn()"
    },
    "ret407": {
      "unwatch": "fn()"
    },
    "ret408": {
      "unwatch": "fn()"
    },
    "ret409": {
      "unwatch": "fn()"
    },
    "ret410": {
      "unwatch": "fn()"
    },
    "ret411": {
      "unwatch": "fn()"
    },
    "ret412": {
      "unwatch": "fn()"
    },
    "ret413": {
      "unwatch": "fn()"
    },
    "ret414": {
      "unwatch": "fn()"
    },
    "ret415": {
      "unwatch": "fn()"
    },
    "ret416": {
      "unwatch": "fn()"
    },
    "ret417": {
      "unwatch": "fn()"
    },
    "ret418": {
      "unwatch": "fn()"
    },
    "ret419": {
      "unwatch": "fn()"
    },
    "ret420": {
      "unwatch": "fn()"
    },
    "ret421": {
      "unwatch": "fn()"
    },
    "ret422": {
      "unwatch": "fn()"
    },
    "ret423": {
      "unwatch": "fn()"
    },
    "ret424": {
      "unwatch": "fn()"
    },
    "ret425": {
      "unwatch": "fn()"
    },
    "ret426": {
      "unwatch": "fn()"
    },
    "ret427": {
      "unwatch": "fn()"
    },
    "ret428": {
      "unwatch": "fn()"
    },
    "ret429": {
      "unwatch": "fn()"
    },
    "ret430": {
      "unwatch": "fn()"
    },
    "ret431": {
      "unwatch": "fn()"
    },
    "ret432": {
      "unwatch": "fn()"
    },
    "ret433": {
      "unwatch": "fn()"
    },
    "ret434": {
      "unwatch": "fn()"
    },
    "ret435": {
      "unwatch": "fn()"
    },
    "ret436": {
      "unwatch": "fn()"
    },
    "ret437": {
      "unwatch": "fn()"
    },
    "ret438": {
      "unwatch": "fn()"
    },
    "ret439": {
      "unwatch": "fn()"
    },
    "ret440": {
      "unwatch": "fn()"
    },
    "ret441": {
      "unwatch": "fn()"
    },
    "ret442": {
      "unwatch": "fn()"
    },
    "ret443": {
      "unwatch": "fn()"
    },
    "ret444": {
      "unwatch": "fn()"
    },
    "ret445": {
      "unwatch": "fn()"
    },
    "ret446": {
      "unwatch": "fn()"
    },
    "ret447": {
      "unwatch": "fn()"
    },
    "ret448": {
      "unwatch": "fn()"
    },
    "ret449": {
      "unwatch": "fn()"
    },
    "ret450": {
      "unwatch": "fn()"
    },
    "ret451": {
      "unwatch": "fn()"
    },
    "ret452": {
      "unwatch": "fn()"
    },
    "ret453": {
      "unwatch": "fn()"
    },
    "ret454": {
      "unwatch": "fn()"
    },
    "ret455": {
      "unwatch": "fn()"
    },
    "ret456": {
      "unwatch": "fn()"
    },
    "ret457": {
      "unwatch": "fn()"
    },
    "ret458": {
      "unwatch": "fn()"
    },
    "ret459": {
      "unwatch": "fn()"
    },
    "ret460": {
      "unwatch": "fn()"
    },
    "ret461": {
      "unwatch": "fn()"
    },
    "ret462": {
      "unwatch": "fn()"
    },
    "ret463": {
      "unwatch": "fn()"
    },
    "ret464": {
      "unwatch": "fn()"
    },
    "ret465": {
      "unwatch": "fn()"
    },
    "ret466": {
      "unwatch": "fn()"
    },
    "ret467": {
      "unwatch": "fn()"
    },
    "ret468": {
      "unwatch": "fn()"
    },
    "ret469": {
      "unwatch": "fn()"
    },
    "ret470": {
      "unwatch": "fn()"
    },
    "ret471": {
      "unwatch": "fn()"
    },
    "ret472": {
      "unwatch": "fn()"
    },
    "ret473": {
      "unwatch": "fn()"
    },
    "ret474": {
      "unwatch": "fn()"
    },
    "ret475": {
      "unwatch": "fn()"
    },
    "ret476": {
      "unwatch": "fn()"
    },
    "ret477": {
      "unwatch": "fn()"
    },
    "ret478": {
      "unwatch": "fn()"
    },
    "ret479": {
      "unwatch": "fn()"
    },
    "ret480": {
      "unwatch": "fn()"
    },
    "ret481": {
      "unwatch": "fn()"
    },
    "ret482": {
      "unwatch": "fn()"
    },
    "ret483": {
      "unwatch": "fn()"
    },
    "ret484": {
      "unwatch": "fn()"
    },
    "ret485": {
      "unwatch": "fn()"
    },
    "ret486": {
      "unwatch": "fn()"
    },
    "ret487": {
      "unwatch": "fn()"
    },
    "ret488": {
      "unwatch": "fn()"
    },
    "ret489": {
      "unwatch": "fn()"
    },
    "ret490": {
      "unwatch": "fn()"
    },
    "ret491": {
      "unwatch": "fn()"
    },
    "ret492": {
      "unwatch": "fn()"
    },
    "ret493": {
      "unwatch": "fn()"
    },
    "ret494": {
      "unwatch": "fn()"
    },
    "ret495": {
      "unwatch": "fn()"
    },
    "ret496": {
      "unwatch": "fn()"
    },
    "ret497": {
      "unwatch": "fn()"
    },
    "ret498": {
      "unwatch": "fn()"
    },
    "ret499": {
      "unwatch": "fn()"
    },
    "ret500": {
      "unwatch": "fn()"
    },
    "ret501": {
      "unwatch": "fn()"
    },
    "ret502": {
      "unwatch": "fn()"
    },
    "ret503": {
      "unwatch": "fn()"
    },
    "ret504": {
      "unwatch": "fn()"
    },
    "ret505": {
      "unwatch": "fn()"
    },
    "ret506": {
      "unwatch": "fn()"
    },
    "ret507": {
      "unwatch": "fn()"
    },
    "ret508": {
      "unwatch": "fn()"
    },
    "ret509": {
      "unwatch": "fn()"
    },
    "ret510": {
      "unwatch": "fn()"
    },
    "ret511": {
      "unwatch": "fn()"
    },
    "ret512": {
      "unwatch": "fn()"
    },
    "ret513": {
      "unwatch": "fn()"
    },
    "ret514": {
      "unwatch": "fn()"
    },
    "ret515": {
      "unwatch": "fn()"
    },
    "ret516": {
      "unwatch": "fn()"
    },
    "ret517": {
      "unwatch": "fn()"
    },
    "ret518": {
      "unwatch": "fn()"
    },
    "ret519": {
      "unwatch": "fn()"
    },
    "ret520": {
      "unwatch": "fn()"
    },
    "ret521": {
      "unwatch": "fn()"
    },
    "ret522": {
      "unwatch": "fn()"
    },
    "ret523": {
      "unwatch": "fn()"
    },
    "ret524": {
      "unwatch": "fn()"
    },
    "ret525": {
      "unwatch": "fn()"
    },
    "ret526": {
      "unwatch": "fn()"
    },
    "ret527": {
      "unwatch": "fn()"
    },
    "ret528": {
      "unwatch": "fn()"
    },
    "ret529": {
      "unwatch": "fn()"
    },
    "ret530": {
      "unwatch": "fn()"
    },
    "ret531": {
      "unwatch": "fn()"
    },
    "ret532": {
      "unwatch": "fn()"
    },
    "ret533": {
      "unwatch": "fn()"
    },
    "ret534": {
      "unwatch": "fn()"
    },
    "ret535": {
      "unwatch": "fn()"
    },
    "ret536": {
      "unwatch": "fn()"
    },
    "ret537": {
      "unwatch": "fn()"
    },
    "ret538": {
      "unwatch": "fn()"
    },
    "ret539": {
      "unwatch": "fn()"
    },
    "ret540": {
      "unwatch": "fn()"
    },
    "ret541": {
      "unwatch": "fn()"
    },
    "ret542": {
      "unwatch": "fn()"
    },
    "ret543": {
      "unwatch": "fn()"
    },
    "ret544": {
      "unwatch": "fn()"
    },
    "ret545": {
      "unwatch": "fn()"
    },
    "ret546": {
      "unwatch": "fn()"
    },
    "ret547": {
      "unwatch": "fn()"
    },
    "ret548": {
      "unwatch": "fn()"
    },
    "ret549": {
      "unwatch": "fn()"
    },
    "ret550": {
      "unwatch": "fn()"
    },
    "ret551": {
      "unwatch": "fn()"
    },
    "ret552": {
      "unwatch": "fn()"
    },
    "ret553": {
      "unwatch": "fn()"
    },
    "ret554": {
      "unwatch": "fn()"
    },
    "ret555": {
      "unwatch": "fn()"
    },
    "ret556": {
      "unwatch": "fn()"
    },
    "ret557": {
      "unwatch": "fn()"
    },
    "ret558": {
      "unwatch": "fn()"
    },
    "ret559": {
      "unwatch": "fn()"
    },
    "ret560": {
      "unwatch": "fn()"
    },
    "ret561": {
      "unwatch": "fn()"
    },
    "ret562": {
      "unwatch": "fn()"
    },
    "ret563": {
      "unwatch": "fn()"
    },
    "ret564": {
      "unwatch": "fn()"
    },
    "ret565": {
      "unwatch": "fn()"
    },
    "ret566": {
      "unwatch": "fn()"
    },
    "ret567": {
      "unwatch": "fn()"
    },
    "ret568": {
      "unwatch": "fn()"
    },
    "ret569": {
      "unwatch": "fn()"
    },
    "ret570": {
      "unwatch": "fn()"
    },
    "ret571": {
      "unwatch": "fn()"
    },
    "ret572": {
      "unwatch": "fn()"
    },
    "ret573": {
      "unwatch": "fn()"
    },
    "ret574": {
      "unwatch": "fn()"
    },
    "ret575": {
      "unwatch": "fn()"
    },
    "ret576": {
      "unwatch": "fn()"
    },
    "ret577": {
      "unwatch": "fn()"
    },
    "ret578": {
      "unwatch": "fn()"
    },
    "ret579": {
      "unwatch": "fn()"
    },
    "ret580": {
      "unwatch": "fn()"
    },
    "ret581": {
      "unwatch": "fn()"
    },
    "ret582": {
      "unwatch": "fn()"
    },
    "ret583": {
      "unwatch": "fn()"
    },
    "ret584": {
      "unwatch": "fn()"
    },
    "ret585": {
      "unwatch": "fn()"
    },
    "ret586": {
      "unwatch": "fn()"
    },
    "ret587": {
      "unwatch": "fn()"
    },
    "ret588": {
      "unwatch": "fn()"
    },
    "ret589": {
      "unwatch": "fn()"
    },
    "ret590": {
      "unwatch": "fn()"
    },
    "ret591": {
      "unwatch": "fn()"
    },
    "ret592": {
      "unwatch": "fn()"
    },
    "ret593": {
      "unwatch": "fn()"
    },
    "ret594": {
      "unwatch": "fn()"
    },
    "ret595": {
      "unwatch": "fn()"
    },
    "ret596": {
      "unwatch": "fn()"
    },
    "ret597": {
      "unwatch": "fn()"
    },
    "ret598": {
      "unwatch": "fn()"
    },
    "ret599": {
      "unwatch": "fn()"
    },
    "ret600": {
      "unwatch": "fn()"
    },
    "ret601": {
      "unwatch": "fn()"
    },
    "ret602": {
      "unwatch": "fn()"
    },
    "ret603": {
      "unwatch": "fn()"
    },
    "ret604": {
      "unwatch": "fn()"
    },
    "ret605": {
      "unwatch": "fn()"
    },
    "ret606": {
      "unwatch": "fn()"
    },
    "ret607": {
      "unwatch": "fn()"
    },
    "ret608": {
      "unwatch": "fn()"
    },
    "ret609": {
      "unwatch": "fn()"
    },
    "ret610": {
      "unwatch": "fn()"
    },
    "ret611": {
      "unwatch": "fn()"
    },
    "ret612": {
      "unwatch": "fn()"
    },
    "ret613": {
      "unwatch": "fn()"
    },
    "ret614": {
      "unwatch": "fn()"
    },
    "ret615": {
      "unwatch": "fn()"
    },
    "ret616": {
      "unwatch": "fn()"
    },
    "ret617": {
      "unwatch": "fn()"
    },
    "ret618": {
      "unwatch": "fn()"
    },
    "ret619": {
      "unwatch": "fn()"
    },
    "ret620": {
      "unwatch": "fn()"
    },
    "ret621": {
      "unwatch": "fn()"
    },
    "ret622": {
      "unwatch": "fn()"
    },
    "ret623": {
      "unwatch": "fn()"
    },
    "ret624": {
      "unwatch": "fn()"
    },
    "ret625": {
      "unwatch": "fn()"
    },
    "ret626": {
      "unwatch": "fn()"
    },
    "ret627": {
      "unwatch": "fn()"
    },
    "ret628": {
      "unwatch": "fn()"
    },
    "ret629": {
      "unwatch": "fn()"
    },
    "ret630": {
      "unwatch": "fn()"
    },
    "ret631": {
      "unwatch": "fn()"
    },
    "ret632": {
      "unwatch": "fn()"
    },
    "ret633": {
      "unwatch": "fn()"
    },
    "ret634": {
      "unwatch": "fn()"
    },
    "ret635": {
      "unwatch": "fn()"
    },
    "ret636": {
      "unwatch": "fn()"
    },
    "ret637": {
      "unwatch": "fn()"
    },
    "ret638": {
      "unwatch": "fn()"
    },
    "ret639": {
      "unwatch": "fn()"
    },
    "ret640": {
      "unwatch": "fn()"
    },
    "ret641": {
      "unwatch": "fn()"
    },
    "ret642": {
      "unwatch": "fn()"
    },
    "ret643": {
      "unwatch": "fn()"
    },
    "ret644": {
      "unwatch": "fn()"
    },
    "ret645": {
      "unwatch": "fn()"
    },
    "ret646": {
      "unwatch": "fn()"
    },
    "ret647": {
      "unwatch": "fn()"
    },
    "ret648": {
      "unwatch": "fn()"
    },
    "ret649": {
      "unwatch": "fn()"
    },
    "ret650": {
      "unwatch": "fn()"
    },
    "ret651": {
      "unwatch": "fn()"
    },
    "ret652": {
      "unwatch": "fn()"
    },
    "ret653": {
      "unwatch": "fn()"
    },
    "ret654": {
      "unwatch": "fn()"
    },
    "ret655": {
      "unwatch": "fn()"
    },
    "ret656": {
      "unwatch": "fn()"
    },
    "ret657": {
      "unwatch": "fn()"
    },
    "ret658": {
      "unwatch": "fn()"
    },
    "ret659": {
      "unwatch": "fn()"
    },
    "ret660": {
      "unwatch": "fn()"
    },
    "ret661": {
      "unwatch": "fn()"
    },
    "ret662": {
      "unwatch": "fn()"
    },
    "ret663": {
      "unwatch": "fn()"
    },
    "ret664": {
      "unwatch": "fn()"
    },
    "ret665": {
      "unwatch": "fn()"
    },
    "ret666": {
      "unwatch": "fn()"
    },
    "ret667": {
      "unwatch": "fn()"
    },
    "ret668": {
      "unwatch": "fn()"
    },
    "ret669": {
      "unwatch": "fn()"
    },
    "ret670": {
      "unwatch": "fn()"
    },
    "ret671": {
      "unwatch": "fn()"
    },
    "ret672": {
      "unwatch": "fn()"
    },
    "ret673": {
      "unwatch": "fn()"
    },
    "ret674": {
      "unwatch": "fn()"
    },
    "ret675": {
      "unwatch": "fn()"
    },
    "ret676": {
      "unwatch": "fn()"
    },
    "ret677": {
      "unwatch": "fn()"
    },
    "ret678": {
      "unwatch": "fn()"
    },
    "ret679": {
      "unwatch": "fn()"
    },
    "ret680": {
      "unwatch": "fn()"
    },
    "ret681": {
      "unwatch": "fn()"
    },
    "ret682": {
      "unwatch": "fn()"
    },
    "ret683": {
      "unwatch": "fn()"
    },
    "ret684": {
      "unwatch": "fn()"
    },
    "ret685": {
      "unwatch": "fn()"
    },
    "ret686": {
      "unwatch": "fn()"
    },
    "ret687": {
      "unwatch": "fn()"
    },
    "ret688": {
      "unwatch": "fn()"
    },
    "ret689": {
      "unwatch": "fn()"
    },
    "ret690": {
      "unwatch": "fn()"
    },
    "ret691": {
      "unwatch": "fn()"
    },
    "ret692": {
      "unwatch": "fn()"
    },
    "ret693": {
      "unwatch": "fn()"
    },
    "ret694": {
      "unwatch": "fn()"
    },
    "ret695": {
      "unwatch": "fn()"
    },
    "ret696": {
      "unwatch": "fn()"
    },
    "ret697": {
      "unwatch": "fn()"
    },
    "ret698": {
      "unwatch": "fn()"
    },
    "ret699": {
      "unwatch": "fn()"
    },
    "ret700": {
      "unwatch": "fn()"
    },
    "ret701": {
      "unwatch": "fn()"
    },
    "ret702": {
      "unwatch": "fn()"
    },
    "ret703": {
      "unwatch": "fn()"
    },
    "ret704": {
      "unwatch": "fn()"
    },
    "ret705": {
      "unwatch": "fn()"
    },
    "ret706": {
      "unwatch": "fn()"
    },
    "ret707": {
      "unwatch": "fn()"
    },
    "ret708": {
      "unwatch": "fn()"
    },
    "ret709": {
      "unwatch": "fn()"
    },
    "ret710": {
      "unwatch": "fn()"
    },
    "ret711": {
      "unwatch": "fn()"
    },
    "ret712": {
      "unwatch": "fn()"
    },
    "ret713": {
      "unwatch": "fn()"
    },
    "ret714": {
      "unwatch": "fn()"
    },
    "ret715": {
      "unwatch": "fn()"
    },
    "ret716": {
      "unwatch": "fn()"
    },
    "ret717": {
      "unwatch": "fn()"
    },
    "ret718": {
      "unwatch": "fn()"
    },
    "ret719": {
      "unwatch": "fn()"
    },
    "ret720": {
      "unwatch": "fn()"
    },
    "ret721": {
      "unwatch": "fn()"
    },
    "ret722": {
      "unwatch": "fn()"
    },
    "ret723": {
      "unwatch": "fn()"
    },
    "ret724": {
      "unwatch": "fn()"
    },
    "ret725": {
      "unwatch": "fn()"
    },
    "ret726": {
      "unwatch": "fn()"
    },
    "ret727": {
      "unwatch": "fn()"
    },
    "ret728": {
      "unwatch": "fn()"
    },
    "ret729": {
      "unwatch": "fn()"
    },
    "ret730": {
      "unwatch": "fn()"
    },
    "ret731": {
      "unwatch": "fn()"
    },
    "ret732": {
      "unwatch": "fn()"
    },
    "ret733": {
      "unwatch": "fn()"
    },
    "ret734": {
      "unwatch": "fn()"
    },
    "ret735": {
      "unwatch": "fn()"
    },
    "ret736": {
      "unwatch": "fn()"
    },
    "ret737": {
      "unwatch": "fn()"
    },
    "ret738": {
      "unwatch": "fn()"
    },
    "ret739": {
      "unwatch": "fn()"
    },
    "ret740": {
      "unwatch": "fn()"
    },
    "ret741": {
      "unwatch": "fn()"
    },
    "ret742": {
      "unwatch": "fn()"
    },
    "ret743": {
      "unwatch": "fn()"
    },
    "ret744": {
      "unwatch": "fn()"
    },
    "ret745": {
      "unwatch": "fn()"
    },
    "ret746": {
      "unwatch": "fn()"
    },
    "ret747": {
      "unwatch": "fn()"
    },
    "ret748": {
      "unwatch": "fn()"
    },
    "ret749": {
      "unwatch": "fn()"
    },
    "ret750": {
      "unwatch": "fn()"
    },
    "ret751": {
      "unwatch": "fn()"
    },
    "ret752": {
      "unwatch": "fn()"
    },
    "ret753": {
      "unwatch": "fn()"
    },
    "ret754": {
      "unwatch": "fn()"
    },
    "ret755": {
      "unwatch": "fn()"
    },
    "ret756": {
      "unwatch": "fn()"
    },
    "ret757": {
      "unwatch": "fn()"
    },
    "ret758": {
      "unwatch": "fn()"
    },
    "ret759": {
      "unwatch": "fn()"
    },
    "ret760": {
      "unwatch": "fn()"
    },
    "ret761": {
      "unwatch": "fn()"
    },
    "ret762": {
      "unwatch": "fn()"
    },
    "ret763": {
      "unwatch": "fn()"
    },
    "ret764": {
      "unwatch": "fn()"
    },
    "ret765": {
      "unwatch": "fn()"
    },
    "ret766": {
      "unwatch": "fn()"
    },
    "ret767": {
      "unwatch": "fn()"
    },
    "ret768": {
      "unwatch": "fn()"
    },
    "ret769": {
      "unwatch": "fn()"
    },
    "ret770": {
      "unwatch": "fn()"
    },
    "ret771": {
      "unwatch": "fn()"
    },
    "ret772": {
      "unwatch": "fn()"
    },
    "ret773": {
      "unwatch": "fn()"
    },
    "ret774": {
      "unwatch": "fn()"
    },
    "ret775": {
      "unwatch": "fn()"
    },
    "ret776": {
      "unwatch": "fn()"
    },
    "ret777": {
      "unwatch": "fn()"
    },
    "ret778": {
      "unwatch": "fn()"
    },
    "ret779": {
      "unwatch": "fn()"
    },
    "ret780": {
      "unwatch": "fn()"
    },
    "ret781": {
      "unwatch": "fn()"
    },
    "ret782": {
      "unwatch": "fn()"
    },
    "ret783": {
      "unwatch": "fn()"
    },
    "ret784": {
      "unwatch": "fn()"
    },
    "ret785": {
      "unwatch": "fn()"
    },
    "ret786": {
      "unwatch": "fn()"
    },
    "ret787": {
      "unwatch": "fn()"
    },
    "ret788": {
      "unwatch": "fn()"
    },
    "ret789": {
      "unwatch": "fn()"
    },
    "ret790": {
      "unwatch": "fn()"
    },
    "ret791": {
      "unwatch": "fn()"
    },
    "ret792": {
      "unwatch": "fn()"
    },
    "ret793": {
      "unwatch": "fn()"
    },
    "ret794": {
      "unwatch": "fn()"
    },
    "ret795": {
      "unwatch": "fn()"
    },
    "ret796": {
      "unwatch": "fn()"
    },
    "ret797": {
      "unwatch": "fn()"
    },
    "ret798": {
      "unwatch": "fn()"
    },
    "ret799": {
      "unwatch": "fn()"
    },
    "ret800": {
      "unwatch": "fn()"
    },
    "ret801": {
      "unwatch": "fn()"
    },
    "ret802": {
      "unwatch": "fn()"
    },
    "ret803": {
      "unwatch": "fn()"
    },
    "ret804": {
      "unwatch": "fn()"
    },
    "ret805": {
      "unwatch": "fn()"
    },
    "ret806": {
      "unwatch": "fn()"
    },
    "ret807": {
      "unwatch": "fn()"
    },
    "ret808": {
      "unwatch": "fn()"
    },
    "ret809": {
      "unwatch": "fn()"
    },
    "ret810": {
      "unwatch": "fn()"
    },
    "ret811": {
      "unwatch": "fn()"
    },
    "ret812": {
      "unwatch": "fn()"
    },
    "ret813": {
      "unwatch": "fn()"
    },
    "ret814": {
      "unwatch": "fn()"
    },
    "ret815": {
      "unwatch": "fn()"
    },
    "ret816": {
      "unwatch": "fn()"
    },
    "ret817": {
      "unwatch": "fn()"
    },
    "ret818": {
      "unwatch": "fn()"
    },
    "ret819": {
      "unwatch": "fn()"
    },
    "ret820": {
      "unwatch": "fn()"
    },
    "ret821": {
      "unwatch": "fn()"
    },
    "ret822": {
      "unwatch": "fn()"
    },
    "ret823": {
      "unwatch": "fn()"
    },
    "ret824": {
      "unwatch": "fn()"
    },
    "ret825": {
      "unwatch": "fn()"
    },
    "ret826": {
      "unwatch": "fn()"
    },
    "ret827": {
      "unwatch": "fn()"
    },
    "ret828": {
      "unwatch": "fn()"
    },
    "ret829": {
      "unwatch": "fn()"
    },
    "ret830": {
      "unwatch": "fn()"
    },
    "ret831": {
      "unwatch": "fn()"
    },
    "ret832": {
      "unwatch": "fn()"
    },
    "ret833": {
      "unwatch": "fn()"
    },
    "ret834": {
      "unwatch": "fn()"
    },
    "ret835": {
      "unwatch": "fn()"
    },
    "ret836": {
      "unwatch": "fn()"
    },
    "ret837": {
      "unwatch": "fn()"
    },
    "ret838": {
      "unwatch": "fn()"
    },
    "ret839": {
      "unwatch": "fn()"
    },
    "ret840": {
      "unwatch": "fn()"
    },
    "ret841": {
      "unwatch": "fn()"
    },
    "ret842": {
      "unwatch": "fn()"
    },
    "ret843": {
      "unwatch": "fn()"
    },
    "ret844": {
      "unwatch": "fn()"
    },
    "ret845": {
      "unwatch": "fn()"
    },
    "ret846": {
      "unwatch": "fn()"
    },
    "ret847": {
      "unwatch": "fn()"
    },
    "ret848": {
      "unwatch": "fn()"
    },
    "ret849": {
      "unwatch": "fn()"
    },
    "ret850": {
      "unwatch": "fn()"
    },
    "ret851": {
      "unwatch": "fn()"
    },
    "ret852": {
      "unwatch": "fn()"
    },
    "ret853": {
      "unwatch": "fn()"
    },
    "ret854": {
      "unwatch": "fn()"
    },
    "ret855": {
      "unwatch": "fn()"
    },
    "ret856": {
      "unwatch": "fn()"
    },
    "ret857": {
      "unwatch": "fn()"
    },
    "ret858": {
      "unwatch": "fn()"
    },
    "ret859": {
      "unwatch": "fn()"
    },
    "ret860": {
      "unwatch": "fn()"
    },
    "ret861": {
      "unwatch": "fn()"
    },
    "ret862": {
      "unwatch": "fn()"
    },
    "ret863": {
      "unwatch": "fn()"
    },
    "ret864": {
      "unwatch": "fn()"
    },
    "ret865": {
      "unwatch": "fn()"
    },
    "ret866": {
      "unwatch": "fn()"
    },
    "ret867": {
      "unwatch": "fn()"
    },
    "ret868": {
      "unwatch": "fn()"
    },
    "ret869": {
      "unwatch": "fn()"
    },
    "ret870": {
      "unwatch": "fn()"
    },
    "ret871": {
      "unwatch": "fn()"
    },
    "ret872": {
      "unwatch": "fn()"
    },
    "ret873": {
      "unwatch": "fn()"
    },
    "ret874": {
      "unwatch": "fn()"
    },
    "ret875": {
      "unwatch": "fn()"
    },
    "ret876": {
      "unwatch": "fn()"
    },
    "ret877": {
      "unwatch": "fn()"
    },
    "ret878": {
      "unwatch": "fn()"
    },
    "ret879": {
      "unwatch": "fn()"
    },
    "ret880": {
      "unwatch": "fn()"
    },
    "ret881": {
      "unwatch": "fn()"
    },
    "ret882": {
      "unwatch": "fn()"
    },
    "ret883": {
      "unwatch": "fn()"
    },
    "ret884": {
      "unwatch": "fn()"
    },
    "ret885": {
      "unwatch": "fn()"
    },
    "ret886": {
      "unwatch": "fn()"
    },
    "ret887": {
      "unwatch": "fn()"
    },
    "ret888": {
      "unwatch": "fn()"
    },
    "ret889": {
      "unwatch": "fn()"
    },
    "ret890": {
      "unwatch": "fn()"
    },
    "ret891": {
      "unwatch": "fn()"
    },
    "ret892": {
      "unwatch": "fn()"
    },
    "ret893": {
      "unwatch": "fn()"
    },
    "ret894": {
      "unwatch": "fn()"
    },
    "ret895": {
      "unwatch": "fn()"
    },
    "ret896": {
      "unwatch": "fn()"
    },
    "ret897": {
      "unwatch": "fn()"
    },
    "ret898": {
      "unwatch": "fn()"
    },
    "ret899": {
      "unwatch": "fn()"
    },
    "ret900": {
      "unwatch": "fn()"
    },
    "ret901": {
      "unwatch": "fn()"
    },
    "ret902": {
      "unwatch": "fn()"
    },
    "ret903": {
      "unwatch": "fn()"
    },
    "ret904": {
      "unwatch": "fn()"
    },
    "ret905": {
      "unwatch": "fn()"
    },
    "ret906": {
      "unwatch": "fn()"
    },
    "ret907": {
      "unwatch": "fn()"
    },
    "ret908": {
      "unwatch": "fn()"
    },
    "ret909": {
      "unwatch": "fn()"
    },
    "ret910": {
      "unwatch": "fn()"
    },
    "ret911": {
      "unwatch": "fn()"
    },
    "ret912": {
      "unwatch": "fn()"
    },
    "ret913": {
      "unwatch": "fn()"
    },
    "ret914": {
      "unwatch": "fn()"
    },
    "ret915": {
      "unwatch": "fn()"
    },
    "ret916": {
      "unwatch": "fn()"
    },
    "ret917": {
      "unwatch": "fn()"
    },
    "ret918": {
      "unwatch": "fn()"
    },
    "ret919": {
      "unwatch": "fn()"
    },
    "ret920": {
      "unwatch": "fn()"
    },
    "ret921": {
      "unwatch": "fn()"
    },
    "ret922": {
      "unwatch": "fn()"
    },
    "ret923": {
      "unwatch": "fn()"
    },
    "ret924": {
      "unwatch": "fn()"
    },
    "ret925": {
      "unwatch": "fn()"
    },
    "ret926": {
      "unwatch": "fn()"
    },
    "ret927": {
      "unwatch": "fn()"
    },
    "ret928": {
      "unwatch": "fn()"
    },
    "ret929": {
      "unwatch": "fn()"
    },
    "ret930": {
      "unwatch": "fn()"
    },
    "ret931": {
      "unwatch": "fn()"
    },
    "ret932": {
      "unwatch": "fn()"
    },
    "ret933": {
      "unwatch": "fn()"
    },
    "ret934": {
      "unwatch": "fn()"
    },
    "ret935": {
      "unwatch": "fn()"
    },
    "ret936": {
      "unwatch": "fn()"
    },
    "ret937": {
      "unwatch": "fn()"
    },
    "ret938": {
      "unwatch": "fn()"
    },
    "ret939": {
      "unwatch": "fn()"
    },
    "ret940": {
      "unwatch": "fn()"
    },
    "ret941": {
      "unwatch": "fn()"
    },
    "ret942": {
      "unwatch": "fn()"
    },
    "ret943": {
      "unwatch": "fn()"
    },
    "ret944": {
      "unwatch": "fn()"
    },
    "ret945": {
      "unwatch": "fn()"
    },
    "ret946": {
      "unwatch": "fn()"
    },
    "ret947": {
      "unwatch": "fn()"
    },
    "ret948": {
      "unwatch": "fn()"
    },
    "ret949": {
      "unwatch": "fn()"
    },
    "ret950": {
      "unwatch": "fn()"
    },
    "ret951": {
      "unwatch": "fn()"
    },
    "ret952": {
      "unwatch": "fn()"
    },
    "ret953": {
      "unwatch": "fn()"
    },
    "ret954": {
      "unwatch": "fn()"
    },
    "ret955": {
      "unwatch": "fn()"
    },
    "ret956": {
      "unwatch": "fn()"
    },
    "ret957": {
      "unwatch": "fn()"
    },
    "ret958": {
      "unwatch": "fn()"
    },
    "ret959": {
      "unwatch": "fn()"
    },
    "ret960": {
      "unwatch": "fn()"
    },
    "ret961": {
      "unwatch": "fn()"
    },
    "ret962": {
      "unwatch": "fn()"
    },
    "ret963": {
      "unwatch": "fn()"
    },
    "ret964": {
      "unwatch": "fn()"
    },
    "ret965": {
      "unwatch": "fn()"
    },
    "ret966": {
      "unwatch": "fn()"
    },
    "ret967": {
      "unwatch": "fn()"
    },
    "ret968": {
      "unwatch": "fn()"
    },
    "ret969": {
      "unwatch": "fn()"
    },
    "ret970": {
      "unwatch": "fn()"
    },
    "ret971": {
      "unwatch": "fn()"
    },
    "ret972": {
      "unwatch": "fn()"
    },
    "ret973": {
      "unwatch": "fn()"
    },
    "ret974": {
      "unwatch": "fn()"
    },
    "ret975": {
      "unwatch": "fn()"
    },
    "ret976": {
      "unwatch": "fn()"
    },
    "ret977": {
      "unwatch": "fn()"
    },
    "ret978": {
      "unwatch": "fn()"
    },
    "ret979": {
      "unwatch": "fn()"
    },
    "ret980": {
      "unwatch": "fn()"
    },
    "ret981": {
      "unwatch": "fn()"
    },
    "ret982": {
      "unwatch": "fn()"
    },
    "ret983": {
      "unwatch": "fn()"
    },
    "ret984": {
      "unwatch": "fn()"
    },
    "ret985": {
      "unwatch": "fn()"
    },
    "ret986": {
      "unwatch": "fn()"
    },
    "ret987": {
      "unwatch": "fn()"
    },
    "ret988": {
      "unwatch": "fn()"
    },
    "ret989": {
      "unwatch": "fn()"
    },
    "ret990": {
      "unwatch": "fn()"
    },
    "ret991": {
      "unwatch": "fn()"
    },
    "ret992": {
      "unwatch": "fn()"
    },
    "ret993": {
      "unwatch": "fn()"
    },
    "ret994": {
      "unwatch": "fn()"
    },
    "ret995": {
      "unwatch": "fn()"
    },
    "ret996": {
      "unwatch": "fn()"
    },
    "ret997": {
      "unwatch": "fn()"
    },
    "ret998": {
      "unwatch": "fn()"
    },
    "ret999": {
      "unwatch": "fn()"
    },
    "ret1000": {
      "unwatch": "fn()"
    },
    "ret1001": {
      "unwatch": "fn()"
    },
    "ret1002": {
      "unwatch": "fn()"
    },
    "ret1003": {
      "unwatch": "fn()"
    },
    "ret1004": {
      "unwatch": "fn()"
    },
    "ret1005": {
      "unwatch": "fn()"
    },
    "ret1006": {
      "unwatch": "fn()"
    },
    "ret1007": {
      "unwatch": "fn()"
    },
    "ret1008": {
      "unwatch": "fn()"
    },
    "ret1009": {
      "unwatch": "fn()"
    },
    "ret1010": {
      "unwatch": "fn()"
    },
    "ret1011": {
      "unwatch": "fn()"
    },
    "ret1012": {
      "unwatch": "fn()"
    },
    "ret1013": {
      "unwatch": "fn()"
    },
    "ret1014": {
      "unwatch": "fn()"
    },
    "ret1015": {
      "unwatch": "fn()"
    },
    "ret1016": {
      "unwatch": "fn()"
    },
    "ret1017": {
      "unwatch": "fn()"
    },
    "ret1018": {
      "unwatch": "fn()"
    },
    "ret1019": {
      "unwatch": "fn()"
    },
    "ret1020": {
      "unwatch": "fn()"
    },
    "ret1021": {
      "unwatch": "fn()"
    },
    "ret1022": {
      "unwatch": "fn()"
    },
    "ret1023": {
      "unwatch": "fn()"
    },
    "ret1024": {
      "unwatch": "fn()"
    },
    "ret1025": {
      "unwatch": "fn()"
    },
    "ret1026": {
      "unwatch": "fn()"
    },
    "ret1027": {
      "unwatch": "fn()"
    },
    "ret1028": {
      "unwatch": "fn()"
    },
    "ret1029": {
      "unwatch": "fn()"
    },
    "ret1030": {
      "unwatch": "fn()"
    },
    "ret1031": {
      "unwatch": "fn()"
    },
    "ret1032": {
      "unwatch": "fn()"
    },
    "ret1033": {
      "unwatch": "fn()"
    },
    "ret1034": {
      "unwatch": "fn()"
    },
    "ret1035": {
      "unwatch": "fn()"
    },
    "ret1036": {
      "unwatch": "fn()"
    },
    "ret1037": {
      "unwatch": "fn()"
    },
    "ret1038": {
      "unwatch": "fn()"
    },
    "ret1039": {
      "unwatch": "fn()"
    },
    "ret1040": {
      "unwatch": "fn()"
    },
    "ret1041": {
      "unwatch": "fn()"
    },
    "ret1042": {
      "unwatch": "fn()"
    },
    "ret1043": {
      "unwatch": "fn()"
    },
    "ret1044": {
      "unwatch": "fn()"
    },
    "ret1045": {
      "unwatch": "fn()"
    },
    "ret1046": {
      "unwatch": "fn()"
    },
    "ret1047": {
      "unwatch": "fn()"
    },
    "ret1048": {
      "unwatch": "fn()"
    },
    "ret1049": {
      "unwatch": "fn()"
    },
    "ret1050": {
      "unwatch": "fn()"
    },
    "ret1051": {
      "unwatch": "fn()"
    },
    "ret1052": {
      "unwatch": "fn()"
    },
    "ret1053": {
      "unwatch": "fn()"
    },
    "ret1054": {
      "unwatch": "fn()"
    },
    "ret1055": {
      "unwatch": "fn()"
    },
    "ret1056": {
      "unwatch": "fn()"
    },
    "ret1057": {
      "unwatch": "fn()"
    },
    "ret1058": {
      "unwatch": "fn()"
    },
    "ret1059": {
      "unwatch": "fn()"
    },
    "ret1060": {
      "unwatch": "fn()"
    },
    "ret1061": {
      "unwatch": "fn()"
    },
    "ret1062": {
      "unwatch": "fn()"
    },
    "ret1063": {
      "unwatch": "fn()"
    },
    "ret1064": {
      "unwatch": "fn()"
    },
    "ret1065": {
      "unwatch": "fn()"
    },
    "ret1066": {
      "unwatch": "fn()"
    },
    "ret1067": {
      "unwatch": "fn()"
    },
    "ret1068": {
      "unwatch": "fn()"
    },
    "ret1069": {
      "unwatch": "fn()"
    },
    "ret1070": {
      "unwatch": "fn()"
    },
    "ret1071": {
      "unwatch": "fn()"
    },
    "ret1072": {
      "unwatch": "fn()"
    },
    "ret1073": {
      "unwatch": "fn()"
    },
    "ret1074": {
      "unwatch": "fn()"
    },
    "ret1075": {
      "unwatch": "fn()"
    },
    "ret1076": {
      "unwatch": "fn()"
    },
    "ret1077": {
      "unwatch": "fn()"
    },
    "ret1078": {
      "unwatch": "fn()"
    },
    "ret1079": {
      "unwatch": "fn()"
    },
    "ret1080": {
      "unwatch": "fn()"
    },
    "ret1081": {
      "unwatch": "fn()"
    },
    "ret1082": {
      "unwatch": "fn()"
    },
    "ret1083": {
      "unwatch": "fn()"
    },
    "ret1084": {
      "unwatch": "fn()"
    },
    "ret1085": {
      "unwatch": "fn()"
    },
    "ret1086": {
      "unwatch": "fn()"
    },
    "ret1087": {
      "unwatch": "fn()"
    },
    "ret1088": {
      "unwatch": "fn()"
    },
    "ret1089": {
      "unwatch": "fn()"
    },
    "ret1090": {
      "unwatch": "fn()"
    },
    "ret1091": {
      "unwatch": "fn()"
    },
    "ret1092": {
      "unwatch": "fn()"
    },
    "ret1093": {
      "unwatch": "fn()"
    },
    "ret1094": {
      "unwatch": "fn()"
    },
    "ret1095": {
      "unwatch": "fn()"
    },
    "ret1096": {
      "unwatch": "fn()"
    },
    "ret1097": {
      "unwatch": "fn()"
    },
    "ret1098": {
      "unwatch": "fn()"
    },
    "ret1099": {
      "unwatch": "fn()"
    },
    "ret1100": {
      "unwatch": "fn()"
    },
    "ret1101": {
      "unwatch": "fn()"
    },
    "ret1102": {
      "unwatch": "fn()"
    },
    "ret1103": {
      "unwatch": "fn()"
    },
    "ret1104": {
      "unwatch": "fn()"
    },
    "ret1105": {
      "unwatch": "fn()"
    },
    "ret1106": {
      "unwatch": "fn()"
    },
    "ret1107": {
      "unwatch": "fn()"
    },
    "ret1108": {
      "unwatch": "fn()"
    },
    "ret1109": {
      "unwatch": "fn()"
    },
    "ret1110": {
      "unwatch": "fn()"
    },
    "ret1111": {
      "unwatch": "fn()"
    },
    "ret1112": {
      "unwatch": "fn()"
    },
    "ret1113": {
      "unwatch": "fn()"
    },
    "ret1114": {
      "unwatch": "fn()"
    },
    "ret1115": {
      "unwatch": "fn()"
    },
    "ret1116": {
      "unwatch": "fn()"
    },
    "ret1117": {
      "unwatch": "fn()"
    },
    "ret1118": {
      "unwatch": "fn()"
    },
    "ret1119": {
      "unwatch": "fn()"
    },
    "ret1120": {
      "unwatch": "fn()"
    },
    "ret1121": {
      "unwatch": "fn()"
    },
    "ret1122": {
      "unwatch": "fn()"
    },
    "ret1123": {
      "unwatch": "fn()"
    },
    "ret1124": {
      "unwatch": "fn()"
    },
    "ret1125": {
      "unwatch": "fn()"
    },
    "ret1126": {
      "unwatch": "fn()"
    },
    "ret1127": {
      "unwatch": "fn()"
    },
    "ret1128": {
      "unwatch": "fn()"
    },
    "ret1129": {
      "unwatch": "fn()"
    },
    "ret1130": {
      "unwatch": "fn()"
    },
    "ret1131": {
      "unwatch": "fn()"
    },
    "ret1132": {
      "unwatch": "fn()"
    },
    "ret1133": {
      "unwatch": "fn()"
    },
    "ret1134": {
      "unwatch": "fn()"
    },
    "ret1135": {
      "unwatch": "fn()"
    },
    "ret1136": {
      "unwatch": "fn()"
    },
    "ret1137": {
      "unwatch": "fn()"
    },
    "ret1138": {
      "unwatch": "fn()"
    },
    "ret1139": {
      "unwatch": "fn()"
    },
    "ret1140": {
      "unwatch": "fn()"
    },
    "ret1141": {
      "unwatch": "fn()"
    },
    "ret1142": {
      "unwatch": "fn()"
    },
    "ret1143": {
      "unwatch": "fn()"
    },
    "ret1144": {
      "unwatch": "fn()"
    },
    "ret1145": {
      "unwatch": "fn()"
    },
    "ret1146": {
      "unwatch": "fn()"
    },
    "ret1147": {
      "unwatch": "fn()"
    },
    "ret1148": {
      "unwatch": "fn()"
    },
    "ret1149": {
      "unwatch": "fn()"
    },
    "ret1150": {
      "unwatch": "fn()"
    },
    "ret1151": {
      "unwatch": "fn()"
    },
    "ret1152": {
      "unwatch": "fn()"
    },
    "ret1153": {
      "unwatch": "fn()"
    },
    "ret1154": {
      "unwatch": "fn()"
    },
    "ret1155": {
      "unwatch": "fn()"
    },
    "ret1156": {
      "unwatch": "fn()"
    },
    "ret1157": {
      "unwatch": "fn()"
    },
    "ret1158": {
      "unwatch": "fn()"
    },
    "ret1159": {
      "unwatch": "fn()"
    },
    "ret1160": {
      "unwatch": "fn()"
    },
    "ret1161": {
      "unwatch": "fn()"
    },
    "ret1162": {
      "unwatch": "fn()"
    },
    "ret1163": {
      "unwatch": "fn()"
    },
    "ret1164": {
      "unwatch": "fn()"
    },
    "ret1165": {
      "unwatch": "fn()"
    },
    "ret1166": {
      "unwatch": "fn()"
    },
    "ret1167": {
      "unwatch": "fn()"
    },
    "ret1168": {
      "unwatch": "fn()"
    },
    "ret1169": {
      "unwatch": "fn()"
    },
    "ret1170": {
      "unwatch": "fn()"
    },
    "ret1171": {
      "unwatch": "fn()"
    },
    "ret1172": {
      "unwatch": "fn()"
    },
    "ret1173": {
      "unwatch": "fn()"
    },
    "ret1174": {
      "unwatch": "fn()"
    },
    "ret1175": {
      "unwatch": "fn()"
    },
    "ret1176": {
      "unwatch": "fn()"
    },
    "ret1177": {
      "unwatch": "fn()"
    },
    "ret1178": {
      "unwatch": "fn()"
    },
    "ret1179": {
      "unwatch": "fn()"
    },
    "ret1180": {
      "unwatch": "fn()"
    },
    "ret1181": {
      "unwatch": "fn()"
    },
    "ret1182": {
      "unwatch": "fn()"
    },
    "ret1183": {
      "unwatch": "fn()"
    },
    "ret1184": {
      "unwatch": "fn()"
    },
    "ret1185": {
      "unwatch": "fn()"
    },
    "ret1186": {
      "unwatch": "fn()"
    },
    "ret1187": {
      "unwatch": "fn()"
    },
    "ret1188": {
      "unwatch": "fn()"
    },
    "ret1189": {
      "unwatch": "fn()"
    },
    "ret1190": {
      "unwatch": "fn()"
    },
    "ret1191": {
      "unwatch": "fn()"
    },
    "ret1192": {
      "unwatch": "fn()"
    },
    "ret1193": {
      "unwatch": "fn()"
    },
    "ret1194": {
      "unwatch": "fn()"
    },
    "ret1195": {
      "unwatch": "fn()"
    },
    "ret1196": {
      "unwatch": "fn()"
    },
    "ret1197": {
      "unwatch": "fn()"
    },
    "ret1198": {
      "unwatch": "fn()"
    },
    "ret1199": {
      "unwatch": "fn()"
    },
    "ret1200": {
      "unwatch": "fn()"
    },
    "ret1201": {
      "unwatch": "fn()"
    },
    "ret1202": {
      "unwatch": "fn()"
    },
    "ret1203": {
      "unwatch": "fn()"
    },
    "ret1204": {
      "unwatch": "fn()"
    },
    "ret1205": {
      "unwatch": "fn()"
    },
    "ret1206": {
      "unwatch": "fn()"
    },
    "ret1207": {
      "unwatch": "fn()"
    },
    "ret1208": {
      "unwatch": "fn()"
    },
    "ret1209": {
      "unwatch": "fn()"
    },
    "ret1210": {
      "unwatch": "fn()"
    },
    "ret1211": {
      "unwatch": "fn()"
    },
    "ret1212": {
      "unwatch": "fn()"
    },
    "ret1213": {
      "unwatch": "fn()"
    },
    "ret1214": {
      "unwatch": "fn()"
    },
    "ret1215": {
      "unwatch": "fn()"
    },
    "ret1216": {
      "unwatch": "fn()"
    },
    "ret1217": {
      "unwatch": "fn()"
    },
    "ret1218": {
      "unwatch": "fn()"
    },
    "ret1219": {
      "unwatch": "fn()"
    },
    "ret1220": {
      "unwatch": "fn()"
    },
    "ret1221": {
      "unwatch": "fn()"
    },
    "ret1222": {
      "unwatch": "fn()"
    },
    "ret1223": {
      "unwatch": "fn()"
    },
    "ret1224": {
      "unwatch": "fn()"
    },
    "ret1225": {
      "unwatch": "fn()"
    },
    "ret1226": {
      "unwatch": "fn()"
    },
    "ret1227": {
      "unwatch": "fn()"
    },
    "ret1228": {
      "unwatch": "fn()"
    },
    "ret1229": {
      "unwatch": "fn()"
    },
    "ret1230": {
      "unwatch": "fn()"
    },
    "ret1231": {
      "unwatch": "fn()"
    },
    "ret1232": {
      "unwatch": "fn()"
    },
    "ret1233": {
      "unwatch": "fn()"
    },
    "ret1234": {
      "unwatch": "fn()"
    },
    "ret1235": {
      "unwatch": "fn()"
    },
    "ret1236": {
      "unwatch": "fn()"
    },
    "ret1237": {
      "unwatch": "fn()"
    },
    "ret1238": {
      "unwatch": "fn()"
    },
    "ret1239": {
      "unwatch": "fn()"
    },
    "ret1240": {
      "unwatch": "fn()"
    },
    "ret1241": {
      "unwatch": "fn()"
    },
    "ret1242": {
      "unwatch": "fn()"
    },
    "ret1243": {
      "unwatch": "fn()"
    },
    "ret1244": {
      "unwatch": "fn()"
    },
    "ret1245": {
      "unwatch": "fn()"
    },
    "ret1246": {
      "unwatch": "fn()"
    },
    "ret1247": {
      "unwatch": "fn()"
    },
    "ret1248": {
      "unwatch": "fn()"
    },
    "ret1249": {
      "unwatch": "fn()"
    },
    "ret1250": {
      "unwatch": "fn()"
    },
    "ret1251": {
      "unwatch": "fn()"
    },
    "ret1252": {
      "unwatch": "fn()"
    },
    "ret1253": {
      "unwatch": "fn()"
    },
    "ret1254": {
      "unwatch": "fn()"
    },
    "ret1255": {
      "unwatch": "fn()"
    },
    "ret1256": {
      "unwatch": "fn()"
    },
    "ret1257": {
      "unwatch": "fn()"
    },
    "ret1258": {
      "unwatch": "fn()"
    },
    "ret1259": {
      "unwatch": "fn()"
    },
    "ret1260": {
      "unwatch": "fn()"
    },
    "ret1261": {
      "unwatch": "fn()"
    },
    "ret1262": {
      "unwatch": "fn()"
    },
    "ret1263": {
      "unwatch": "fn()"
    },
    "ret1264": {
      "unwatch": "fn()"
    },
    "ret1265": {
      "unwatch": "fn()"
    },
    "ret1266": {
      "unwatch": "fn()"
    },
    "ret1267": {
      "unwatch": "fn()"
    },
    "ret1268": {
      "unwatch": "fn()"
    },
    "ret1269": {
      "unwatch": "fn()"
    },
    "ret1270": {
      "unwatch": "fn()"
    },
    "ret1271": {
      "unwatch": "fn()"
    },
    "ret1272": {
      "unwatch": "fn()"
    },
    "ret1273": {
      "unwatch": "fn()"
    },
    "ret1274": {
      "unwatch": "fn()"
    },
    "ret1275": {
      "unwatch": "fn()"
    },
    "ret1276": {
      "unwatch": "fn()"
    },
    "ret1277": {
      "unwatch": "fn()"
    },
    "ret1278": {
      "unwatch": "fn()"
    },
    "ret1279": {
      "unwatch": "fn()"
    },
    "ret1280": {
      "unwatch": "fn()"
    },
    "ret1281": {
      "unwatch": "fn()"
    },
    "ret1282": {
      "unwatch": "fn()"
    },
    "ret1283": {
      "unwatch": "fn()"
    },
    "ret1284": {
      "unwatch": "fn()"
    },
    "ret1285": {
      "unwatch": "fn()"
    },
    "ret1286": {
      "unwatch": "fn()"
    },
    "ret1287": {
      "unwatch": "fn()"
    },
    "ret1288": {
      "unwatch": "fn()"
    },
    "ret1289": {
      "unwatch": "fn()"
    },
    "ret1290": {
      "unwatch": "fn()"
    },
    "ret1291": {
      "unwatch": "fn()"
    },
    "ret1292": {
      "unwatch": "fn()"
    },
    "ret1293": {
      "unwatch": "fn()"
    },
    "ret1294": {
      "unwatch": "fn()"
    },
    "ret1295": {
      "unwatch": "fn()"
    },
    "ret1296": {
      "unwatch": "fn()"
    },
    "ret1297": {
      "unwatch": "fn()"
    },
    "ret1298": {
      "unwatch": "fn()"
    },
    "ret1299": {
      "unwatch": "fn()"
    },
    "ret1300": {
      "unwatch": "fn()"
    },
    "ret1301": {
      "unwatch": "fn()"
    },
    "ret1302": {
      "unwatch": "fn()"
    },
    "ret1303": {
      "unwatch": "fn()"
    },
    "ret1304": {
      "unwatch": "fn()"
    },
    "ret1305": {
      "unwatch": "fn()"
    },
    "ret1306": {
      "unwatch": "fn()"
    },
    "ret1307": {
      "unwatch": "fn()"
    },
    "ret1308": {
      "unwatch": "fn()"
    },
    "ret1309": {
      "unwatch": "fn()"
    },
    "ret1310": {
      "unwatch": "fn()"
    },
    "ret1311": {
      "unwatch": "fn()"
    },
    "ret1312": {
      "unwatch": "fn()"
    },
    "ret1313": {
      "unwatch": "fn()"
    },
    "ret1314": {
      "unwatch": "fn()"
    },
    "ret1315": {
      "unwatch": "fn()"
    },
    "ret1316": {
      "unwatch": "fn()"
    },
    "ret1317": {
      "unwatch": "fn()"
    },
    "ret1318": {
      "unwatch": "fn()"
    },
    "ret1319": {
      "unwatch": "fn()"
    },
    "ret1320": {
      "unwatch": "fn()"
    },
    "ret1321": {
      "unwatch": "fn()"
    },
    "ret1322": {
      "unwatch": "fn()"
    },
    "ret1323": {
      "unwatch": "fn()"
    },
    "ret1324": {
      "unwatch": "fn()"
    },
    "ret1325": {
      "unwatch": "fn()"
    },
    "ret1326": {
      "unwatch": "fn()"
    },
    "ret1327": {
      "unwatch": "fn()"
    },
    "ret1328": {
      "unwatch": "fn()"
    },
    "ret1329": {
      "unwatch": "fn()"
    },
    "ret1330": {
      "unwatch": "fn()"
    },
    "ret1331": {
      "unwatch": "fn()"
    },
    "ret1332": {
      "unwatch": "fn()"
    },
    "ret1333": {
      "unwatch": "fn()"
    },
    "ret1334": {
      "unwatch": "fn()"
    },
    "ret1335": {
      "unwatch": "fn()"
    },
    "ret1336": {
      "unwatch": "fn()"
    },
    "ret1337": {
      "unwatch": "fn()"
    },
    "ret1338": {
      "unwatch": "fn()"
    },
    "ret1339": {
      "unwatch": "fn()"
    },
    "ret1340": {
      "unwatch": "fn()"
    },
    "ret1341": {
      "unwatch": "fn()"
    },
    "ret1342": {
      "unwatch": "fn()"
    },
    "ret1343": {
      "unwatch": "fn()"
    },
    "ret1344": {
      "unwatch": "fn()"
    },
    "ret1345": {
      "unwatch": "fn()"
    },
    "ret1346": {
      "unwatch": "fn()"
    },
    "ret1347": {
      "unwatch": "fn()"
    },
    "ret1348": {
      "unwatch": "fn()"
    },
    "ret1349": {
      "unwatch": "fn()"
    },
    "ret1350": {
      "unwatch": "fn()"
    },
    "ret1351": {
      "unwatch": "fn()"
    },
    "ret1352": {
      "unwatch": "fn()"
    },
    "ret1353": {
      "unwatch": "fn()"
    },
    "ret1354": {
      "unwatch": "fn()"
    },
    "ret1355": {
      "unwatch": "fn()"
    },
    "ret1356": {
      "unwatch": "fn()"
    },
    "ret1357": {
      "unwatch": "fn()"
    },
    "ret1358": {
      "unwatch": "fn()"
    },
    "ret1359": {
      "unwatch": "fn()"
    },
    "ret1360": {
      "unwatch": "fn()"
    },
    "ret1361": {
      "unwatch": "fn()"
    },
    "ret1362": {
      "unwatch": "fn()"
    },
    "ret1363": {
      "unwatch": "fn()"
    },
    "ret1364": {
      "unwatch": "fn()"
    },
    "ret1365": {
      "unwatch": "fn()"
    },
    "ret1366": {
      "unwatch": "fn()"
    },
    "ret1367": {
      "unwatch": "fn()"
    },
    "ret1368": {
      "unwatch": "fn()"
    },
    "ret1369": {
      "unwatch": "fn()"
    },
    "ret1370": {
      "unwatch": "fn()"
    },
    "ret1371": {
      "unwatch": "fn()"
    },
    "ret1372": {
      "unwatch": "fn()"
    },
    "ret1373": {
      "unwatch": "fn()"
    },
    "ret1374": {
      "unwatch": "fn()"
    },
    "ret1375": {
      "unwatch": "fn()"
    },
    "ret1376": {
      "unwatch": "fn()"
    },
    "ret1377": {
      "unwatch": "fn()"
    },
    "ret1378": {
      "unwatch": "fn()"
    },
    "ret1379": {
      "unwatch": "fn()"
    },
    "ret1380": {
      "unwatch": "fn()"
    },
    "ret1381": {
      "unwatch": "fn()"
    },
    "ret1382": {
      "unwatch": "fn()"
    },
    "ret1383": {
      "unwatch": "fn()"
    },
    "ret1384": {
      "unwatch": "fn()"
    },
    "ret1385": {
      "unwatch": "fn()"
    },
    "ret1386": {
      "unwatch": "fn()"
    },
    "ret1387": {
      "unwatch": "fn()"
    },
    "ret1388": {
      "unwatch": "fn()"
    },
    "ret1389": {
      "unwatch": "fn()"
    },
    "ret1390": {
      "unwatch": "fn()"
    },
    "ret1391": {
      "unwatch": "fn()"
    },
    "ret1392": {
      "unwatch": "fn()"
    },
    "ret1393": {
      "unwatch": "fn()"
    },
    "ret1394": {
      "unwatch": "fn()"
    },
    "ret1395": {
      "unwatch": "fn()"
    },
    "ret1396": {
      "unwatch": "fn()"
    },
    "ret1397": {
      "unwatch": "fn()"
    },
    "ret1398": {
      "unwatch": "fn()"
    },
    "ret1399": {
      "unwatch": "fn()"
    },
    "ret1400": {
      "unwatch": "fn()"
    },
    "ret1401": {
      "unwatch": "fn()"
    },
    "ret1402": {
      "unwatch": "fn()"
    },
    "ret1403": {
      "unwatch": "fn()"
    },
    "ret1404": {
      "unwatch": "fn()"
    },
    "ret1405": {
      "unwatch": "fn()"
    },
    "ret1406": {
      "unwatch": "fn()"
    },
    "ret1407": {
      "unwatch": "fn()"
    },
    "ret1408": {
      "unwatch": "fn()"
    },
    "ret1409": {
      "unwatch": "fn()"
    },
    "ret1410": {
      "unwatch": "fn()"
    },
    "ret1411": {
      "unwatch": "fn()"
    },
    "ret1412": {
      "unwatch": "fn()"
    },
    "ret1413": {
      "unwatch": "fn()"
    },
    "ret1414": {
      "unwatch": "fn()"
    },
    "ret1415": {
      "unwatch": "fn()"
    },
    "ret1416": {
      "unwatch": "fn()"
    },
    "ret1417": {
      "unwatch": "fn()"
    },
    "ret1418": {
      "unwatch": "fn()"
    },
    "ret1419": {
      "unwatch": "fn()"
    },
    "ret1420": {
      "unwatch": "fn()"
    },
    "ret1421": {
      "unwatch": "fn()"
    },
    "ret1422": {
      "unwatch": "fn()"
    },
    "ret1423": {
      "unwatch": "fn()"
    },
    "ret1424": {
      "unwatch": "fn()"
    },
    "ret1425": {
      "unwatch": "fn()"
    },
    "ret1426": {
      "unwatch": "fn()"
    },
    "ret1427": {
      "unwatch": "fn()"
    },
    "ret1428": {
      "unwatch": "fn()"
    },
    "ret1429": {
      "unwatch": "fn()"
    },
    "ret1430": {
      "unwatch": "fn()"
    },
    "ret1431": {
      "unwatch": "fn()"
    },
    "ret1432": {
      "unwatch": "fn()"
    },
    "ret1433": {
      "unwatch": "fn()"
    },
    "ret1434": {
      "unwatch": "fn()"
    },
    "ret1435": {
      "unwatch": "fn()"
    },
    "ret1436": {
      "unwatch": "fn()"
    },
    "ret1437": {
      "unwatch": "fn()"
    },
    "ret1438": {
      "unwatch": "fn()"
    },
    "ret1439": {
      "unwatch": "fn()"
    },
    "ret1440": {
      "unwatch": "fn()"
    },
    "ret1441": {
      "unwatch": "fn()"
    },
    "ret1442": {
      "unwatch": "fn()"
    },
    "ret1443": {
      "unwatch": "fn()"
    },
    "ret1444": {
      "unwatch": "fn()"
    },
    "ret1445": {
      "unwatch": "fn()"
    },
    "ret1446": {
      "unwatch": "fn()"
    },
    "ret1447": {
      "unwatch": "fn()"
    },
    "ret1448": {
      "unwatch": "fn()"
    },
    "ret1449": {
      "unwatch": "fn()"
    },
    "ret1450": {
      "unwatch": "fn()"
    },
    "ret1451": {
      "unwatch": "fn()"
    },
    "ret1452": {
      "unwatch": "fn()"
    },
    "ret1453": {
      "unwatch": "fn()"
    },
    "ret1454": {
      "unwatch": "fn()"
    },
    "ret1455": {
      "unwatch": "fn()"
    },
    "ret1456": {
      "unwatch": "fn()"
    },
    "ret1457": {
      "unwatch": "fn()"
    },
    "ret1458": {
      "unwatch": "fn()"
    },
    "ret1459": {
      "unwatch": "fn()"
    },
    "ret1460": {
      "unwatch": "fn()"
    },
    "ret1461": {
      "unwatch": "fn()"
    },
    "ret1462": {
      "unwatch": "fn()"
    },
    "ret1463": {
      "unwatch": "fn()"
    },
    "ret1464": {
      "unwatch": "fn()"
    },
    "ret1465": {
      "unwatch": "fn()"
    },
    "ret1466": {
      "unwatch": "fn()"
    },
    "ret1467": {
      "unwatch": "fn()"
    },
    "ret1468": {
      "unwatch": "fn()"
    },
    "ret1469": {
      "unwatch": "fn()"
    },
    "ret1470": {
      "unwatch": "fn()"
    },
    "ret1471": {
      "unwatch": "fn()"
    },
    "ret1472": {
      "unwatch": "fn()"
    },
    "ret1473": {
      "unwatch": "fn()"
    },
    "ret1474": {
      "unwatch": "fn()"
    },
    "ret1475": {
      "unwatch": "fn()"
    },
    "ret1476": {
      "unwatch": "fn()"
    },
    "ret1477": {
      "unwatch": "fn()"
    },
    "ret1478": {
      "unwatch": "fn()"
    },
    "ret1479": {
      "unwatch": "fn()"
    },
    "ret1480": {
      "unwatch": "fn()"
    },
    "ret1481": {
      "unwatch": "fn()"
    },
    "ret1482": {
      "unwatch": "fn()"
    },
    "ret1483": {
      "unwatch": "fn()"
    },
    "ret1484": {
      "unwatch": "fn()"
    },
    "ret1485": {
      "unwatch": "fn()"
    },
    "ret1486": {
      "unwatch": "fn()"
    },
    "ret1487": {
      "unwatch": "fn()"
    },
    "ret1488": {
      "unwatch": "fn()"
    },
    "ret1489": {
      "unwatch": "fn()"
    },
    "ret1490": {
      "unwatch": "fn()"
    },
    "ret1491": {
      "unwatch": "fn()"
    },
    "ret1492": {
      "unwatch": "fn()"
    },
    "ret1493": {
      "unwatch": "fn()"
    },
    "ret1494": {
      "unwatch": "fn()"
    },
    "ret1495": {
      "unwatch": "fn()"
    },
    "ret1496": {
      "unwatch": "fn()"
    },
    "ret1497": {
      "unwatch": "fn()"
    },
    "ret1498": {
      "unwatch": "fn()"
    },
    "ret1499": {
      "unwatch": "fn()"
    },
    "ret1500": {
      "unwatch": "fn()"
    },
    "ret1501": {
      "unwatch": "fn()"
    },
    "ret1502": {
      "unwatch": "fn()"
    },
    "ret1503": {
      "unwatch": "fn()"
    },
    "ret1504": {
      "unwatch": "fn()"
    },
    "ret1505": {
      "unwatch": "fn()"
    },
    "ret1506": {
      "unwatch": "fn()"
    },
    "ret1507": {
      "unwatch": "fn()"
    },
    "ret1508": {
      "unwatch": "fn()"
    },
    "ret1509": {
      "unwatch": "fn()"
    },
    "ret1510": {
      "unwatch": "fn()"
    },
    "ret1511": {
      "unwatch": "fn()"
    },
    "ret1512": {
      "unwatch": "fn()"
    },
    "ret1513": {
      "unwatch": "fn()"
    },
    "ret1514": {
      "unwatch": "fn()"
    },
    "ret1515": {
      "unwatch": "fn()"
    },
    "ret1516": {
      "unwatch": "fn()"
    },
    "ret1517": {
      "unwatch": "fn()"
    },
    "ret1518": {
      "unwatch": "fn()"
    },
    "ret1519": {
      "unwatch": "fn()"
    },
    "ret1520": {
      "unwatch": "fn()"
    },
    "ret1521": {
      "unwatch": "fn()"
    },
    "ret1522": {
      "unwatch": "fn()"
    },
    "ret1523": {
      "unwatch": "fn()"
    },
    "ret1524": {
      "unwatch": "fn()"
    },
    "ret1525": {
      "unwatch": "fn()"
    },
    "ret1526": {
      "unwatch": "fn()"
    },
    "ret1527": {
      "unwatch": "fn()"
    },
    "ret1528": {
      "unwatch": "fn()"
    },
    "ret1529": {
      "unwatch": "fn()"
    },
    "ret1530": {
      "unwatch": "fn()"
    },
    "ret1531": {
      "unwatch": "fn()"
    },
    "ret1532": {
      "unwatch": "fn()"
    },
    "ret1533": {
      "unwatch": "fn()"
    },
    "ret1534": {
      "unwatch": "fn()"
    },
    "ret1535": {
      "unwatch": "fn()"
    },
    "ret1536": {
      "unwatch": "fn()"
    },
    "ret1537": {
      "unwatch": "fn()"
    },
    "ret1538": {
      "unwatch": "fn()"
    },
    "ret1539": {
      "unwatch": "fn()"
    },
    "ret1540": {
      "unwatch": "fn()"
    },
    "ret1541": {
      "unwatch": "fn()"
    },
    "ret1542": {
      "unwatch": "fn()"
    },
    "ret1543": {
      "unwatch": "fn()"
    },
    "ret1544": {
      "unwatch": "fn()"
    },
    "ret1545": {
      "unwatch": "fn()"
    },
    "ret1546": {
      "unwatch": "fn()"
    },
    "ret1547": {
      "unwatch": "fn()"
    },
    "ret1548": {
      "unwatch": "fn()"
    },
    "ret1549": {
      "unwatch": "fn()"
    },
    "ret1550": {
      "unwatch": "fn()"
    },
    "ret1551": {
      "unwatch": "fn()"
    },
    "ret1552": {
      "unwatch": "fn()"
    },
    "ret1553": {
      "unwatch": "fn()"
    },
    "ret1554": {
      "unwatch": "fn()"
    },
    "ret1555": {
      "unwatch": "fn()"
    },
    "ret1556": {
      "unwatch": "fn()"
    },
    "ret1557": {
      "unwatch": "fn()"
    },
    "ret1558": {
      "unwatch": "fn()"
    },
    "ret1559": {
      "unwatch": "fn()"
    },
    "ret1560": {
      "unwatch": "fn()"
    },
    "ret1561": {
      "unwatch": "fn()"
    },
    "ret1562": {
      "unwatch": "fn()"
    },
    "ret1563": {
      "unwatch": "fn()"
    },
    "ret1564": {
      "unwatch": "fn()"
    },
    "ret1565": {
      "unwatch": "fn()"
    },
    "ret1566": {
      "unwatch": "fn()"
    },
    "ret1567": {
      "unwatch": "fn()"
    },
    "ret1568": {
      "unwatch": "fn()"
    },
    "ret1569": {
      "unwatch": "fn()"
    },
    "ret1570": {
      "unwatch": "fn()"
    },
    "ret1571": {
      "unwatch": "fn()"
    },
    "ret1572": {
      "unwatch": "fn()"
    },
    "ret1573": {
      "unwatch": "fn()"
    },
    "ret1574": {
      "unwatch": "fn()"
    },
    "ret1575": {
      "unwatch": "fn()"
    },
    "ret1576": {
      "unwatch": "fn()"
    },
    "ret1577": {
      "unwatch": "fn()"
    },
    "ret1578": {
      "unwatch": "fn()"
    },
    "ret1579": {
      "unwatch": "fn()"
    },
    "ret1580": {
      "unwatch": "fn()"
    },
    "ret1581": {
      "unwatch": "fn()"
    },
    "ret1582": {
      "unwatch": "fn()"
    },
    "ret1583": {
      "unwatch": "fn()"
    },
    "ret1584": {
      "unwatch": "fn()"
    },
    "ret1585": {
      "unwatch": "fn()"
    },
    "ret1586": {
      "unwatch": "fn()"
    },
    "ret1587": {
      "unwatch": "fn()"
    },
    "ret1588": {
      "unwatch": "fn()"
    },
    "ret1589": {
      "unwatch": "fn()"
    },
    "ret1590": {
      "unwatch": "fn()"
    },
    "ret1591": {
      "unwatch": "fn()"
    },
    "ret1592": {
      "unwatch": "fn()"
    },
    "ret1593": {
      "unwatch": "fn()"
    },
    "ret1594": {
      "unwatch": "fn()"
    },
    "ret1595": {
      "unwatch": "fn()"
    },
    "ret1596": {
      "unwatch": "fn()"
    },
    "ret1597": {
      "unwatch": "fn()"
    },
    "ret1598": {
      "unwatch": "fn()"
    },
    "ret1599": {
      "unwatch": "fn()"
    },
    "ret1600": {
      "unwatch": "fn()"
    },
    "ret1601": {
      "unwatch": "fn()"
    },
    "ret1602": {
      "unwatch": "fn()"
    },
    "ret1603": {
      "unwatch": "fn()"
    },
    "ret1604": {
      "unwatch": "fn()"
    },
    "ret1605": {
      "unwatch": "fn()"
    },
    "ret1606": {
      "unwatch": "fn()"
    },
    "ret1607": {
      "unwatch": "fn()"
    },
    "ret1608": {
      "unwatch": "fn()"
    },
    "ret1609": {
      "unwatch": "fn()"
    },
    "ret1610": {
      "unwatch": "fn()"
    },
    "ret1611": {
      "unwatch": "fn()"
    },
    "ret1612": {
      "unwatch": "fn()"
    },
    "ret1613": {
      "unwatch": "fn()"
    },
    "ret1614": {
      "unwatch": "fn()"
    },
    "ret1615": {
      "unwatch": "fn()"
    },
    "ret1616": {
      "unwatch": "fn()"
    },
    "ret1617": {
      "unwatch": "fn()"
    },
    "ret1618": {
      "unwatch": "fn()"
    },
    "ret1619": {
      "unwatch": "fn()"
    },
    "ret1620": {
      "unwatch": "fn()"
    },
    "ret1621": {
      "unwatch": "fn()"
    },
    "ret1622": {
      "unwatch": "fn()"
    },
    "ret1623": {
      "unwatch": "fn()"
    },
    "ret1624": {
      "unwatch": "fn()"
    },
    "ret1625": {
      "unwatch": "fn()"
    },
    "ret1626": {
      "unwatch": "fn()"
    },
    "ret1627": {
      "unwatch": "fn()"
    },
    "ret1628": {
      "unwatch": "fn()"
    },
    "ret1629": {
      "unwatch": "fn()"
    },
    "ret1630": {
      "unwatch": "fn()"
    },
    "ret1631": {
      "unwatch": "fn()"
    },
    "ret1632": {
      "unwatch": "fn()"
    },
    "ret1633": {
      "unwatch": "fn()"
    },
    "ret1634": {
      "unwatch": "fn()"
    },
    "ret1635": {
      "unwatch": "fn()"
    },
    "ret1636": {
      "unwatch": "fn()"
    },
    "ret1637": {
      "unwatch": "fn()"
    },
    "ret1638": {
      "unwatch": "fn()"
    },
    "ret1639": {
      "unwatch": "fn()"
    },
    "ret1640": {
      "unwatch": "fn()"
    },
    "ret1641": {
      "unwatch": "fn()"
    },
    "ret1642": {
      "unwatch": "fn()"
    },
    "ret1643": {
      "unwatch": "fn()"
    },
    "ret1644": {
      "unwatch": "fn()"
    },
    "ret1645": {
      "unwatch": "fn()"
    },
    "ret1646": {
      "unwatch": "fn()"
    },
    "ret1647": {
      "unwatch": "fn()"
    },
    "ret1648": {
      "unwatch": "fn()"
    },
    "ret1649": {
      "unwatch": "fn()"
    },
    "ret1650": {
      "unwatch": "fn()"
    },
    "ret1651": {
      "unwatch": "fn()"
    },
    "ret1652": {
      "unwatch": "fn()"
    },
    "ret1653": {
      "unwatch": "fn()"
    },
    "ret1654": {
      "unwatch": "fn()"
    },
    "ret1655": {
      "unwatch": "fn()"
    },
    "ret1656": {
      "unwatch": "fn()"
    },
    "ret1657": {
      "unwatch": "fn()"
    },
    "ret1658": {
      "unwatch": "fn()"
    },
    "ret1659": {
      "unwatch": "fn()"
    },
    "ret1660": {
      "unwatch": "fn()"
    },
    "ret1661": {
      "unwatch": "fn()"
    },
    "ret1662": {
      "unwatch": "fn()"
    },
    "ret1663": {
      "unwatch": "fn()"
    },
    "ret1664": {
      "unwatch": "fn()"
    },
    "ret1665": {
      "unwatch": "fn()"
    },
    "ret1666": {
      "unwatch": "fn()"
    },
    "ret1667": {
      "unwatch": "fn()"
    },
    "ret1668": {
      "unwatch": "fn()"
    },
    "ret1669": {
      "unwatch": "fn()"
    },
    "ret1670": {
      "unwatch": "fn()"
    },
    "ret1671": {
      "unwatch": "fn()"
    },
    "ret1672": {
      "unwatch": "fn()"
    },
    "ret1673": {
      "unwatch": "fn()"
    },
    "ret1674": {
      "unwatch": "fn()"
    },
    "ret1675": {
      "unwatch": "fn()"
    },
    "ret1676": {
      "unwatch": "fn()"
    },
    "ret1677": {
      "unwatch": "fn()"
    },
    "ret1678": {
      "unwatch": "fn()"
    },
    "ret1679": {
      "unwatch": "fn()"
    },
    "ret1680": {
      "unwatch": "fn()"
    },
    "ret1681": {
      "unwatch": "fn()"
    },
    "ret1682": {
      "unwatch": "fn()"
    },
    "ret1683": {
      "unwatch": "fn()"
    },
    "ret1684": {
      "unwatch": "fn()"
    },
    "ret1685": {
      "unwatch": "fn()"
    },
    "ret1686": {
      "unwatch": "fn()"
    },
    "ret1687": {
      "unwatch": "fn()"
    },
    "ret1688": {
      "unwatch": "fn()"
    },
    "ret1689": {
      "unwatch": "fn()"
    },
    "ret1690": {
      "unwatch": "fn()"
    },
    "ret1691": {
      "unwatch": "fn()"
    },
    "ret1692": {
      "unwatch": "fn()"
    },
    "ret1693": {
      "unwatch": "fn()"
    },
    "ret1694": {
      "unwatch": "fn()"
    },
    "ret1695": {
      "unwatch": "fn()"
    },
    "ret1696": {
      "unwatch": "fn()"
    },
    "ret1697": {
      "unwatch": "fn()"
    },
    "ret1698": {
      "unwatch": "fn()"
    },
    "ret1699": {
      "unwatch": "fn()"
    },
    "ret1700": {
      "unwatch": "fn()"
    },
    "ret1701": {
      "unwatch": "fn()"
    },
    "ret1702": {
      "unwatch": "fn()"
    },
    "ret1703": {
      "unwatch": "fn()"
    },
    "ret1704": {
      "unwatch": "fn()"
    },
    "ret1705": {
      "unwatch": "fn()"
    },
    "ret1706": {
      "unwatch": "fn()"
    },
    "ret1707": {
      "unwatch": "fn()"
    },
    "ret1708": {
      "unwatch": "fn()"
    },
    "ret1709": {
      "unwatch": "fn()"
    },
    "ret1710": {
      "unwatch": "fn()"
    },
    "ret1711": {
      "unwatch": "fn()"
    },
    "ret1712": {
      "unwatch": "fn()"
    },
    "ret1713": {
      "unwatch": "fn()"
    },
    "ret1714": {
      "unwatch": "fn()"
    },
    "ret1715": {
      "unwatch": "fn()"
    },
    "ret1716": {
      "unwatch": "fn()"
    },
    "ret1717": {
      "unwatch": "fn()"
    },
    "ret1718": {
      "unwatch": "fn()"
    },
    "ret1719": {
      "unwatch": "fn()"
    },
    "ret1720": {
      "unwatch": "fn()"
    },
    "ret1721": {
      "unwatch": "fn()"
    },
    "ret1722": {
      "unwatch": "fn()"
    },
    "ret1723": {
      "unwatch": "fn()"
    },
    "ret1724": {
      "unwatch": "fn()"
    },
    "ret1725": {
      "unwatch": "fn()"
    },
    "ret1726": {
      "unwatch": "fn()"
    },
    "ret1727": {
      "unwatch": "fn()"
    },
    "ret1728": {
      "unwatch": "fn()"
    },
    "ret1729": {
      "unwatch": "fn()"
    },
    "ret1730": {
      "unwatch": "fn()"
    },
    "ret1731": {
      "unwatch": "fn()"
    },
    "ret1732": {
      "unwatch": "fn()"
    },
    "ret1733": {
      "unwatch": "fn()"
    },
    "ret1734": {
      "unwatch": "fn()"
    },
    "ret1735": {
      "unwatch": "fn()"
    },
    "ret1736": {
      "unwatch": "fn()"
    },
    "ret1737": {
      "unwatch": "fn()"
    },
    "ret1738": {
      "unwatch": "fn()"
    },
    "ret1739": {
      "unwatch": "fn()"
    },
    "ret1740": {
      "unwatch": "fn()"
    },
    "ret1741": {
      "unwatch": "fn()"
    },
    "ret1742": {
      "unwatch": "fn()"
    },
    "ret1743": {
      "unwatch": "fn()"
    },
    "ret1744": {
      "unwatch": "fn()"
    },
    "ret1745": {
      "unwatch": "fn()"
    },
    "ret1746": {
      "unwatch": "fn()"
    },
    "ret1747": {
      "unwatch": "fn()"
    },
    "ret1748": {
      "unwatch": "fn()"
    },
    "ret1749": {
      "unwatch": "fn()"
    },
    "ret1750": {
      "unwatch": "fn()"
    },
    "ret1751": {
      "unwatch": "fn()"
    },
    "ret1752": {
      "unwatch": "fn()"
    },
    "ret1753": {
      "unwatch": "fn()"
    },
    "ret1754": {
      "unwatch": "fn()"
    },
    "ret1755": {
      "unwatch": "fn()"
    },
    "ret1756": {
      "unwatch": "fn()"
    },
    "ret1757": {
      "unwatch": "fn()"
    },
    "ret1758": {
      "unwatch": "fn()"
    },
    "ret1759": {
      "unwatch": "fn()"
    },
    "ret1760": {
      "unwatch": "fn()"
    },
    "ret1761": {
      "unwatch": "fn()"
    },
    "ret1762": {
      "unwatch": "fn()"
    },
    "ret1763": {
      "unwatch": "fn()"
    },
    "ret1764": {
      "unwatch": "fn()"
    },
    "ret1765": {
      "unwatch": "fn()"
    },
    "ret1766": {
      "unwatch": "fn()"
    },
    "ret1767": {
      "unwatch": "fn()"
    },
    "ret1768": {
      "unwatch": "fn()"
    },
    "ret1769": {
      "unwatch": "fn()"
    },
    "ret1770": {
      "unwatch": "fn()"
    },
    "ret1771": {
      "unwatch": "fn()"
    },
    "ret1772": {
      "unwatch": "fn()"
    },
    "ret1773": {
      "unwatch": "fn()"
    },
    "ret1774": {
      "unwatch": "fn()"
    },
    "ret1775": {
      "unwatch": "fn()"
    },
    "ret1776": {
      "unwatch": "fn()"
    },
    "ret1777": {
      "unwatch": "fn()"
    },
    "ret1778": {
      "unwatch": "fn()"
    },
    "ret1779": {
      "unwatch": "fn()"
    },
    "ret1780": {
      "unwatch": "fn()"
    },
    "ret1781": {
      "unwatch": "fn()"
    },
    "ret1782": {
      "unwatch": "fn()"
    },
    "ret1783": {
      "unwatch": "fn()"
    },
    "ret1784": {
      "unwatch": "fn()"
    },
    "ret1785": {
      "unwatch": "fn()"
    },
    "ret1786": {
      "unwatch": "fn()"
    }
  }
}
