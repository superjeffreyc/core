{
  "flowjs": {
    "IFlow": {
      "support": "bool",
      "supportDirectory": "bool",
      "opts": "Object",
      "files": "[IFlowFile]",
      "assignBrowse": "fn(domNodes: [HTMLElement], isDirectory: bool, singleFile: bool, attributes: Object)",
      "assignDrop": "fn(domNodes: [HTMLElement])",
      "unAssignDrop": "fn(domNodes: [HTMLElement])",
      "on": "fn(event: string, callback: Function)",
      "off": "fn(event?: string, callback?: Function)",
      "upload": "fn()",
      "pause": "fn()",
      "resume": "fn()",
      "cancel": "fn()",
      "progress": "fn() -> number",
      "isUploading": "fn() -> bool",
      "addFile": "fn(file: File)",
      "removeFile": "fn(file: IFlowFile)",
      "getFromUniqueIdentifier": "fn(uniqueIdentifier: string) -> IFlowFile",
      "getSize": "fn() -> number",
      "sizeUploaded": "fn() -> number",
      "timeRemaining": "fn() -> number"
    },
    "IFlowOptions": {
      "target": "string",
      "singleFile": "bool",
      "chunkSize": "number",
      "forceChunkSize": "bool",
      "simultaneousUploads": "number",
      "fileParameterName": "string",
      "query": "Object",
      "headers": "Object",
      "withCredentials": "bool",
      "method": "string",
      "testMethod": "string",
      "uploadMethod": "string",
      "allowDuplicateUploads": "bool",
      "prioritizeFirstAndLastChunk": "bool",
      "testChunks": "bool",
      "preprocess": "Function",
      "initFileFn": "Function",
      "generateUniqueIdentifier": "Function",
      "maxChunkRetries": "number",
      "chunkRetryInterval": "number",
      "progressCallbacksInterval": "number",
      "speedSmoothingFactor": "number",
      "successStatuses": "[string]",
      "permanentErrors": "[string]"
    },
    "IFlowFile": {
      "flowObj": "IFlow",
      "file": "File",
      "name": "string",
      "relativePath": "string",
      "size": "number",
      "uniqueIdentifier": "string",
      "averageSpeed": "number",
      "currentSpeed": "number",
      "chunks": "[?]",
      "paused": "bool",
      "error": "bool",
      "progress": "fn(relative: bool) -> number",
      "pause": "fn()",
      "resume": "fn()",
      "cancel": "fn()",
      "retry": "fn()",
      "bootstrap": "fn()",
      "isUploading": "fn() -> bool",
      "isComplete": "bool",
      "sizeUploaded": "number",
      "timeRemaining": "number",
      "getExtension": "string",
      "getType": "string"
    }
  },
  "!name": "flowjs.d.ts"
}
