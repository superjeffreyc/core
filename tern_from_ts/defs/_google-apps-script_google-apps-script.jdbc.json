{
  "GoogleAppsScript": {
    "JDBC": {
      "Jdbc": {
        "getCloudSqlConnection": "fn(url: string) -> JdbcConnection",
        "getConnection": "fn(url: string) -> JdbcConnection",
        "newDate": "fn(milliseconds: Integer) -> JdbcDate",
        "newTime": "fn(milliseconds: Integer) -> JdbcTime",
        "newTimestamp": "fn(milliseconds: Integer) -> JdbcTimestamp",
        "parseDate": "fn(date: string) -> JdbcDate",
        "parseTime": "fn(time: string) -> JdbcTime",
        "parseTimestamp": "fn(timestamp: string) -> JdbcTimestamp"
      },
      "JdbcArray": {
        "free": "fn()",
        "getArray": "fn() -> Object",
        "getBaseType": "fn() -> Integer",
        "getBaseTypeName": "fn() -> string",
        "getResultSet": "fn() -> JdbcResultSet"
      },
      "JdbcBlob": {
        "free": "fn()",
        "getAppsScriptBlob": "fn() -> Base.Blob",
        "getAs": "fn(contentType: string) -> Base.Blob",
        "getBytes": "fn(position: Integer, length: Integer) -> [Byte]",
        "length": "fn() -> Integer",
        "position": "fn(pattern: [Byte], start: Integer) -> Integer",
        "setBytes": "fn(position: Integer, blobSource: Base.BlobSource) -> Integer",
        "truncate": "fn(length: Integer)"
      },
      "JdbcCallableStatement": {
        "addBatch": "fn()",
        "cancel": "fn()",
        "clearBatch": "fn()",
        "clearParameters": "fn()",
        "clearWarnings": "fn()",
        "close": "fn()",
        "execute": "fn() -> bool",
        "executeBatch": "fn() -> [Integer]",
        "executeQuery": "fn() -> JdbcResultSet",
        "executeUpdate": "fn() -> Integer",
        "getArray": "fn(parameterIndex: Integer) -> JdbcArray",
        "getBigDecimal": "fn(parameterIndex: Integer) -> BigNumber",
        "getBlob": "fn(parameterIndex: Integer) -> JdbcBlob",
        "getBoolean": "fn(parameterIndex: Integer) -> bool",
        "getByte": "fn(parameterIndex: Integer) -> Byte",
        "getBytes": "fn(parameterIndex: Integer) -> [Byte]",
        "getClob": "fn(parameterIndex: Integer) -> JdbcClob",
        "getConnection": "fn() -> JdbcConnection",
        "getDate": "fn(parameterIndex: Integer) -> JdbcDate",
        "getDouble": "fn(parameterIndex: Integer) -> Number",
        "getFetchDirection": "fn() -> Integer",
        "getFetchSize": "fn() -> Integer",
        "getFloat": "fn(parameterIndex: Integer) -> Number",
        "getGeneratedKeys": "fn() -> JdbcResultSet",
        "getInt": "fn(parameterIndex: Integer) -> Integer",
        "getLong": "fn(parameterIndex: Integer) -> Integer",
        "getMaxFieldSize": "fn() -> Integer",
        "getMaxRows": "fn() -> Integer",
        "getMetaData": "fn() -> JdbcResultSetMetaData",
        "getMoreResults": "fn() -> bool",
        "getNClob": "fn(parameterIndex: Integer) -> JdbcClob",
        "getNString": "fn(parameterIndex: Integer) -> string",
        "getObject": "fn(parameterIndex: Integer) -> Object",
        "getParameterMetaData": "fn() -> JdbcParameterMetaData",
        "getQueryTimeout": "fn() -> Integer",
        "getRef": "fn(parameterIndex: Integer) -> JdbcRef",
        "getResultSet": "fn() -> JdbcResultSet",
        "getResultSetConcurrency": "fn() -> Integer",
        "getResultSetHoldability": "fn() -> Integer",
        "getResultSetType": "fn() -> Integer",
        "getRowId": "fn(parameterIndex: Integer) -> JdbcRowId",
        "getSQLXML": "fn(parameterIndex: Integer) -> JdbcSQLXML",
        "getShort": "fn(parameterIndex: Integer) -> Integer",
        "getString": "fn(parameterIndex: Integer) -> string",
        "getTime": "fn(parameterIndex: Integer) -> JdbcTime",
        "getTimestamp": "fn(parameterIndex: Integer) -> JdbcTimestamp",
        "getURL": "fn(parameterIndex: Integer) -> string",
        "getUpdateCount": "fn() -> Integer",
        "getWarnings": "fn() -> [String]",
        "isClosed": "fn() -> bool",
        "isPoolable": "fn() -> bool",
        "registerOutParameter": "fn(parameterIndex: Integer, sqlType: Integer)",
        "setArray": "fn(parameterIndex: Integer, x: JdbcArray)",
        "setBigDecimal": "fn(parameterIndex: Integer, x: BigNumber)",
        "setBlob": "fn(parameterIndex: Integer, x: JdbcBlob)",
        "setBoolean": "fn(parameterIndex: Integer, x: bool)",
        "setByte": "fn(parameterIndex: Integer, x: Byte)",
        "setBytes": "fn(parameterIndex: Integer, x: [Byte])",
        "setClob": "fn(parameterIndex: Integer, x: JdbcClob)",
        "setCursorName": "fn(name: string)",
        "setDate": "fn(parameterIndex: Integer, x: JdbcDate)",
        "setDouble": "fn(parameterIndex: Integer, x: Number)",
        "setEscapeProcessing": "fn(enable: bool)",
        "setFetchDirection": "fn(direction: Integer)",
        "setFetchSize": "fn(rows: Integer)",
        "setFloat": "fn(parameterIndex: Integer, x: Number)",
        "setInt": "fn(parameterIndex: Integer, x: Integer)",
        "setLong": "fn(parameterIndex: Integer, x: Integer)",
        "setMaxFieldSize": "fn(max: Integer)",
        "setMaxRows": "fn(max: Integer)",
        "setNClob": "fn(parameterIndex: Integer, x: JdbcClob)",
        "setNString": "fn(parameterIndex: Integer, x: string)",
        "setNull": "fn(parameterIndex: Integer, sqlType: Integer)",
        "setObject": "fn(index: Integer, x: Object)",
        "setPoolable": "fn(poolable: bool)",
        "setQueryTimeout": "fn(seconds: Integer)",
        "setRef": "fn(parameterIndex: Integer, x: JdbcRef)",
        "setRowId": "fn(parameterIndex: Integer, x: JdbcRowId)",
        "setSQLXML": "fn(parameterIndex: Integer, x: JdbcSQLXML)",
        "setShort": "fn(parameterIndex: Integer, x: Integer)",
        "setString": "fn(parameterIndex: Integer, x: string)",
        "setTime": "fn(parameterIndex: Integer, x: JdbcTime)",
        "setTimestamp": "fn(parameterIndex: Integer, x: JdbcTimestamp)",
        "setURL": "fn(parameterIndex: Integer, x: string)",
        "wasNull": "fn() -> bool"
      },
      "JdbcClob": {
        "free": "fn()",
        "getAppsScriptBlob": "fn() -> Base.Blob",
        "getAs": "fn(contentType: string) -> Base.Blob",
        "getSubString": "fn(position: Integer, length: Integer) -> string",
        "length": "fn() -> Integer",
        "position": "fn(search: JdbcClob, start: Integer) -> Integer",
        "setString": "fn(position: Integer, blobSource: Base.BlobSource) -> Integer",
        "truncate": "fn(length: Integer)"
      },
      "JdbcConnection": {
        "clearWarnings": "fn()",
        "close": "fn()",
        "commit": "fn()",
        "createArrayOf": "fn(typeName: string, elements: [Object]) -> JdbcArray",
        "createBlob": "fn() -> JdbcBlob",
        "createClob": "fn() -> JdbcClob",
        "createNClob": "fn() -> JdbcClob",
        "createSQLXML": "fn() -> JdbcSQLXML",
        "createStatement": "fn() -> JdbcStatement",
        "createStruct": "fn(typeName: string, attributes: [Object]) -> JdbcStruct",
        "getAutoCommit": "fn() -> bool",
        "getCatalog": "fn() -> string",
        "getHoldability": "fn() -> Integer",
        "getMetaData": "fn() -> JdbcDatabaseMetaData",
        "getTransactionIsolation": "fn() -> Integer",
        "getWarnings": "fn() -> [String]",
        "isClosed": "fn() -> bool",
        "isReadOnly": "fn() -> bool",
        "isValid": "fn(timeout: Integer) -> bool",
        "nativeSQL": "fn(sql: string) -> string",
        "prepareCall": "fn(sql: string) -> JdbcCallableStatement",
        "prepareStatement": "fn(sql: string) -> JdbcPreparedStatement",
        "prepareStatementByIndex": "fn(sql: string, indices: [Integer]) -> JdbcPreparedStatement",
        "prepareStatementByName": "fn(sql: string, columnNames: [String]) -> JdbcPreparedStatement",
        "releaseSavepoint": "fn(savepoint: JdbcSavepoint)",
        "rollback": "fn()",
        "setAutoCommit": "fn(autoCommit: bool)",
        "setCatalog": "fn(catalog: string)",
        "setHoldability": "fn(holdability: Integer)",
        "setReadOnly": "fn(readOnly: bool)",
        "setSavepoint": "fn() -> JdbcSavepoint",
        "setTransactionIsolation": "fn(level: Integer)"
      },
      "JdbcDatabaseMetaData": {
        "allProceduresAreCallable": "fn() -> bool",
        "allTablesAreSelectable": "fn() -> bool",
        "autoCommitFailureClosesAllResultSets": "fn() -> bool",
        "dataDefinitionCausesTransactionCommit": "fn() -> bool",
        "dataDefinitionIgnoredInTransactions": "fn() -> bool",
        "deletesAreDetected": "fn(type: Integer) -> bool",
        "doesMaxRowSizeIncludeBlobs": "fn() -> bool",
        "getAttributes": "fn(catalog: string, schemaPattern: string, typeNamePattern: string, attributeNamePattern: string) -> JdbcResultSet",
        "getBestRowIdentifier": "fn(catalog: string, schema: string, table: string, scope: Integer, nullable: bool) -> JdbcResultSet",
        "getCatalogSeparator": "fn() -> string",
        "getCatalogTerm": "fn() -> string",
        "getCatalogs": "fn() -> JdbcResultSet",
        "getClientInfoProperties": "fn() -> JdbcResultSet",
        "getColumnPrivileges": "fn(catalog: string, schema: string, table: string, columnNamePattern: string) -> JdbcResultSet",
        "getColumns": "fn(catalog: string, schemaPattern: string, tableNamePattern: string, columnNamePattern: string) -> JdbcResultSet",
        "getConnection": "fn() -> JdbcConnection",
        "getCrossReference": "fn(parentCatalog: string, parentSchema: string, parentTable: string, foreignCatalog: string, foreignSchema: string, foreignTable: string) -> JdbcResultSet",
        "getDatabaseMajorVersion": "fn() -> Integer",
        "getDatabaseMinorVersion": "fn() -> Integer",
        "getDatabaseProductName": "fn() -> string",
        "getDatabaseProductVersion": "fn() -> string",
        "getDefaultTransactionIsolation": "fn() -> Integer",
        "getDriverMajorVersion": "fn() -> Integer",
        "getDriverMinorVersion": "fn() -> Integer",
        "getDriverName": "fn() -> string",
        "getDriverVersion": "fn() -> string",
        "getExportedKeys": "fn(catalog: string, schema: string, table: string) -> JdbcResultSet",
        "getExtraNameCharacters": "fn() -> string",
        "getFunctionColumns": "fn(catalog: string, schemaPattern: string, functionNamePattern: string, columnNamePattern: string) -> JdbcResultSet",
        "getFunctions": "fn(catalog: string, schemaPattern: string, functionNamePattern: string) -> JdbcResultSet",
        "getIdentifierQuoteString": "fn() -> string",
        "getImportedKeys": "fn(catalog: string, schema: string, table: string) -> JdbcResultSet",
        "getIndexInfo": "fn(catalog: string, schema: string, table: string, unique: bool, approximate: bool) -> JdbcResultSet",
        "getJDBCMajorVersion": "fn() -> Integer",
        "getJDBCMinorVersion": "fn() -> Integer",
        "getMaxBinaryLiteralLength": "fn() -> Integer",
        "getMaxCatalogNameLength": "fn() -> Integer",
        "getMaxCharLiteralLength": "fn() -> Integer",
        "getMaxColumnNameLength": "fn() -> Integer",
        "getMaxColumnsInGroupBy": "fn() -> Integer",
        "getMaxColumnsInIndex": "fn() -> Integer",
        "getMaxColumnsInOrderBy": "fn() -> Integer",
        "getMaxColumnsInSelect": "fn() -> Integer",
        "getMaxColumnsInTable": "fn() -> Integer",
        "getMaxConnections": "fn() -> Integer",
        "getMaxCursorNameLength": "fn() -> Integer",
        "getMaxIndexLength": "fn() -> Integer",
        "getMaxProcedureNameLength": "fn() -> Integer",
        "getMaxRowSize": "fn() -> Integer",
        "getMaxSchemaNameLength": "fn() -> Integer",
        "getMaxStatementLength": "fn() -> Integer",
        "getMaxStatements": "fn() -> Integer",
        "getMaxTableNameLength": "fn() -> Integer",
        "getMaxTablesInSelect": "fn() -> Integer",
        "getMaxUserNameLength": "fn() -> Integer",
        "getNumericFunctions": "fn() -> string",
        "getPrimaryKeys": "fn(catalog: string, schema: string, table: string) -> JdbcResultSet",
        "getProcedureColumns": "fn(catalog: string, schemaPattern: string, procedureNamePattern: string, columnNamePattern: string) -> JdbcResultSet",
        "getProcedureTerm": "fn() -> string",
        "getProcedures": "fn(catalog: string, schemaPattern: string, procedureNamePattern: string) -> JdbcResultSet",
        "getResultSetHoldability": "fn() -> Integer",
        "getRowIdLifetime": "fn() -> Integer",
        "getSQLKeywords": "fn() -> string",
        "getSQLStateType": "fn() -> Integer",
        "getSchemaTerm": "fn() -> string",
        "getSchemas": "fn() -> JdbcResultSet",
        "getSearchStringEscape": "fn() -> string",
        "getStringFunctions": "fn() -> string",
        "getSuperTables": "fn(catalog: string, schemaPattern: string, tableNamePattern: string) -> JdbcResultSet",
        "getSuperTypes": "fn(catalog: string, schemaPattern: string, typeNamePattern: string) -> JdbcResultSet",
        "getSystemFunctions": "fn() -> string",
        "getTablePrivileges": "fn(catalog: string, schemaPattern: string, tableNamePattern: string) -> JdbcResultSet",
        "getTableTypes": "fn() -> JdbcResultSet",
        "getTables": "fn(catalog: string, schemaPattern: string, tableNamePattern: string, types: [String]) -> JdbcResultSet",
        "getTimeDateFunctions": "fn() -> string",
        "getTypeInfo": "fn() -> JdbcResultSet",
        "getUDTs": "fn(catalog: string, schemaPattern: string, typeNamePattern: string, types: [Integer]) -> JdbcResultSet",
        "getURL": "fn() -> string",
        "getUserName": "fn() -> string",
        "getVersionColumns": "fn(catalog: string, schema: string, table: string) -> JdbcResultSet",
        "insertsAreDetected": "fn(type: Integer) -> bool",
        "isCatalogAtStart": "fn() -> bool",
        "isReadOnly": "fn() -> bool",
        "locatorsUpdateCopy": "fn() -> bool",
        "nullPlusNonNullIsNull": "fn() -> bool",
        "nullsAreSortedAtEnd": "fn() -> bool",
        "nullsAreSortedAtStart": "fn() -> bool",
        "nullsAreSortedHigh": "fn() -> bool",
        "nullsAreSortedLow": "fn() -> bool",
        "othersDeletesAreVisible": "fn(type: Integer) -> bool",
        "othersInsertsAreVisible": "fn(type: Integer) -> bool",
        "othersUpdatesAreVisible": "fn(type: Integer) -> bool",
        "ownDeletesAreVisible": "fn(type: Integer) -> bool",
        "ownInsertsAreVisible": "fn(type: Integer) -> bool",
        "ownUpdatesAreVisible": "fn(type: Integer) -> bool",
        "storesLowerCaseIdentifiers": "fn() -> bool",
        "storesLowerCaseQuotedIdentifiers": "fn() -> bool",
        "storesMixedCaseIdentifiers": "fn() -> bool",
        "storesMixedCaseQuotedIdentifiers": "fn() -> bool",
        "storesUpperCaseIdentifiers": "fn() -> bool",
        "storesUpperCaseQuotedIdentifiers": "fn() -> bool",
        "supportsANSI92EntryLevelSQL": "fn() -> bool",
        "supportsANSI92FullSQL": "fn() -> bool",
        "supportsANSI92IntermediateSQL": "fn() -> bool",
        "supportsAlterTableWithAddColumn": "fn() -> bool",
        "supportsAlterTableWithDropColumn": "fn() -> bool",
        "supportsBatchUpdates": "fn() -> bool",
        "supportsCatalogsInDataManipulation": "fn() -> bool",
        "supportsCatalogsInIndexDefinitions": "fn() -> bool",
        "supportsCatalogsInPrivilegeDefinitions": "fn() -> bool",
        "supportsCatalogsInProcedureCalls": "fn() -> bool",
        "supportsCatalogsInTableDefinitions": "fn() -> bool",
        "supportsColumnAliasing": "fn() -> bool",
        "supportsConvert": "fn() -> bool",
        "supportsCoreSQLGrammar": "fn() -> bool",
        "supportsCorrelatedSubqueries": "fn() -> bool",
        "supportsDataDefinitionAndDataManipulationTransactions": "fn() -> bool",
        "supportsDataManipulationTransactionsOnly": "fn() -> bool",
        "supportsDifferentTableCorrelationNames": "fn() -> bool",
        "supportsExpressionsInOrderBy": "fn() -> bool",
        "supportsExtendedSQLGrammar": "fn() -> bool",
        "supportsFullOuterJoins": "fn() -> bool",
        "supportsGetGeneratedKeys": "fn() -> bool",
        "supportsGroupBy": "fn() -> bool",
        "supportsGroupByBeyondSelect": "fn() -> bool",
        "supportsGroupByUnrelated": "fn() -> bool",
        "supportsIntegrityEnhancementFacility": "fn() -> bool",
        "supportsLikeEscapeClause": "fn() -> bool",
        "supportsLimitedOuterJoins": "fn() -> bool",
        "supportsMinimumSQLGrammar": "fn() -> bool",
        "supportsMixedCaseIdentifiers": "fn() -> bool",
        "supportsMixedCaseQuotedIdentifiers": "fn() -> bool",
        "supportsMultipleOpenResults": "fn() -> bool",
        "supportsMultipleResultSets": "fn() -> bool",
        "supportsMultipleTransactions": "fn() -> bool",
        "supportsNamedParameters": "fn() -> bool",
        "supportsNonNullableColumns": "fn() -> bool",
        "supportsOpenCursorsAcrossCommit": "fn() -> bool",
        "supportsOpenCursorsAcrossRollback": "fn() -> bool",
        "supportsOpenStatementsAcrossCommit": "fn() -> bool",
        "supportsOpenStatementsAcrossRollback": "fn() -> bool",
        "supportsOrderByUnrelated": "fn() -> bool",
        "supportsOuterJoins": "fn() -> bool",
        "supportsPositionedDelete": "fn() -> bool",
        "supportsPositionedUpdate": "fn() -> bool",
        "supportsResultSetConcurrency": "fn(type: Integer, concurrency: Integer) -> bool",
        "supportsResultSetHoldability": "fn(holdability: Integer) -> bool",
        "supportsResultSetType": "fn(type: Integer) -> bool",
        "supportsSavepoints": "fn() -> bool",
        "supportsSchemasInDataManipulation": "fn() -> bool",
        "supportsSchemasInIndexDefinitions": "fn() -> bool",
        "supportsSchemasInPrivilegeDefinitions": "fn() -> bool",
        "supportsSchemasInProcedureCalls": "fn() -> bool",
        "supportsSchemasInTableDefinitions": "fn() -> bool",
        "supportsSelectForUpdate": "fn() -> bool",
        "supportsStatementPooling": "fn() -> bool",
        "supportsStoredFunctionsUsingCallSyntax": "fn() -> bool",
        "supportsStoredProcedures": "fn() -> bool",
        "supportsSubqueriesInComparisons": "fn() -> bool",
        "supportsSubqueriesInExists": "fn() -> bool",
        "supportsSubqueriesInIns": "fn() -> bool",
        "supportsSubqueriesInQuantifieds": "fn() -> bool",
        "supportsTableCorrelationNames": "fn() -> bool",
        "supportsTransactionIsolationLevel": "fn(level: Integer) -> bool",
        "supportsTransactions": "fn() -> bool",
        "supportsUnion": "fn() -> bool",
        "supportsUnionAll": "fn() -> bool",
        "updatesAreDetected": "fn(type: Integer) -> bool",
        "usesLocalFilePerTable": "fn() -> bool",
        "usesLocalFiles": "fn() -> bool"
      },
      "JdbcDate": {
        "after": "fn(when: JdbcDate) -> bool",
        "before": "fn(when: JdbcDate) -> bool",
        "getDate": "fn() -> Integer",
        "getMonth": "fn() -> Integer",
        "getTime": "fn() -> Integer",
        "getYear": "fn() -> Integer",
        "setDate": "fn(date: Integer)",
        "setMonth": "fn(month: Integer)",
        "setTime": "fn(milliseconds: Integer)",
        "setYear": "fn(year: Integer)"
      },
      "JdbcParameterMetaData": {
        "getParameterClassName": "fn(param: Integer) -> string",
        "getParameterCount": "fn() -> Integer",
        "getParameterMode": "fn(param: Integer) -> Integer",
        "getParameterType": "fn(param: Integer) -> Integer",
        "getParameterTypeName": "fn(param: Integer) -> string",
        "getPrecision": "fn(param: Integer) -> Integer",
        "getScale": "fn(param: Integer) -> Integer",
        "isNullable": "fn(param: Integer) -> Integer",
        "isSigned": "fn(param: Integer) -> bool"
      },
      "JdbcPreparedStatement": {
        "addBatch": "fn()",
        "cancel": "fn()",
        "clearBatch": "fn()",
        "clearParameters": "fn()",
        "clearWarnings": "fn()",
        "close": "fn()",
        "execute": "fn() -> bool",
        "executeBatch": "fn() -> [Integer]",
        "executeQuery": "fn() -> JdbcResultSet",
        "executeUpdate": "fn() -> Integer",
        "getConnection": "fn() -> JdbcConnection",
        "getFetchDirection": "fn() -> Integer",
        "getFetchSize": "fn() -> Integer",
        "getGeneratedKeys": "fn() -> JdbcResultSet",
        "getMaxFieldSize": "fn() -> Integer",
        "getMaxRows": "fn() -> Integer",
        "getMetaData": "fn() -> JdbcResultSetMetaData",
        "getMoreResults": "fn() -> bool",
        "getParameterMetaData": "fn() -> JdbcParameterMetaData",
        "getQueryTimeout": "fn() -> Integer",
        "getResultSet": "fn() -> JdbcResultSet",
        "getResultSetConcurrency": "fn() -> Integer",
        "getResultSetHoldability": "fn() -> Integer",
        "getResultSetType": "fn() -> Integer",
        "getUpdateCount": "fn() -> Integer",
        "getWarnings": "fn() -> [String]",
        "isClosed": "fn() -> bool",
        "isPoolable": "fn() -> bool",
        "setArray": "fn(parameterIndex: Integer, x: JdbcArray)",
        "setBigDecimal": "fn(parameterIndex: Integer, x: BigNumber)",
        "setBlob": "fn(parameterIndex: Integer, x: JdbcBlob)",
        "setBoolean": "fn(parameterIndex: Integer, x: bool)",
        "setByte": "fn(parameterIndex: Integer, x: Byte)",
        "setBytes": "fn(parameterIndex: Integer, x: [Byte])",
        "setClob": "fn(parameterIndex: Integer, x: JdbcClob)",
        "setCursorName": "fn(name: string)",
        "setDate": "fn(parameterIndex: Integer, x: JdbcDate)",
        "setDouble": "fn(parameterIndex: Integer, x: Number)",
        "setEscapeProcessing": "fn(enable: bool)",
        "setFetchDirection": "fn(direction: Integer)",
        "setFetchSize": "fn(rows: Integer)",
        "setFloat": "fn(parameterIndex: Integer, x: Number)",
        "setInt": "fn(parameterIndex: Integer, x: Integer)",
        "setLong": "fn(parameterIndex: Integer, x: Integer)",
        "setMaxFieldSize": "fn(max: Integer)",
        "setMaxRows": "fn(max: Integer)",
        "setNClob": "fn(parameterIndex: Integer, x: JdbcClob)",
        "setNString": "fn(parameterIndex: Integer, x: string)",
        "setNull": "fn(parameterIndex: Integer, sqlType: Integer)",
        "setObject": "fn(index: Integer, x: Object)",
        "setPoolable": "fn(poolable: bool)",
        "setQueryTimeout": "fn(seconds: Integer)",
        "setRef": "fn(parameterIndex: Integer, x: JdbcRef)",
        "setRowId": "fn(parameterIndex: Integer, x: JdbcRowId)",
        "setSQLXML": "fn(parameterIndex: Integer, x: JdbcSQLXML)",
        "setShort": "fn(parameterIndex: Integer, x: Integer)",
        "setString": "fn(parameterIndex: Integer, x: string)",
        "setTime": "fn(parameterIndex: Integer, x: JdbcTime)",
        "setTimestamp": "fn(parameterIndex: Integer, x: JdbcTimestamp)",
        "setURL": "fn(parameterIndex: Integer, x: string)"
      },
      "JdbcRef": {
        "getBaseTypeName": "fn() -> string",
        "getObject": "fn() -> Object",
        "setObject": "fn(object: Object)"
      },
      "JdbcResultSet": {
        "absolute": "fn(row: Integer) -> bool",
        "afterLast": "fn()",
        "beforeFirst": "fn()",
        "cancelRowUpdates": "fn()",
        "clearWarnings": "fn()",
        "close": "fn()",
        "deleteRow": "fn()",
        "findColumn": "fn(columnLabel: string) -> Integer",
        "first": "fn() -> bool",
        "getArray": "fn(columnIndex: Integer) -> JdbcArray",
        "getBigDecimal": "fn(columnIndex: Integer) -> BigNumber",
        "getBlob": "fn(columnIndex: Integer) -> JdbcBlob",
        "getBoolean": "fn(columnIndex: Integer) -> bool",
        "getByte": "fn(columnIndex: Integer) -> Byte",
        "getBytes": "fn(columnIndex: Integer) -> [Byte]",
        "getClob": "fn(columnIndex: Integer) -> JdbcClob",
        "getConcurrency": "fn() -> Integer",
        "getCursorName": "fn() -> string",
        "getDate": "fn(columnIndex: Integer) -> JdbcDate",
        "getDouble": "fn(columnIndex: Integer) -> Number",
        "getFetchDirection": "fn() -> Integer",
        "getFetchSize": "fn() -> Integer",
        "getFloat": "fn(columnIndex: Integer) -> Number",
        "getHoldability": "fn() -> Integer",
        "getInt": "fn(columnIndex: Integer) -> Integer",
        "getLong": "fn(columnIndex: Integer) -> Integer",
        "getMetaData": "fn() -> JdbcResultSetMetaData",
        "getNClob": "fn(columnIndex: Integer) -> JdbcClob",
        "getNString": "fn(columnIndex: Integer) -> string",
        "getObject": "fn(columnIndex: Integer) -> Object",
        "getRef": "fn(columnIndex: Integer) -> JdbcRef",
        "getRow": "fn() -> Integer",
        "getRowId": "fn(columnIndex: Integer) -> JdbcRowId",
        "getSQLXML": "fn(columnIndex: Integer) -> JdbcSQLXML",
        "getShort": "fn(columnIndex: Integer) -> Integer",
        "getStatement": "fn() -> JdbcStatement",
        "getString": "fn(columnIndex: Integer) -> string",
        "getTime": "fn(columnIndex: Integer) -> JdbcTime",
        "getTimestamp": "fn(columnIndex: Integer) -> JdbcTimestamp",
        "getType": "fn() -> Integer",
        "getURL": "fn(columnIndex: Integer) -> string",
        "getWarnings": "fn() -> [String]",
        "insertRow": "fn()",
        "isAfterLast": "fn() -> bool",
        "isBeforeFirst": "fn() -> bool",
        "isClosed": "fn() -> bool",
        "isFirst": "fn() -> bool",
        "isLast": "fn() -> bool",
        "last": "fn() -> bool",
        "moveToCurrentRow": "fn()",
        "moveToInsertRow": "fn()",
        "next": "fn() -> bool",
        "previous": "fn() -> bool",
        "refreshRow": "fn()",
        "relative": "fn(rows: Integer) -> bool",
        "rowDeleted": "fn() -> bool",
        "rowInserted": "fn() -> bool",
        "rowUpdated": "fn() -> bool",
        "setFetchDirection": "fn(direction: Integer)",
        "setFetchSize": "fn(rows: Integer)",
        "updateArray": "fn(columnIndex: Integer, x: JdbcArray)",
        "updateBigDecimal": "fn(columnIndex: Integer, x: BigNumber)",
        "updateBlob": "fn(columnIndex: Integer, x: JdbcBlob)",
        "updateBoolean": "fn(columnIndex: Integer, x: bool)",
        "updateByte": "fn(columnIndex: Integer, x: Byte)",
        "updateBytes": "fn(columnIndex: Integer, x: [Byte])",
        "updateClob": "fn(columnIndex: Integer, x: JdbcClob)",
        "updateDate": "fn(columnIndex: Integer, x: JdbcDate)",
        "updateDouble": "fn(columnIndex: Integer, x: Number)",
        "updateFloat": "fn(columnIndex: Integer, x: Number)",
        "updateInt": "fn(columnIndex: Integer, x: Integer)",
        "updateLong": "fn(columnIndex: Integer, x: Integer)",
        "updateNClob": "fn(columnIndex: Integer, x: JdbcClob)",
        "updateNString": "fn(columnIndex: Integer, x: string)",
        "updateNull": "fn(columnIndex: Integer)",
        "updateObject": "fn(columnIndex: Integer, x: Object)",
        "updateRef": "fn(columnIndex: Integer, x: JdbcRef)",
        "updateRow": "fn()",
        "updateRowId": "fn(columnIndex: Integer, x: JdbcRowId)",
        "updateSQLXML": "fn(columnIndex: Integer, x: JdbcSQLXML)",
        "updateShort": "fn(columnIndex: Integer, x: Integer)",
        "updateString": "fn(columnIndex: Integer, x: string)",
        "updateTime": "fn(columnIndex: Integer, x: JdbcTime)",
        "updateTimestamp": "fn(columnIndex: Integer, x: JdbcTimestamp)",
        "wasNull": "fn() -> bool"
      },
      "JdbcResultSetMetaData": {
        "getCatalogName": "fn(column: Integer) -> string",
        "getColumnClassName": "fn(column: Integer) -> string",
        "getColumnCount": "fn() -> Integer",
        "getColumnDisplaySize": "fn(column: Integer) -> Integer",
        "getColumnLabel": "fn(column: Integer) -> string",
        "getColumnName": "fn(column: Integer) -> string",
        "getColumnType": "fn(column: Integer) -> Integer",
        "getColumnTypeName": "fn(column: Integer) -> string",
        "getPrecision": "fn(column: Integer) -> Integer",
        "getScale": "fn(column: Integer) -> Integer",
        "getSchemaName": "fn(column: Integer) -> string",
        "getTableName": "fn(column: Integer) -> string",
        "isAutoIncrement": "fn(column: Integer) -> bool",
        "isCaseSensitive": "fn(column: Integer) -> bool",
        "isCurrency": "fn(column: Integer) -> bool",
        "isDefinitelyWritable": "fn(column: Integer) -> bool",
        "isNullable": "fn(column: Integer) -> Integer",
        "isReadOnly": "fn(column: Integer) -> bool",
        "isSearchable": "fn(column: Integer) -> bool",
        "isSigned": "fn(column: Integer) -> bool",
        "isWritable": "fn(column: Integer) -> bool"
      },
      "JdbcRowId": {
        "getBytes": "fn() -> [Byte]"
      },
      "JdbcSQLXML": {
        "free": "fn()",
        "getString": "fn() -> string",
        "setString": "fn(value: string)"
      },
      "JdbcSavepoint": {
        "getSavepointId": "fn() -> Integer",
        "getSavepointName": "fn() -> string"
      },
      "JdbcStatement": {
        "addBatch": "fn(sql: string)",
        "cancel": "fn()",
        "clearBatch": "fn()",
        "clearWarnings": "fn()",
        "close": "fn()",
        "execute": "fn(sql: string) -> bool",
        "executeBatch": "fn() -> [Integer]",
        "executeQuery": "fn(sql: string) -> JdbcResultSet",
        "executeUpdate": "fn(sql: string) -> Integer",
        "getConnection": "fn() -> JdbcConnection",
        "getFetchDirection": "fn() -> Integer",
        "getFetchSize": "fn() -> Integer",
        "getGeneratedKeys": "fn() -> JdbcResultSet",
        "getMaxFieldSize": "fn() -> Integer",
        "getMaxRows": "fn() -> Integer",
        "getMoreResults": "fn() -> bool",
        "getQueryTimeout": "fn() -> Integer",
        "getResultSet": "fn() -> JdbcResultSet",
        "getResultSetConcurrency": "fn() -> Integer",
        "getResultSetHoldability": "fn() -> Integer",
        "getResultSetType": "fn() -> Integer",
        "getUpdateCount": "fn() -> Integer",
        "getWarnings": "fn() -> [String]",
        "isClosed": "fn() -> bool",
        "isPoolable": "fn() -> bool",
        "setCursorName": "fn(name: string)",
        "setEscapeProcessing": "fn(enable: bool)",
        "setFetchDirection": "fn(direction: Integer)",
        "setFetchSize": "fn(rows: Integer)",
        "setMaxFieldSize": "fn(max: Integer)",
        "setMaxRows": "fn(max: Integer)",
        "setPoolable": "fn(poolable: bool)",
        "setQueryTimeout": "fn(seconds: Integer)"
      },
      "JdbcStruct": {
        "getAttributes": "fn() -> [Object]",
        "getSQLTypeName": "fn() -> string"
      },
      "JdbcTime": {
        "after": "fn(when: JdbcTime) -> bool",
        "before": "fn(when: JdbcTime) -> bool",
        "getHours": "fn() -> Integer",
        "getMinutes": "fn() -> Integer",
        "getSeconds": "fn() -> Integer",
        "getTime": "fn() -> Integer",
        "setHours": "fn(hours: Integer)",
        "setMinutes": "fn(minutes: Integer)",
        "setSeconds": "fn(seconds: Integer)",
        "setTime": "fn(milliseconds: Integer)"
      },
      "JdbcTimestamp": {
        "after": "fn(when: JdbcTimestamp) -> bool",
        "before": "fn(when: JdbcTimestamp) -> bool",
        "getDate": "fn() -> Integer",
        "getHours": "fn() -> Integer",
        "getMinutes": "fn() -> Integer",
        "getMonth": "fn() -> Integer",
        "getNanos": "fn() -> Integer",
        "getSeconds": "fn() -> Integer",
        "getTime": "fn() -> Integer",
        "getYear": "fn() -> Integer",
        "setDate": "fn(date: Integer)",
        "setHours": "fn(hours: Integer)",
        "setMinutes": "fn(minutes: Integer)",
        "setMonth": "fn(month: Integer)",
        "setNanos": "fn(nanoseconds: Integer)",
        "setSeconds": "fn(seconds: Integer)",
        "setTime": "fn(milliseconds: Integer)",
        "setYear": "fn(year: Integer)"
      }
    }
  },
  "Jdbc": "GoogleAppsScript.JDBC.Jdbc",
  "!name": "google-apps-script.jdbc"
}
