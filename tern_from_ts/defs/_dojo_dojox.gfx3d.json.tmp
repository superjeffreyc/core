{
  "dojox": {
    "gfx3d": {
      "object": {
        "!type": "fn()",
        "prototype": {
          "applyLeftTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
          "applyRightTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
          "applyTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
          "destroy": "fn()",
          "draw": "fn(lighting: ?)",
          "getOutline": "fn() -> ?",
          "getZOrder": "fn() -> number",
          "invalidate": "fn()",
          "render": "fn(camera: ?)",
          "setFill": "fn(fill: Object) -> Function",
          "setObject": "fn(newObject: ?) -> Function",
          "setStroke": "fn(stroke: Object) -> Function",
          "setTransform": "fn(matrix: ?) -> Function",
          "toStdFill": "fn(lighting: ?, normal: ?) -> ?"
        }
      },
      "_base": {
        "defaultCube": {
          "bottom": "Object",
          "top": "Object",
          "type": "string"
        },
        "defaultCylinder": {
          "center": "Object",
          "height": "number",
          "radius": "number",
          "type": "string"
        },
        "defaultEdges": {
          "points": "[?]",
          "style": "Object",
          "type": "string"
        },
        "defaultOrbit": {
          "center": "Object",
          "radius": "number",
          "type": "string"
        },
        "defaultPath3d": {
          "path": "[?]",
          "type": "string"
        },
        "defaultPolygon": {
          "path": "[?]",
          "type": "string"
        },
        "defaultQuads": {
          "points": "[?]",
          "style": "Object",
          "type": "string"
        },
        "defaultTriangles": {
          "points": "[?]",
          "style": "Object",
          "type": "string"
        },
        "drawer": {
          "chart": "fn(todos: ?, objects: ?, viewport: ?)",
          "conservative": "fn(todos: ?, objects: ?, viewport: ?)"
        },
        "lighting": {
          "finish": "Object",
          "add": "fn(a: ?, b: ?) -> Object",
          "addColor": "fn(a: ?, b: ?) -> Object",
          "black": "fn() -> Object",
          "diff2Color": "fn(c1: ?, c2: ?) -> number",
          "diffuse": "fn(normal: ?, lights: ?) -> ?",
          "dot": "fn(a: ?, b: ?) -> number",
          "faceforward": "fn(n: ?, i: ?) -> ?",
          "fromStdColor": "fn(c: ?) -> ?",
          "length": "fn(v: ?) -> ?",
          "length2Color": "fn(c: ?) -> number",
          "mixColor": "fn(c1: ?, c2: ?, s: ?) -> ?",
          "Model": "fn()",
          "multiplyColor": "fn(a: ?, b: ?) -> Object",
          "normalize": "fn(v: ?) -> ?",
          "phong": "fn(normal: ?, v: ?, size: ?, lights: ?) -> ?",
          "reflect": "fn(i: ?, n: ?) -> ?",
          "saturate": "fn(v: ?) -> ?",
          "saturateColor": "fn(c: ?) -> Object",
          "scale": "fn(s: ?, v: ?) -> Object",
          "scaleColor": "fn(s: ?, c: ?) -> Object",
          "specular": "fn(normal: ?, v: ?, roughness: ?, lights: ?) -> ?",
          "toStdColor": "fn(c: ?) -> Object",
          "white": "fn() -> Object"
        },
        "matrix": {
          "identity": "Object",
          "cameraRotateX": "fn(angle: number) -> ?",
          "cameraRotateXg": "fn(degree: number) -> ?",
          "cameraRotateY": "fn(angle: number) -> ?",
          "cameraRotateYg": "fn(degree: number) -> ?",
          "cameraRotateZ": "fn(angle: number) -> ?",
          "cameraRotateZg": "fn(degree: number) -> ?",
          "cameraTranslate": "fn(a: number, b: number, c: number) -> ?",
          "clone": "fn(matrix: Object) -> ?",
          "invert": "fn(matrix: Object) -> ?",
          "Matrix3D": "fn(arg: Object)",
          "multiply": "fn(matrix: Object) -> ?",
          "multiplyPoint": "fn(matrix: Object, a: number, b: number, c: number) -> ?",
          "normalize": "fn(matrix: Object) -> ?",
          "project": "fn(matrix: Object, a: number, b: number, c: number) -> ?",
          "rotateX": "fn(angle: number) -> ?",
          "rotateXg": "fn(degree: number) -> ?",
          "rotateY": "fn(angle: number) -> ?",
          "rotateYg": "fn(degree: number) -> ?",
          "rotateZ": "fn(angle: number) -> ?",
          "rotateZg": "fn(degree: number) -> ?",
          "scale": "fn(a: number, b: number, c: number) -> ?",
          "translate": "fn(a: number, b: number, c: number) -> ?"
        },
        "scheduler": {
          "BinarySearchTree": "fn()",
          "bsp": "fn(buffer: ?, outline: ?) -> ?",
          "order": "fn(it: ?) -> ?",
          "outline": "fn(it: ?) -> ?",
          "zOrder": "fn(buffer: ?, order: ?) -> ?"
        },
        "vector": {
          "center": "fn() -> Object",
          "crossProduct": "fn(a: number, b: number, c: number, d: number, e: number, f: number) -> ?",
          "dotProduct": "fn(a: number, b: number, c: number, d: number, e: number, f: number) -> ?",
          "normalize": "fn(a: Object, b: Object, c: Object) -> ?",
          "substract": "fn(a: Object, b: Object) -> Object",
          "sum": "fn() -> Object"
        },
        "Cube": {
          "!type": "fn()",
          "prototype": {
            "applyLeftTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "applyRightTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "applyTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "destroy": "fn()",
            "draw": "fn(lighting: ?)",
            "getOutline": "fn() -> ?",
            "getZOrder": "fn() -> number",
            "invalidate": "fn()",
            "render": "fn(camera: ?)",
            "setFill": "fn(fill: Object) -> Function",
            "setObject": "fn(newObject: [Object])",
            "setStroke": "fn(stroke: Object) -> Function",
            "setTransform": "fn(matrix: ?) -> Function",
            "toStdFill": "fn(lighting: ?, normal: ?) -> ?"
          }
        },
        "Cylinder": {
          "!type": "fn()",
          "prototype": {
            "applyLeftTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "applyRightTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "applyTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "destroy": "fn()",
            "draw": "fn()",
            "getOutline": "fn() -> ?",
            "getZOrder": "fn() -> number",
            "invalidate": "fn()",
            "render": "fn(camera: ?)",
            "setFill": "fn(fill: Object) -> Function",
            "setObject": "fn(newObject: ?) -> Function",
            "setStroke": "fn(stroke: Object) -> Function",
            "setTransform": "fn(matrix: ?) -> Function",
            "toStdFill": "fn(lighting: ?, normal: ?) -> ?"
          }
        },
        "Edges": {
          "!type": "fn()",
          "prototype": {
            "applyLeftTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "applyRightTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "applyTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "destroy": "fn()",
            "draw": "fn()",
            "getOutline": "fn() -> ?",
            "getZOrder": "fn() -> number",
            "invalidate": "fn()",
            "render": "fn(camera: ?)",
            "setFill": "fn(fill: Object) -> Function",
            "setObject": "fn(newObject: [Object], style: String) -> Function",
            "setStroke": "fn(stroke: Object) -> Function",
            "setTransform": "fn(matrix: ?) -> Function",
            "toStdFill": "fn(lighting: ?, normal: ?) -> ?"
          }
        },
        "gradient": "fn(model: dojox.gfx3d.lighting.Model, material: Object, center: Object, radius: number, from: number, to: number, matrix: Object) -> Object",
        "Matrix3D": "fn(arg: Object)",
        "Object": {
          "!type": "fn()",
          "prototype": {
            "applyLeftTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "applyRightTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "applyTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "destroy": "fn()",
            "draw": "fn(lighting: ?)",
            "getOutline": "fn() -> ?",
            "getZOrder": "fn() -> number",
            "invalidate": "fn()",
            "render": "fn(camera: ?)",
            "setFill": "fn(fill: Object) -> Function",
            "setObject": "fn(newObject: ?) -> Function",
            "setStroke": "fn(stroke: Object) -> Function",
            "setTransform": "fn(matrix: ?) -> Function",
            "toStdFill": "fn(lighting: ?, normal: ?) -> ?"
          }
        },
        "Orbit": {
          "!type": "fn()",
          "prototype": {
            "applyLeftTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "applyRightTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "applyTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "destroy": "fn()",
            "draw": "fn(lighting: ?)",
            "getOutline": "fn() -> ?",
            "getZOrder": "fn() -> number",
            "invalidate": "fn()",
            "render": "fn(camera: ?)",
            "setFill": "fn(fill: Object) -> Function",
            "setObject": "fn(newObject: ?) -> Function",
            "setStroke": "fn(stroke: Object) -> Function",
            "setTransform": "fn(matrix: ?) -> Function",
            "toStdFill": "fn(lighting: ?, normal: ?) -> ?"
          }
        },
        "Path3d": {
          "!type": "fn()",
          "prototype": {
            "applyLeftTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "applyRightTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "applyTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "closePath": "fn() -> Function",
            "destroy": "fn()",
            "draw": "fn(lighting: ?)",
            "getOutline": "fn() -> ?",
            "getZOrder": "fn() -> number",
            "invalidate": "fn()",
            "lineTo": "fn() -> Function",
            "moveTo": "fn() -> Function",
            "render": "fn(camera: ?)",
            "setFill": "fn(fill: Object) -> Function",
            "setObject": "fn(newObject: ?) -> Function",
            "setStroke": "fn(stroke: Object) -> Function",
            "setTransform": "fn(matrix: ?) -> Function",
            "toStdFill": "fn(lighting: ?, normal: ?) -> ?"
          }
        },
        "Polygon": {
          "!type": "fn()",
          "prototype": {
            "applyLeftTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "applyRightTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "applyTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "destroy": "fn()",
            "draw": "fn(lighting: ?)",
            "getOutline": "fn() -> ?",
            "getZOrder": "fn() -> number",
            "invalidate": "fn()",
            "render": "fn(camera: ?)",
            "setFill": "fn(fill: Object) -> Function",
            "setObject": "fn(newObject: [Object]) -> Function",
            "setStroke": "fn(stroke: Object) -> Function",
            "setTransform": "fn(matrix: ?) -> Function",
            "toStdFill": "fn(lighting: ?, normal: ?) -> ?"
          }
        },
        "Quads": {
          "!type": "fn()",
          "prototype": {
            "applyLeftTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "applyRightTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "applyTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "destroy": "fn()",
            "draw": "fn(lighting: ?)",
            "getOutline": "fn() -> ?",
            "getZOrder": "fn() -> number",
            "invalidate": "fn()",
            "render": "fn(camera: ?)",
            "setFill": "fn(fill: Object) -> Function",
            "setObject": "fn(newObject: [Object], style: String) -> Function",
            "setStroke": "fn(stroke: Object) -> Function",
            "setTransform": "fn(matrix: ?) -> Function",
            "toStdFill": "fn(lighting: ?, normal: ?) -> ?"
          }
        },
        "Scene": {
          "!type": "fn()",
          "prototype": {
            "abandon": "fn(obj: ?, silently: bool) -> Function",
            "addTodo": "fn(newObject: ?)",
            "adopt": "fn(obj: ?) -> Function",
            "applyLeftTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "applyRightTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "applyTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "create3DObject": "fn(objectType: Function, rawObject: Object, style: ?) -> ?",
            "createCube": "fn(cube: ?) -> ?",
            "createCylinder": "fn(cylinder: ?) -> ?",
            "createEdges": "fn(edges: ?, style: ?) -> ?",
            "createOrbit": "fn(orbit: ?) -> ?",
            "createPath3d": "fn(path: ?) -> ?",
            "createPolygon": "fn(points: [Object]) -> ?",
            "createQuads": "fn(quads: ?, style: ?) -> ?",
            "createScene": "fn() -> ?",
            "createTriangles": "fn(tris: ?, style: ?) -> ?",
            "destroy": "fn()",
            "draw": "fn(lighting: ?)",
            "getOutline": "fn() -> ?",
            "getZOrder": "fn() -> number",
            "invalidate": "fn()",
            "render": "fn(camera: ?, deep: ?)",
            "setDrawer": "fn(drawer: ?)",
            "setFill": "fn(fill: ?) -> Function",
            "setObject": "fn(newObject: ?) -> Function",
            "setScheduler": "fn(scheduler: ?)",
            "setStroke": "fn(stroke: ?) -> Function",
            "setTransform": "fn(matrix: ?) -> Function",
            "toStdFill": "fn(lighting: ?, normal: ?) -> ?"
          }
        },
        "Triangles": {
          "!type": "fn()",
          "prototype": {
            "applyLeftTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "applyRightTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "applyTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "destroy": "fn()",
            "draw": "fn(lighting: ?)",
            "getOutline": "fn() -> ?",
            "getZOrder": "fn() -> number",
            "invalidate": "fn()",
            "render": "fn(camera: ?)",
            "setFill": "fn(fill: Object) -> Function",
            "setObject": "fn(newObject: [Object], style: String) -> Function",
            "setStroke": "fn(stroke: Object) -> Function",
            "setTransform": "fn(matrix: ?) -> Function",
            "toStdFill": "fn(lighting: ?, normal: ?) -> ?"
          }
        },
        "Viewport": {
          "!type": "fn()",
          "prototype": {
            "nodeType": "Object",
            "abandon": "fn(obj: ?, silently: bool) -> Function",
            "add": "fn(shape: dojox.gfx.shape.Shape) -> ?",
            "addLights": "fn(lights: [?]) -> ?",
            "addTodo": "fn(newObject: ?)",
            "adopt": "fn(obj: ?) -> Function",
            "applyCameraLeftTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "applyCameraRightTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "applyCameraTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> ?",
            "applyLeftTransform": "fn(matrix: dojox.gfx.matrix.Matrix2D) -> Function",
            "applyRightTransform": "fn(matrix: dojox.gfx.matrix.Matrix2D) -> Function",
            "applyTransform": "fn(matrix: dojox.gfx.matrix.Matrix2D) -> Function",
            "clear": "fn(destroy: bool) -> Function",
            "closeBatch": "fn() -> Function",
            "connect": "fn(name: ?, object: ?, method: ?) -> ?",
            "create3DObject": "fn(objectType: Function, rawObject: Object, style: ?) -> ?",
            "createCircle": "fn(circle: Object) -> ?",
            "createCube": "fn(cube: ?) -> ?",
            "createCylinder": "fn(cylinder: ?) -> ?",
            "createEdges": "fn(edges: ?, style: ?) -> ?",
            "createEllipse": "fn(ellipse: Object) -> ?",
            "createGroup": "fn() -> ?",
            "createImage": "fn(image: Object) -> ?",
            "createLine": "fn(line: Object) -> ?",
            "createObject": "fn(shapeType: Function, rawShape: Object) -> ?",
            "createOrbit": "fn(orbit: ?) -> ?",
            "createPath": "fn(path: Object) -> ?",
            "createPath3d": "fn(path: ?) -> ?",
            "createPolygon": "fn(points: [Object]) -> ?",
            "createPolyline": "fn(points: Object) -> ?",
            "createQuads": "fn(quads: ?, style: ?) -> ?",
            "createRect": "fn(rect: Object) -> ?",
            "createScene": "fn() -> ?",
            "createShape": "fn(shape: Object) -> ?",
            "createText": "fn(text: Object) -> ?",
            "createTextPath": "fn(text: Object) -> ?",
            "createTriangles": "fn(tris: ?, style: ?) -> ?",
            "destroy": "fn()",
            "disconnect": "fn(token: ?) -> ?",
            "getBoundingBox": "fn() -> ?",
            "getClip": "fn() -> ?",
            "getEventSource": "fn() -> ?",
            "getFill": "fn() -> ?",
            "getNode": "fn() -> ?",
            "getParent": "fn() -> ?",
            "getShape": "fn() -> ?",
            "getStroke": "fn() -> ?",
            "getTransform": "fn() -> ?",
            "getTransformedBoundingBox": "fn() -> ?",
            "invalidate": "fn()",
            "moveToBack": "fn() -> Function",
            "moveToFront": "fn() -> Function",
            "on": "fn(type: ?, listener: ?) -> ?",
            "openBatch": "fn() -> Function",
            "remove": "fn(shape: dojox.gfx.shape.Shape, silently: bool) -> Function",
            "removeShape": "fn(silently: bool) -> Function",
            "render": "fn()",
            "setCameraTransform": "fn(matrix: dojox.gfx3d.matrix.Matrix3D) -> Function",
            "setClip": "fn(clip: ?)",
            "setDimensions": "fn(dim: ?)",
            "setDrawer": "fn(drawer: ?)",
            "setFill": "fn(fill: Object) -> Function",
            "setLights": "fn(lights: [?], ambient: dojo._base.Color, specular: dojo._base.Color) -> Function",
            "setScheduler": "fn(scheduler: ?)",
            "setShape": "fn(shape: Object) -> Function",
            "setStroke": "fn(stroke: Object) -> Function",
            "setTransform": "fn(matrix: dojox.gfx.matrix.Matrix2D) -> ?"
          }
        },
        "_creators": {
          "abandon": "fn(obj: ?, silently: bool) -> Function",
          "adopt": "fn(obj: ?) -> Function",
          "create3DObject": "fn(objectType: Function, rawObject: Object, style: ?) -> ?",
          "createCube": "fn(cube: ?) -> ?",
          "createCylinder": "fn(cylinder: ?) -> ?",
          "createEdges": "fn(edges: ?, style: ?) -> ?",
          "createOrbit": "fn(orbit: ?) -> ?",
          "createPath3d": "fn(path: ?) -> ?",
          "createPolygon": "fn(points: [Object]) -> ?",
          "createQuads": "fn(quads: ?, style: ?) -> ?",
          "createScene": "fn() -> ?",
          "createTriangles": "fn(tris: ?, style: ?) -> ?",
          "setDrawer": "fn(drawer: ?)",
          "setScheduler": "fn(scheduler: ?)"
        }
      },
      "scheduler": {
        "drawer": {
          "chart": "fn(todos: ?, objects: ?, viewport: ?)",
          "conservative": "fn(todos: ?, objects: ?, viewport: ?)"
        },
        "scheduler": {
          "BinarySearchTree": "fn()",
          "bsp": "fn(buffer: ?, outline: ?) -> ?",
          "order": "fn(it: ?) -> ?",
          "outline": "fn(it: ?) -> ?",
          "zOrder": "fn(buffer: ?, order: ?) -> ?"
        },
        "BinarySearchTree": {
          "!type": "fn(obj: dojox.gfx3d.object, outline: ?)",
          "prototype": {
            "add": "fn(obj: ?, outline: ?)",
            "iterate": "fn(outline: ?) -> ?"
          }
        }
      },
      "vector": {
        "center": "fn() -> Object",
        "crossProduct": "fn(a: number, b: number, c: number, d: number, e: number, f: number) -> ?",
        "dotProduct": "fn(a: number, b: number, c: number, d: number, e: number, f: number) -> ?",
        "normalize": "fn(a: Object, b: Object, c: Object) -> ?",
        "substract": "fn(a: Object, b: Object) -> Object",
        "sum": "fn() -> Object"
      },
      "lighting": {
        "finish": {
          "defaults": "Object",
          "dull": "Object",
          "glossy": "Object",
          "luminous": "Object",
          "metalA": "Object",
          "metalB": "Object",
          "metalC": "Object",
          "metalD": "Object",
          "metalE": "Object",
          "phong_dull": "Object",
          "phong_glossy": "Object",
          "phong_shiny": "Object",
          "shiny": "Object"
        },
        "add": "fn(a: ?, b: ?) -> Object",
        "addColor": "fn(a: ?, b: ?) -> Object",
        "black": "fn() -> Object",
        "diff2Color": "fn(c1: ?, c2: ?) -> number",
        "diffuse": "fn(normal: ?, lights: ?) -> ?",
        "dot": "fn(a: ?, b: ?) -> number",
        "faceforward": "fn(n: ?, i: ?) -> ?",
        "fromStdColor": "fn(c: ?) -> ?",
        "length": "fn(v: ?) -> ?",
        "length2Color": "fn(c: ?) -> number",
        "mixColor": "fn(c1: ?, c2: ?, s: ?) -> ?",
        "Model": {
          "!type": "fn(incident: ?, lights: ?, ambient: ?, specular: ?)",
          "prototype": {
            "constant": "fn(normal: ?, finish: ?, pigment: ?) -> ?",
            "matte": "fn(normal: ?, finish: ?, pigment: ?) -> ?",
            "metal": "fn(normal: ?, finish: ?, pigment: ?) -> ?",
            "npr": "fn(normal: ?, finish: ?, pigment: ?) -> ?",
            "plastic": "fn(normal: ?, finish: ?, pigment: ?) -> ?"
          }
        },
        "multiplyColor": "fn(a: ?, b: ?) -> Object",
        "normalize": "fn(v: ?) -> ?",
        "phong": "fn(normal: ?, v: ?, size: ?, lights: ?) -> ?",
        "reflect": "fn(i: ?, n: ?) -> ?",
        "saturate": "fn(v: ?) -> ?",
        "saturateColor": "fn(c: ?) -> Object",
        "scale": "fn(s: ?, v: ?) -> Object",
        "scaleColor": "fn(s: ?, c: ?) -> Object",
        "specular": "fn(normal: ?, v: ?, roughness: ?, lights: ?) -> ?",
        "toStdColor": "fn(c: ?) -> Object",
        "white": "fn() -> Object"
      },
      "matrix": {
        "identity": "Object",
        "cameraRotateX": "fn(angle: number) -> ?",
        "cameraRotateXg": "fn(degree: number) -> ?",
        "cameraRotateY": "fn(angle: number) -> ?",
        "cameraRotateYg": "fn(degree: number) -> ?",
        "cameraRotateZ": "fn(angle: number) -> ?",
        "cameraRotateZg": "fn(degree: number) -> ?",
        "cameraTranslate": "fn(a: number, b: number, c: number) -> ?",
        "clone": "fn(matrix: Object) -> ?",
        "invert": "fn(matrix: Object) -> ?",
        "multiply": "fn(matrix: Object) -> ?",
        "multiplyPoint": "fn(matrix: Object, a: number, b: number, c: number) -> ?",
        "normalize": "fn(matrix: Object) -> ?",
        "project": "fn(matrix: Object, a: number, b: number, c: number) -> ?",
        "rotateX": "fn(angle: number) -> ?",
        "rotateXg": "fn(degree: number) -> ?",
        "rotateY": "fn(angle: number) -> ?",
        "rotateYg": "fn(degree: number) -> ?",
        "rotateZ": "fn(angle: number) -> ?",
        "rotateZg": "fn(degree: number) -> ?",
        "scale": "fn(a: number, b: number, c: number) -> ?",
        "translate": "fn(a: number, b: number, c: number) -> ?",
        "Matrix3D": {
          "!type": "fn(arg: Object)",
          "prototype": {}
        }
      },
      "gradient": {
        "tolerance": "number"
      }
    }
  },
  "dojox/gfx3d": "exp",
  "dojox/gfx3d/object": "exp",
  "dojox/gfx3d/gradient": "exp",
  "dojox/gfx3d/_base": "exp",
  "dojox/gfx3d/_base.Cube": "exp",
  "dojox/gfx3d/_base.Cylinder": "exp",
  "dojox/gfx3d/_base.Edges": "exp",
  "dojox/gfx3d/_base.Polygon": "exp",
  "dojox/gfx3d/_base.Orbit": "exp",
  "dojox/gfx3d/_base.Object": "exp",
  "dojox/gfx3d/_base.Path3d": "exp",
  "dojox/gfx3d/_base.Quads": "exp",
  "dojox/gfx3d/_base.Triangles": "exp",
  "dojox/gfx3d/_base.Scene": "exp",
  "dojox/gfx3d/_base.Viewport": "exp",
  "dojox/gfx3d/_base._creators": "exp",
  "dojox/gfx3d/_base.defaultCube": "exp",
  "dojox/gfx3d/_base.defaultEdges": "exp",
  "dojox/gfx3d/_base.defaultOrbit": "exp",
  "dojox/gfx3d/_base.defaultCylinder": "exp",
  "dojox/gfx3d/_base.defaultPath3d": "exp",
  "dojox/gfx3d/_base.defaultPolygon": "exp",
  "dojox/gfx3d/_base.defaultQuads": "exp",
  "dojox/gfx3d/_base.defaultTriangles": "exp",
  "dojox/gfx3d/_base.drawer": "exp",
  "dojox/gfx3d/_base.lighting": "exp",
  "dojox/gfx3d/_base.scheduler": "exp",
  "dojox/gfx3d/_base.matrix": "exp",
  "dojox/gfx3d/_base.vector": "exp",
  "dojox/gfx3d/scheduler": "exp",
  "dojox/gfx3d/scheduler.BinarySearchTree": "exp",
  "dojox/gfx3d/scheduler.drawer": "exp",
  "dojox/gfx3d/scheduler.scheduler": "exp",
  "dojox/gfx3d/lighting": "exp",
  "dojox/gfx3d/lighting.Model": "exp",
  "dojox/gfx3d/lighting.finish": "exp",
  "dojox/gfx3d/vector": "exp",
  "dojox/gfx3d/matrix": "exp",
  "!name": "dojox.gfx3d.d.ts"
}
