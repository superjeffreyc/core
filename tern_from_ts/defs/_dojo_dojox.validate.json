{
  "dojox": {
    "validate": {
      "_base": {
        "check": "fn(form: HTMLFormElement, profile: Object)",
        "computeCnpjDv": "fn(value: String)",
        "computeCpfDv": "fn(value: String)",
        "evaluateConstraint": "fn(profile: ?, constraint: [?], fieldName: ?, elem: ?)",
        "getEmailAddressList": "fn(value: String, flags: Object)",
        "isEmailAddress": "fn(value: String, flags: Object)",
        "isEmailAddressList": "fn(value: String, flags: Object)",
        "isInRange": "fn(value: String, flags: Object)",
        "isIpAddress": "fn(value: String, flags: Object)",
        "isNumberFormat": "fn(value: String, flags: Object) -> ?",
        "isPhoneNumber": "fn(value: String) -> bool",
        "isSocialSecurityNumber": "fn(value: String)",
        "isState": "fn(value: String, flags: Object)",
        "isText": "fn(value: String, flags: Object)",
        "isUrl": "fn(value: String, flags: Object)",
        "isValidCnpj": "fn(value: String)",
        "isValidCpf": "fn(value: String)",
        "isValidCreditCard": "fn(value: String, ccType: String)",
        "isValidCreditCardNumber": "fn(value: String, ccType: String)",
        "isValidCvv": "fn(value: String, ccType: String)",
        "isValidIsbn": "fn(value: String) -> bool",
        "isValidLuhn": "fn(value: String)",
        "isZipCode": "fn(value: String)",
        "_cardInfo": {
          "ax": "string",
          "bl": "string",
          "dc": "string",
          "di": "string",
          "ec": "string",
          "er": "string",
          "jcb": "string",
          "mc": "string",
          "vi": "string"
        },
        "_isInRangeCache": {}
      },
      "br": {
        "check": "fn(form: HTMLFormElement, profile: Object)",
        "computeCnpjDv": "fn(value: String)",
        "computeCpfDv": "fn(value: String)",
        "evaluateConstraint": "fn(profile: ?, constraint: [?], fieldName: ?, elem: ?)",
        "getEmailAddressList": "fn(value: String, flags: Object)",
        "isEmailAddress": "fn(value: String, flags: Object)",
        "isEmailAddressList": "fn(value: String, flags: Object)",
        "isInRange": "fn(value: String, flags: Object)",
        "isIpAddress": "fn(value: String, flags: Object)",
        "isNumberFormat": "fn(value: String, flags: Object) -> ?",
        "isPhoneNumber": "fn(value: String) -> bool",
        "isSocialSecurityNumber": "fn(value: String)",
        "isState": "fn(value: String, flags: Object)",
        "isText": "fn(value: String, flags: Object)",
        "isUrl": "fn(value: String, flags: Object)",
        "isValidCnpj": "fn(value: String)",
        "isValidCpf": "fn(value: String)",
        "isValidCreditCard": "fn(value: String, ccType: String)",
        "isValidCreditCardNumber": "fn(value: String, ccType: String)",
        "isValidCvv": "fn(value: String, ccType: String)",
        "isValidIsbn": "fn(value: String) -> bool",
        "isValidLuhn": "fn(value: String)",
        "isZipCode": "fn(value: String)",
        "_cardInfo": {
          "ax": "string",
          "bl": "string",
          "dc": "string",
          "di": "string",
          "ec": "string",
          "er": "string",
          "jcb": "string",
          "mc": "string",
          "vi": "string"
        },
        "_isInRangeCache": {}
      },
      "ca": {
        "isPhoneNumber": "fn(value: String) -> ?",
        "isPostalCode": "fn(value: ?) -> ?",
        "isProvince": "fn(value: String) -> ?",
        "isSocialInsuranceNumber": "fn(value: String) -> ?"
      },
      "creditCard": {},
      "regexp": {
        "ca": {
          "postalCode": "fn() -> String",
          "province": "fn() -> String"
        },
        "us": {
          "state": "fn(flags: Object) -> String"
        },
        "emailAddress": "fn(flags: Object) -> String",
        "emailAddressList": "fn(flags: Object) -> String",
        "host": "fn(flags: Object) -> String",
        "ipAddress": "fn(flags: Object) -> String",
        "numberFormat": "fn(flags: Object) -> ?",
        "url": "fn(flags: Object) -> String"
      },
      "us": {
        "check": "fn(form: HTMLFormElement, profile: Object)",
        "computeCnpjDv": "fn(value: String)",
        "computeCpfDv": "fn(value: String)",
        "evaluateConstraint": "fn(profile: ?, constraint: [?], fieldName: ?, elem: ?)",
        "getEmailAddressList": "fn(value: String, flags: Object)",
        "isEmailAddress": "fn(value: String, flags: Object)",
        "isEmailAddressList": "fn(value: String, flags: Object)",
        "isInRange": "fn(value: String, flags: Object)",
        "isIpAddress": "fn(value: String, flags: Object)",
        "isNumberFormat": "fn(value: String, flags: Object) -> ?",
        "isPhoneNumber": "fn(value: String) -> bool",
        "isSocialSecurityNumber": "fn(value: String)",
        "isState": "fn(value: String, flags: Object)",
        "isText": "fn(value: String, flags: Object)",
        "isUrl": "fn(value: String, flags: Object)",
        "isValidCnpj": "fn(value: String)",
        "isValidCpf": "fn(value: String)",
        "isValidCreditCard": "fn(value: String, ccType: String)",
        "isValidCreditCardNumber": "fn(value: String, ccType: String)",
        "isValidCvv": "fn(value: String, ccType: String)",
        "isValidIsbn": "fn(value: String) -> bool",
        "isValidLuhn": "fn(value: String)",
        "isZipCode": "fn(value: String)",
        "_cardInfo": {
          "ax": "string",
          "bl": "string",
          "dc": "string",
          "di": "string",
          "ec": "string",
          "er": "string",
          "jcb": "string",
          "mc": "string",
          "vi": "string"
        },
        "_isInRangeCache": {}
      },
      "web": {
        "check": "fn(form: HTMLFormElement, profile: Object)",
        "computeCnpjDv": "fn(value: String)",
        "computeCpfDv": "fn(value: String)",
        "evaluateConstraint": "fn(profile: ?, constraint: [?], fieldName: ?, elem: ?)",
        "getEmailAddressList": "fn(value: String, flags: Object)",
        "isEmailAddress": "fn(value: String, flags: Object)",
        "isEmailAddressList": "fn(value: String, flags: Object)",
        "isInRange": "fn(value: String, flags: Object)",
        "isIpAddress": "fn(value: String, flags: Object)",
        "isNumberFormat": "fn(value: String, flags: Object) -> ?",
        "isPhoneNumber": "fn(value: String) -> bool",
        "isSocialSecurityNumber": "fn(value: String)",
        "isState": "fn(value: String, flags: Object)",
        "isText": "fn(value: String, flags: Object)",
        "isUrl": "fn(value: String, flags: Object)",
        "isValidCnpj": "fn(value: String)",
        "isValidCpf": "fn(value: String)",
        "isValidCreditCard": "fn(value: String, ccType: String)",
        "isValidCreditCardNumber": "fn(value: String, ccType: String)",
        "isValidCvv": "fn(value: String, ccType: String)",
        "isValidIsbn": "fn(value: String) -> bool",
        "isValidLuhn": "fn(value: String)",
        "isZipCode": "fn(value: String)",
        "_isInRangeCache": {},
        "_cardInfo": {
          "ax": "string",
          "bl": "string",
          "dc": "string",
          "di": "string",
          "ec": "string",
          "er": "string",
          "jcb": "string",
          "mc": "string",
          "vi": "string"
        }
      },
      "check": {},
      "isbn": {}
    }
  },
  "dojox/validate": "exp",
  "dojox/validate/check": "exp",
  "dojox/validate/isbn": "exp",
  "dojox/validate/ca": "exp",
  "dojox/validate/creditCard": "exp",
  "dojox/validate/_base": "exp",
  "dojox/validate/_base._cardInfo": "exp",
  "dojox/validate/_base._isInRangeCache": "exp",
  "dojox/validate/regexp": "exp",
  "dojox/validate/regexp.us": "exp",
  "dojox/validate/regexp.ca": "exp",
  "dojox/validate/br": "exp",
  "dojox/validate/br._isInRangeCache": "exp",
  "dojox/validate/br._cardInfo": "exp",
  "dojox/validate/us": "exp",
  "dojox/validate/us._isInRangeCache": "exp",
  "dojox/validate/us._cardInfo": "exp",
  "dojox/validate/web": "exp",
  "dojox/validate/web._cardInfo": "exp",
  "dojox/validate/web._isInRangeCache": "exp",
  "!name": "dojox.validate"
}
