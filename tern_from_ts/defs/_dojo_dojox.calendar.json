{
  "dojox": {
    "calendar": {
      "_RendererMixin": {
        "!type": "fn()",
        "prototype": {
          "edited": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret",
          "focused": "bool",
          "hovered": "bool",
          "item": "Object",
          "moveEnabled": "bool",
          "owner": "Object",
          "resizeEnabled": "bool",
          "selected": "bool",
          "storeState": "bool",
          "visibilityLimits": "Object",
          "getDisplayValue": "fn(part: ?) -> ?",
          "postscript": "fn(params: Object)",
          "updateRendering": "fn(w: number, h: number)"
        }
      },
      "_ScrollBarBase": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attributeMap": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret11",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "containerSize": "number",
          "dir": "string",
          "direction": "string",
          "domNode": "HTMLElement",
          "focused": "bool",
          "id": "string",
          "lang": "string",
          "maximum": "number",
          "minimum": "number",
          "ownerDocument": "Object",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "value": "number",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "onBlur": "fn()",
          "onChange": "fn(value: number)",
          "onFocus": "fn()",
          "onScroll": "fn(value: number)"
        }
      },
      "Calendar": {
        "!type": "fn(args: Object)",
        "prototype": {
          "allDayAttr": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret31",
          "animateRange": "bool",
          "animationRangeDuration": "number",
          "attachScope": "Object",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "columnView": "Object",
          "columnViewProps": "Object",
          "containerNode": "HTMLElement",
          "contextRequire": "Function",
          "createItemFunc": "Function",
          "createOnGridClick": "bool",
          "cssClassFunc": "Function",
          "currentView": "Object",
          "date": "Date",
          "dateInterval": "string",
          "dateIntervalSteps": "number",
          "datePackage": "Object",
          "decodeDate": "Object",
          "dir": "string",
          "displayedItemsInvalidated": "bool",
          "domNode": "HTMLElement",
          "editable": "bool",
          "encodeDate": "Object",
          "endDate": "Date",
          "endTimeAttr": "string",
          "firstDayOfWeek": "number",
          "focused": "bool",
          "formatItemTimeFunc": "Object",
          "hoveredItem": "Object",
          "id": "string",
          "invalidatingProperties": "Object",
          "invalidRendering": "bool",
          "lang": "string",
          "matrixView": "Object",
          "matrixViewProps": "Object",
          "maxDate": "Date",
          "minDate": "Date",
          "moveEnabled": "bool",
          "ownerDocument": "Object",
          "query": "Object",
          "queryOptions": "Object",
          "resizeEnabled": "bool",
          "searchContainerNode": "bool",
          "selectedItem": "Object",
          "selectedItems": "Object",
          "selectionMode": "string",
          "srcNodeRef": "HTMLElement",
          "startDate": "Date",
          "startTimeAttr": "string",
          "store": "Object",
          "style": "string",
          "subColumnAttr": "string",
          "summaryAttr": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "viewChangeDuration": "number",
          "viewContainer": "HTMLElement",
          "views": "Object",
          "widgetsInTemplate": "bool",
          "addInvalidatingProperties": "fn(properties: [String])",
          "addView": "fn(view: dojox.calendar.ViewBase, index: number)",
          "buildRendering": "fn()",
          "columnViewColumnHeaderClick": "fn(e: Object)",
          "computeTimeInterval": "fn() -> ?",
          "configureButtons": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "dayButtonClick": "fn(e: ?)",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "dispatchChange": "fn(oldSelectedItem: Object, newSelectedItem: Object, renderer: Object, triggerEvent: Event)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "floorDate": "fn(date: Date, unit: String, steps: number, reuse: bool) -> ?",
          "floorToDay": "fn(date: Date, reuse: bool) -> ?",
          "floorToWeek": "fn(d: ?) -> ?",
          "fourDaysButtonClick": "fn(e: ?)",
          "getChildren": "fn() -> [?]",
          "getIdentity": "fn(item: ?) -> ?",
          "getItemStoreState": "fn(item: ?) -> ?",
          "getParent": "fn() -> ?",
          "goToday": "fn()",
          "installDefaultViewsActions": "fn(views: ?)",
          "invalidateRendering": "fn()",
          "isFocusable": "fn() -> ?",
          "isItemEditable": "fn(item: Object, rendererKind: String) -> ?",
          "isItemHovered": "fn(item: Object) -> ?",
          "isItemMoveEnabled": "fn(item: Object, rendererKind: String) -> ?",
          "isItemResizeEnabled": "fn(item: Object, rendererKind: String) -> ?",
          "isItemSelected": "fn(item: Object) -> ?",
          "isLeftToRight": "fn() -> ?",
          "isStartOfDay": "fn(d: Date) -> ?",
          "isToday": "fn(date: Date) -> ?",
          "itemToRenderItem": "fn(item: Object, store: dojo.store.api.Store) -> ?",
          "matrixViewRowHeaderClick": "fn(e: Object)",
          "monthButtonClick": "fn(e: ?)",
          "newDate": "fn(obj: Object) -> ?",
          "nextRange": "fn()",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "previousRange": "fn()",
          "refreshRendering": "fn()",
          "removeView": "fn(view: dojox.calendar.ViewBase)",
          "renderItemToItem": "fn(renderItem: Object, store: dojo.store.api.Store) -> ?",
          "resize": "fn()",
          "selectFromEvent": "fn(e: Event, item: Object, renderer: Object, dispatch: bool) -> ?",
          "setItemSelected": "fn(item: Object, value: bool)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "todayButtonClick": "fn(e: ?)",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "updateRenderers": "fn(obj: ?, stateOnly: ?)",
          "validateRendering": "fn()",
          "weekButtonClick": "fn(e: ?)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn()",
          "onColumnHeaderClick": "fn(e: Object)",
          "onCurrentViewChange": "fn(e: Event)",
          "onExpandRendererClick": "fn(e: Object)",
          "onFocus": "fn()",
          "onGridClick": "fn(e: Object)",
          "onGridDoubleClick": "fn(e: Object)",
          "onItemClick": "fn(e: Object)",
          "onItemContextMenu": "fn(e: Object)",
          "onItemDoubleClick": "fn(e: Object)",
          "onItemEditBegin": "fn(e: Object)",
          "onItemEditBeginGesture": "fn(e: Object)",
          "onItemEditEnd": "fn(e: Object)",
          "onItemEditEndGesture": "fn(e: Object)",
          "onItemEditMoveGesture": "fn(e: Object)",
          "onItemEditResizeGesture": "fn(e: Object)",
          "onItemRollOut": "fn(e: Object)",
          "onItemRollOver": "fn(e: Object)",
          "onRendererCreated": "fn(e: Object)",
          "onRendererDestroyed": "fn(e: Object)",
          "onRendererRecycled": "fn(e: Object)",
          "onRendererReused": "fn(e: Object)",
          "onRenderersLayoutDone": "fn(view: dojox.calendar.ViewBase)",
          "onRowHeaderClick": "fn(e: Object)",
          "onTimeIntervalChange": "fn(e: Object)",
          "onViewAdded": "fn(view: dojox.calendar.ViewBase)",
          "onViewConfigurationChange": "fn(view: dojox.calendar.ViewBase)",
          "onViewRemoved": "fn(view: dojox.calendar.ViewBase)"
        }
      },
      "CalendarBase": {
        "!type": "fn(args: Object)",
        "prototype": {
          "allDayAttr": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret95",
          "animateRange": "bool",
          "animationRangeDuration": "number",
          "attachScope": "Object",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "columnView": "Object",
          "columnViewProps": "Object",
          "containerNode": "HTMLElement",
          "contextRequire": "Function",
          "createItemFunc": "Function",
          "createOnGridClick": "bool",
          "cssClassFunc": "Function",
          "currentView": "Object",
          "date": "Date",
          "dateInterval": "string",
          "dateIntervalSteps": "number",
          "datePackage": "Object",
          "decodeDate": "Object",
          "dir": "string",
          "displayedItemsInvalidated": "bool",
          "domNode": "HTMLElement",
          "editable": "bool",
          "encodeDate": "Object",
          "endDate": "Date",
          "endTimeAttr": "string",
          "firstDayOfWeek": "number",
          "focused": "bool",
          "formatItemTimeFunc": "Object",
          "hoveredItem": "Object",
          "id": "string",
          "invalidatingProperties": "Object",
          "invalidRendering": "bool",
          "lang": "string",
          "matrixView": "Object",
          "matrixViewProps": "Object",
          "maxDate": "Date",
          "minDate": "Date",
          "moveEnabled": "bool",
          "ownerDocument": "Object",
          "query": "Object",
          "queryOptions": "Object",
          "resizeEnabled": "bool",
          "searchContainerNode": "bool",
          "selectedItem": "Object",
          "selectedItems": "Object",
          "selectionMode": "string",
          "srcNodeRef": "HTMLElement",
          "startDate": "Date",
          "startTimeAttr": "string",
          "store": "Object",
          "style": "string",
          "subColumnAttr": "string",
          "summaryAttr": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "viewChangeDuration": "number",
          "viewContainer": "HTMLElement",
          "views": "Object",
          "widgetsInTemplate": "bool",
          "addInvalidatingProperties": "fn(properties: [String])",
          "addView": "fn(view: dojox.calendar.ViewBase, index: number)",
          "buildRendering": "fn()",
          "columnViewColumnHeaderClick": "fn(e: Object)",
          "computeTimeInterval": "fn() -> ?",
          "configureButtons": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "dayButtonClick": "fn(e: ?)",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "dispatchChange": "fn(oldSelectedItem: Object, newSelectedItem: Object, renderer: Object, triggerEvent: Event)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "floorDate": "fn(date: Date, unit: String, steps: number, reuse: bool) -> ?",
          "floorToDay": "fn(date: Date, reuse: bool) -> ?",
          "floorToWeek": "fn(d: ?) -> ?",
          "fourDaysButtonClick": "fn(e: ?)",
          "getChildren": "fn() -> [?]",
          "getIdentity": "fn(item: ?) -> ?",
          "getItemStoreState": "fn(item: ?) -> ?",
          "getParent": "fn() -> ?",
          "goToday": "fn()",
          "invalidateRendering": "fn()",
          "isFocusable": "fn() -> ?",
          "isItemEditable": "fn(item: Object, rendererKind: String) -> ?",
          "isItemHovered": "fn(item: Object) -> ?",
          "isItemMoveEnabled": "fn(item: Object, rendererKind: String) -> ?",
          "isItemResizeEnabled": "fn(item: Object, rendererKind: String) -> ?",
          "isItemSelected": "fn(item: Object) -> ?",
          "isLeftToRight": "fn() -> ?",
          "isStartOfDay": "fn(d: Date) -> ?",
          "isToday": "fn(date: Date) -> ?",
          "itemToRenderItem": "fn(item: Object, store: dojo.store.api.Store) -> ?",
          "matrixViewRowHeaderClick": "fn(e: Object)",
          "monthButtonClick": "fn(e: ?)",
          "newDate": "fn(obj: Object) -> ?",
          "nextRange": "fn()",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "previousRange": "fn()",
          "refreshRendering": "fn()",
          "removeView": "fn(view: dojox.calendar.ViewBase)",
          "renderItemToItem": "fn(renderItem: Object, store: dojo.store.api.Store) -> ?",
          "resize": "fn()",
          "selectFromEvent": "fn(e: Event, item: Object, renderer: Object, dispatch: bool) -> ?",
          "setItemSelected": "fn(item: Object, value: bool)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "todayButtonClick": "fn(e: ?)",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "updateRenderers": "fn(obj: ?, stateOnly: ?)",
          "validateRendering": "fn()",
          "weekButtonClick": "fn(e: ?)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn()",
          "onColumnHeaderClick": "fn(e: Object)",
          "onCurrentViewChange": "fn(e: Event)",
          "onExpandRendererClick": "fn(e: Object)",
          "onFocus": "fn()",
          "onGridClick": "fn(e: Object)",
          "onGridDoubleClick": "fn(e: Object)",
          "onItemClick": "fn(e: Object)",
          "onItemContextMenu": "fn(e: Object)",
          "onItemDoubleClick": "fn(e: Object)",
          "onItemEditBegin": "fn(e: Object)",
          "onItemEditBeginGesture": "fn(e: Object)",
          "onItemEditEnd": "fn(e: Object)",
          "onItemEditEndGesture": "fn(e: Object)",
          "onItemEditMoveGesture": "fn(e: Object)",
          "onItemEditResizeGesture": "fn(e: Object)",
          "onItemRollOut": "fn(e: Object)",
          "onItemRollOver": "fn(e: Object)",
          "onRendererCreated": "fn(e: Object)",
          "onRendererDestroyed": "fn(e: Object)",
          "onRendererRecycled": "fn(e: Object)",
          "onRendererReused": "fn(e: Object)",
          "onRenderersLayoutDone": "fn(view: dojox.calendar.ViewBase)",
          "onRowHeaderClick": "fn(e: Object)",
          "onTimeIntervalChange": "fn(e: Object)",
          "onViewAdded": "fn(view: dojox.calendar.ViewBase)",
          "onViewConfigurationChange": "fn(view: dojox.calendar.ViewBase)",
          "onViewRemoved": "fn(view: dojox.calendar.ViewBase)"
        }
      },
      "ExpandRenderer": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attachScope": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret159",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "columnIndex": "number",
          "containerNode": "HTMLElement",
          "date": "Date",
          "dir": "string",
          "domNode": "HTMLElement",
          "down": "bool",
          "focused": "bool",
          "id": "string",
          "items": "Object",
          "lang": "string",
          "owner": "Object",
          "ownerDocument": "Object",
          "rowIndex": "number",
          "searchContainerNode": "bool",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "up": "bool",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "HorizontalRenderer": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "arrowPadding": "number",
          "set": "fn(property: string, value: number)",
          "get": "fn(property: string) -> number",
          "watch": "fn(property: string, callback: ?) -> ret185",
          "attachScope": "Object",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "edited": "bool",
          "focused": "bool",
          "hovered": "bool",
          "id": "string",
          "item": "Object",
          "lang": "string",
          "moveEnabled": "bool",
          "owner": "Object",
          "ownerDocument": "Object",
          "resizeEnabled": "bool",
          "searchContainerNode": "bool",
          "selected": "bool",
          "srcNodeRef": "HTMLElement",
          "storeState": "bool",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "visibilityLimits": "Object",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getDisplayValue": "fn(part: ?) -> ?",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "updateRendering": "fn(w: number, h: number)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "Keyboard": {
        "!type": "fn()",
        "prototype": {
          "allDayKeyboardLeftRightSteps": "string",
          "allDayKeyboardLeftRightUnit": "number",
          "allDayKeyboardUpDownSteps": "string",
          "allDayKeyboardUpDownUnit": "number",
          "focusedItem": "Object",
          "keyboardLeftRightSteps": "number",
          "keyboardLeftRightUnit": "string",
          "keyboardUpDownSteps": "number",
          "keyboardUpDownUnit": "string",
          "maxScrollAnimationDuration": "number",
          "resizeModifier": "string",
          "showFocus": "bool",
          "tabIndex": "string",
          "postCreate": "fn()",
          "onFocusChange": "fn(e: ?)"
        }
      },
      "LabelRenderer": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attachScope": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret214",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "edited": "bool",
          "focused": "bool",
          "hovered": "bool",
          "id": "string",
          "item": "Object",
          "lang": "string",
          "moveEnabled": "bool",
          "owner": "Object",
          "ownerDocument": "Object",
          "resizeEnabled": "bool",
          "searchContainerNode": "bool",
          "selected": "bool",
          "srcNodeRef": "HTMLElement",
          "storeState": "bool",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "visibilityLimits": "Object",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getDisplayValue": "fn(part: ?) -> ?",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "updateRendering": "fn(w: number, h: number)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "MobileCalendar": {
        "!type": "fn(args: Object)",
        "prototype": {
          "allDayAttr": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret242",
          "animateRange": "bool",
          "animationRangeDuration": "number",
          "attachScope": "Object",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "columnView": "Object",
          "columnViewProps": "Object",
          "containerNode": "HTMLElement",
          "contextRequire": "Function",
          "createItemFunc": "Function",
          "createOnGridClick": "bool",
          "cssClassFunc": "Function",
          "currentView": "Object",
          "date": "Date",
          "dateInterval": "string",
          "dateIntervalSteps": "number",
          "datePackage": "Object",
          "decodeDate": "Object",
          "dir": "string",
          "displayedItemsInvalidated": "bool",
          "domNode": "HTMLElement",
          "editable": "bool",
          "encodeDate": "Object",
          "endDate": "Date",
          "endTimeAttr": "string",
          "firstDayOfWeek": "number",
          "focused": "bool",
          "formatItemTimeFunc": "Object",
          "hoveredItem": "Object",
          "id": "string",
          "invalidatingProperties": "Object",
          "invalidRendering": "bool",
          "lang": "string",
          "matrixView": "Object",
          "matrixViewProps": "Object",
          "maxDate": "Date",
          "minDate": "Date",
          "moveEnabled": "bool",
          "ownerDocument": "Object",
          "query": "Object",
          "queryOptions": "Object",
          "resizeEnabled": "bool",
          "searchContainerNode": "bool",
          "selectedItem": "Object",
          "selectedItems": "Object",
          "selectionMode": "string",
          "srcNodeRef": "HTMLElement",
          "startDate": "Date",
          "startTimeAttr": "string",
          "store": "Object",
          "style": "string",
          "subColumnAttr": "string",
          "summaryAttr": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "viewChangeDuration": "number",
          "viewContainer": "HTMLElement",
          "views": "Object",
          "widgetsInTemplate": "bool",
          "addInvalidatingProperties": "fn(properties: [String])",
          "addView": "fn(view: dojox.calendar.ViewBase, index: number)",
          "buildRendering": "fn()",
          "columnViewColumnHeaderClick": "fn(e: Object)",
          "computeTimeInterval": "fn() -> ?",
          "configureButtons": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "dayButtonClick": "fn(e: ?)",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "dispatchChange": "fn(oldSelectedItem: Object, newSelectedItem: Object, renderer: Object, triggerEvent: Event)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "floorDate": "fn(date: Date, unit: String, steps: number, reuse: bool) -> ?",
          "floorToDay": "fn(date: Date, reuse: bool) -> ?",
          "floorToWeek": "fn(d: ?) -> ?",
          "fourDaysButtonClick": "fn(e: ?)",
          "getChildren": "fn() -> [?]",
          "getIdentity": "fn(item: ?) -> ?",
          "getItemStoreState": "fn(item: ?) -> ?",
          "getParent": "fn() -> ?",
          "goToday": "fn()",
          "installDefaultViewsActions": "fn(views: ?)",
          "invalidateRendering": "fn()",
          "isFocusable": "fn() -> ?",
          "isItemEditable": "fn(item: Object, rendererKind: String) -> ?",
          "isItemHovered": "fn(item: Object) -> ?",
          "isItemMoveEnabled": "fn(item: Object, rendererKind: String) -> ?",
          "isItemResizeEnabled": "fn(item: Object, rendererKind: String) -> ?",
          "isItemSelected": "fn(item: Object) -> ?",
          "isLeftToRight": "fn() -> ?",
          "isStartOfDay": "fn(d: Date) -> ?",
          "isToday": "fn(date: Date) -> ?",
          "itemToRenderItem": "fn(item: Object, store: dojo.store.api.Store) -> ?",
          "matrixViewRowHeaderClick": "fn(e: Object)",
          "monthButtonClick": "fn(e: ?)",
          "newDate": "fn(obj: Object) -> ?",
          "nextRange": "fn()",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "previousRange": "fn()",
          "refreshRendering": "fn()",
          "removeView": "fn(view: dojox.calendar.ViewBase)",
          "renderItemToItem": "fn(renderItem: Object, store: dojo.store.api.Store) -> ?",
          "resize": "fn()",
          "selectFromEvent": "fn(e: Event, item: Object, renderer: Object, dispatch: bool) -> ?",
          "setItemSelected": "fn(item: Object, value: bool)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "todayButtonClick": "fn(e: ?)",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "updateRenderers": "fn(obj: ?, stateOnly: ?)",
          "validateRendering": "fn()",
          "weekButtonClick": "fn(e: ?)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn()",
          "onColumnHeaderClick": "fn(e: Object)",
          "onCurrentViewChange": "fn(e: Event)",
          "onExpandRendererClick": "fn(e: Object)",
          "onFocus": "fn()",
          "onGridClick": "fn(e: Object)",
          "onGridDoubleClick": "fn(e: Object)",
          "onItemClick": "fn(e: Object)",
          "onItemContextMenu": "fn(e: Object)",
          "onItemDoubleClick": "fn(e: Object)",
          "onItemEditBegin": "fn(e: Object)",
          "onItemEditBeginGesture": "fn(e: Object)",
          "onItemEditEnd": "fn(e: Object)",
          "onItemEditEndGesture": "fn(e: Object)",
          "onItemEditMoveGesture": "fn(e: Object)",
          "onItemEditResizeGesture": "fn(e: Object)",
          "onItemRollOut": "fn(e: Object)",
          "onItemRollOver": "fn(e: Object)",
          "onRendererCreated": "fn(e: Object)",
          "onRendererDestroyed": "fn(e: Object)",
          "onRendererRecycled": "fn(e: Object)",
          "onRendererReused": "fn(e: Object)",
          "onRenderersLayoutDone": "fn(view: dojox.calendar.ViewBase)",
          "onRowHeaderClick": "fn(e: Object)",
          "onTimeIntervalChange": "fn(e: Object)",
          "onViewAdded": "fn(view: dojox.calendar.ViewBase)",
          "onViewConfigurationChange": "fn(view: dojox.calendar.ViewBase)",
          "onViewRemoved": "fn(view: dojox.calendar.ViewBase)"
        }
      },
      "MobileHorizontalRenderer": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "arrowPadding": "number",
          "set": "fn(property: string, value: number)",
          "get": "fn(property: string) -> number",
          "watch": "fn(property: string, callback: ?) -> ret306",
          "attachScope": "Object",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "edited": "bool",
          "focused": "bool",
          "hovered": "bool",
          "id": "string",
          "item": "Object",
          "lang": "string",
          "mobile": "bool",
          "moveEnabled": "bool",
          "owner": "Object",
          "ownerDocument": "Object",
          "resizeEnabled": "bool",
          "searchContainerNode": "bool",
          "selected": "bool",
          "srcNodeRef": "HTMLElement",
          "storeState": "bool",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "visibilityLimits": "Object",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getDisplayValue": "fn(part: ?) -> ?",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "updateRendering": "fn(w: number, h: number)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "MobileVerticalRenderer": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attachScope": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret336",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "edited": "bool",
          "focused": "bool",
          "hovered": "bool",
          "id": "string",
          "item": "Object",
          "lang": "string",
          "mobile": "bool",
          "moveEnabled": "bool",
          "owner": "Object",
          "ownerDocument": "Object",
          "resizeEnabled": "bool",
          "searchContainerNode": "bool",
          "selected": "bool",
          "srcNodeRef": "HTMLElement",
          "storeState": "bool",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "visibilityLimits": "Object",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getDisplayValue": "fn(part: ?) -> ?",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "updateRendering": "fn(w: number, h: number)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "Mouse": {
        "!type": "fn()",
        "prototype": {
          "triggerExtent": "number",
          "postMixInProperties": "fn()",
          "onItemRollOut": "fn(e: Object)",
          "onItemRollOver": "fn(e: Object)"
        }
      },
      "StoreMixin": {
        "!type": "fn()",
        "prototype": {
          "allDayAttr": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret365",
          "cssClassFunc": "Function",
          "decodeDate": "Object",
          "displayedItemsInvalidated": "bool",
          "encodeDate": "Object",
          "endTimeAttr": "string",
          "query": "Object",
          "queryOptions": "Object",
          "startTimeAttr": "string",
          "store": "Object",
          "subColumnAttr": "string",
          "summaryAttr": "string",
          "getItemStoreState": "fn(item: ?) -> ?",
          "itemToRenderItem": "fn(item: Object, store: dojo.store.api.Store) -> ?",
          "postscript": "fn(params: Object)",
          "renderItemToItem": "fn(renderItem: Object, store: dojo.store.api.Store) -> ?"
        }
      },
      "Touch": {
        "!type": "fn()",
        "prototype": {
          "autoScrollTouchMargin": "number",
          "touchEndEditingTimer": "number",
          "touchStartEditingTimer": "number",
          "postMixInProperties": "fn()"
        }
      },
      "VerticalRenderer": {
        "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
        "prototype": {
          "attachScope": "Object",
          "set": "fn(property: string, value: Object)",
          "get": "fn(property: string) -> Object",
          "watch": "fn(property: string, callback: ?) -> ret378",
          "attributeMap": "Object",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "edited": "bool",
          "focused": "bool",
          "hovered": "bool",
          "id": "string",
          "item": "Object",
          "lang": "string",
          "moveEnabled": "bool",
          "owner": "Object",
          "ownerDocument": "Object",
          "resizeEnabled": "bool",
          "searchContainerNode": "bool",
          "selected": "bool",
          "srcNodeRef": "HTMLElement",
          "storeState": "bool",
          "style": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "visibilityLimits": "Object",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: bool)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getDisplayValue": "fn(part: ?) -> ?",
          "getParent": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "updateRendering": "fn(w: number, h: number)",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onFocus": "fn()"
        }
      },
      "ViewBase": {
        "!type": "fn(args: Object)",
        "prototype": {
          "allDayAttr": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret406",
          "allowResizeLessThan24H": "bool",
          "allowStartEndSwap": "bool",
          "allowSubColumnMove": "bool",
          "attributeMap": "Object",
          "autoScroll": "bool",
          "baseClass": "string",
          "class": "string",
          "containerNode": "HTMLElement",
          "createOnGridClick": "bool",
          "cssClassFunc": "Function",
          "datePackage": "Object",
          "decodeDate": "Object",
          "dir": "string",
          "displayedItemsInvalidated": "bool",
          "domNode": "HTMLElement",
          "doubleTapDelay": "number",
          "editable": "bool",
          "encodeDate": "Object",
          "endTimeAttr": "string",
          "focused": "bool",
          "formatItemTimeFunc": "Function",
          "hoveredItem": "Object",
          "id": "string",
          "invalidatingProperties": "Object",
          "invalidRendering": "bool",
          "itemToRenderer": "Object",
          "itemToRendererKindFunc": "Function",
          "lang": "string",
          "layoutPriorityFunction": "Function",
          "liveLayout": "bool",
          "minDurationSteps": "number",
          "minDurationUnit": "string",
          "moveEnabled": "bool",
          "ownerDocument": "Object",
          "query": "Object",
          "queryOptions": "Object",
          "rendererList": "[?]",
          "rendererPool": "[?]",
          "resizeCursor": "string",
          "resizeEnabled": "bool",
          "scrollable": "bool",
          "scrollMethod": "string",
          "selectedItem": "Object",
          "selectedItems": "Object",
          "selectionMode": "string",
          "snapSteps": "number",
          "snapUnit": "string",
          "srcNodeRef": "HTMLElement",
          "startTimeAttr": "string",
          "stayInView": "bool",
          "store": "Object",
          "style": "string",
          "subColumnAttr": "string",
          "summaryAttr": "string",
          "title": "string",
          "tooltip": "string",
          "viewKind": "string",
          "addInvalidatingProperties": "fn(properties: [String])",
          "afterActivate": "fn()",
          "afterDeactivate": "fn()",
          "applyRendererZIndex": "fn(item: Object, renderer: Object, hovered: bool, selected: bool, edited: bool, focused: bool)",
          "beforeActivate": "fn()",
          "beforeDeactivate": "fn()",
          "buildRendering": "fn()",
          "computeOverlapping": "fn(layoutItems: [Object], func: ?) -> ?",
          "computeProjectionOnDate": "fn(renderData: Object, refDate: Date, date: [Date], max: number) -> ?",
          "computeRangeOverlap": "fn(renderData: Object, start1: Date, end1: Date, start2: Date, end2: Date, includeLimits: bool) -> ?",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "createItemFunc": "fn(view: dojox.calendar.ViewBase, d: Date, e: MouseEvent)",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: ?)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "dispatchChange": "fn(oldSelectedItem: Object, newSelectedItem: Object, renderer: Object, triggerEvent: Event)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "ensureMinimalDuration": "fn(renderData: Object, item: Object, unit: String, steps: number, editKind: String)",
          "ensureVisibility": "fn(start: Date, end: Date, margin: number, visibilityTarget: String, duration: number)",
          "floorDate": "fn(date: Date, unit: String, steps: number, reuse: bool) -> ?",
          "floorToDay": "fn(date: Date, reuse: bool) -> ?",
          "floorToMonth": "fn(date: Date, reuse: bool) -> ?",
          "getChildren": "fn() -> [?]",
          "getCSSPrefix": "fn() -> String",
          "getIdentity": "fn(item: ?) -> ?",
          "getItemStoreState": "fn(item: ?) -> ?",
          "getParent": "fn() -> ?",
          "getRenderers": "fn(item: Object) -> ?",
          "getSubColumn": "fn(e: Event, x: number, y: number, touchIndex: number) -> ?",
          "getSubColumnIndex": "fn(value: String) -> number",
          "getTime": "fn(e: Event, x: number, y: number, touchIndex: number) -> ?",
          "getWeekNumberLabel": "fn(date: Date) -> ?",
          "invalidateLayout": "fn()",
          "invalidateRendering": "fn()",
          "isAscendantHasClass": "fn(node: HTMLElement, ancestor: HTMLElement, className: String) -> ?",
          "isFocusable": "fn() -> ?",
          "isItemBeingEdited": "fn(item: Object) -> ?",
          "isItemEditable": "fn(item: Object, rendererKind: String) -> ?",
          "isItemFocused": "fn(item: Object) -> ?",
          "isItemHovered": "fn(item: Object) -> ?",
          "isItemMoveEnabled": "fn(item: Object, rendererKind: String) -> ?",
          "isItemResizeEnabled": "fn(item: Object, rendererKind: String) -> ?",
          "isItemSelected": "fn(item: ?) -> ?",
          "isLeftToRight": "fn() -> ?",
          "isOverlapping": "fn(renderData: Object, start1: Date, end1: Date, start2: Date, end2: Date, includeLimits: bool) -> ?",
          "isSameDay": "fn(date1: Date, date2: Date) -> ?",
          "isStartOfDay": "fn(d: Date) -> ?",
          "isToday": "fn(date: Date) -> ?",
          "isWeekEnd": "fn(date: Date) -> ?",
          "itemToRenderItem": "fn(item: Object, store: dojo.store.api.Store) -> ?",
          "newDate": "fn(obj: Object) -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "refreshRendering": "fn()",
          "renderItemToItem": "fn(renderItem: Object, store: dojo.store.api.Store) -> ?",
          "resize": "fn()",
          "scrollView": "fn(dir: number)",
          "selectFromEvent": "fn(e: ?, item: ?, renderer: ?, dispatch: ?)",
          "setItemSelected": "fn(item: ?, value: ?)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "updateRenderers": "fn(obj: Object, stateOnly: bool)",
          "validateRendering": "fn()",
          "onBlur": "fn()",
          "onChange": "fn()",
          "onFocus": "fn()",
          "onGridClick": "fn(e: Object)",
          "onGridDoubleClick": "fn(e: Object)",
          "onItemClick": "fn(e: Object)",
          "onItemContextMenu": "fn(e: Object)",
          "onItemDoubleClick": "fn(e: Object)",
          "onItemEditBegin": "fn(e: ?)",
          "onItemEditBeginGesture": "fn(e: Object)",
          "onItemEditEnd": "fn(e: ?)",
          "onItemEditEndGesture": "fn(e: Object)",
          "onItemEditMoveGesture": "fn(e: Object)",
          "onItemEditResizeGesture": "fn(e: Object)",
          "onRendererCreated": "fn(e: Object)",
          "onRendererDestroyed": "fn(e: Object)",
          "onRendererRecycled": "fn(e: Object)",
          "onRendererReused": "fn(e: Object)",
          "onRenderersLayoutDone": "fn(view: ?)"
        }
      },
      "ColumnViewSecondarySheet": {
        "!type": "fn()",
        "prototype": {
          "allDayAttr": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret465",
          "allowResizeLessThan24H": "bool",
          "allowStartEndSwap": "bool",
          "allowSubColumnMove": "bool",
          "attachScope": "Object",
          "attributeMap": "Object",
          "autoScroll": "bool",
          "baseClass": "string",
          "cellHeaderLongPattern": "string",
          "cellHeaderShortPattern": "string",
          "cellPaddingTop": "number",
          "class": "string",
          "columnCount": "number",
          "containerNode": "HTMLElement",
          "createOnGridClick": "bool",
          "cssClassFunc": "Function",
          "datePackage": "Object",
          "decodeDate": "Object",
          "dir": "string",
          "displayedItemsInvalidated": "bool",
          "domNode": "HTMLElement",
          "doubleTapDelay": "number",
          "editable": "bool",
          "encodeDate": "Object",
          "endTimeAttr": "string",
          "expandDuration": "number",
          "expandEasing": "Function",
          "expandRenderer": "Object",
          "expandRendererHeight": "number",
          "focused": "bool",
          "formatItemTimeFunc": "Function",
          "horizontalRenderer": "Object",
          "horizontalRendererHeight": "number",
          "hoveredItem": "Object",
          "id": "string",
          "invalidatingProperties": "Object",
          "invalidRendering": "bool",
          "itemToRenderer": "Object",
          "itemToRendererKindFunc": "Function",
          "labelRenderer": "Object",
          "labelRendererHeight": "number",
          "lang": "string",
          "layoutDuringResize": "bool",
          "layoutPriorityFunction": "Function",
          "liveLayout": "bool",
          "minDurationSteps": "number",
          "minDurationUnit": "string",
          "moveEnabled": "bool",
          "naturalRowsHeight": "Object",
          "ownerDocument": "Object",
          "percentOverlap": "number",
          "query": "Object",
          "queryOptions": "Object",
          "refEndTime": "Object",
          "refStartTime": "Object",
          "renderData": "Object",
          "rendererList": "[?]",
          "rendererPool": "[?]",
          "resizeAnimationDuration": "number",
          "resizeCursor": "string",
          "resizeEnabled": "bool",
          "roundToDay": "bool",
          "rowCount": "number",
          "scrollable": "bool",
          "scrollMethod": "string",
          "searchContainerNode": "bool",
          "selectedItem": "Object",
          "selectedItems": "Object",
          "selectionMode": "string",
          "showCellLabel": "bool",
          "snapSteps": "number",
          "snapUnit": "string",
          "srcNodeRef": "HTMLElement",
          "startDate": "Date",
          "startTimeAttr": "string",
          "stayInView": "bool",
          "store": "Object",
          "style": "string",
          "styleGridCellFunc": "Function",
          "subColumnAttr": "string",
          "summaryAttr": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "triggerExtent": "number",
          "verticalGap": "number",
          "viewKind": "string",
          "addInvalidatingProperties": "fn(properties: [String])",
          "afterActivate": "fn()",
          "afterDeactivate": "fn()",
          "beforeActivate": "fn()",
          "beforeDeactivate": "fn()",
          "buildRendering": "fn()",
          "collapseRow": "fn(duration: number, easing: Function, apply: ?)",
          "computeOverlapping": "fn(layoutItems: [Object], func: ?) -> ?",
          "computeProjectionOnDate": "fn(renderData: Object, refDate: Date, date: [Date], max: number) -> ?",
          "computeRangeOverlap": "fn(renderData: Object, start1: Date, end1: Date, start2: Date, end2: Date, includeLimits: bool) -> ?",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "createItemFunc": "fn(view: dojox.calendar.ViewBase, d: Date, e: MouseEvent)",
          "defaultStyleGridCell": "fn(node: HTMLElement, date: Date, renderData: Object)",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: ?)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "dispatchChange": "fn(oldSelectedItem: Object, newSelectedItem: Object, renderer: Object, triggerEvent: Event)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "ensureMinimalDuration": "fn(renderData: Object, item: Object, unit: String, steps: number, editKind: String)",
          "ensureVisibility": "fn(start: Date, end: Date, margin: number, visibilityTarget: String, duration: number)",
          "expandRendererClickHandler": "fn(e: Event, renderer: Object)",
          "expandRow": "fn(rowIndex: number, colIndex: number, duration: number, easing: Function, apply: ?) -> number",
          "floorDate": "fn(date: Date, unit: String, steps: number, reuse: bool) -> ?",
          "floorToDay": "fn(date: Date, reuse: bool) -> ?",
          "floorToMonth": "fn(date: Date, reuse: bool) -> ?",
          "getChildren": "fn() -> [?]",
          "getCSSPrefix": "fn() -> String",
          "getExpandedRowIndex": "fn() -> number",
          "getIdentity": "fn(item: ?) -> ?",
          "getItemStoreState": "fn(item: ?) -> ?",
          "getParent": "fn() -> ?",
          "getRenderers": "fn(item: Object) -> ?",
          "getSubColumn": "fn(e: Event, x: number, y: number, touchIndex: number) -> ?",
          "getSubColumnIndex": "fn(value: String) -> number",
          "getTime": "fn(e: Event, x: number, y: number, touchIndex: number) -> ?",
          "getWeekNumberLabel": "fn(date: Date) -> ?",
          "invalidateLayout": "fn()",
          "invalidateRendering": "fn()",
          "isAscendantHasClass": "fn(node: HTMLElement, ancestor: HTMLElement, className: String) -> ?",
          "isFocusable": "fn() -> ?",
          "isItemBeingEdited": "fn(item: Object) -> ?",
          "isItemEditable": "fn(item: Object, rendererKind: String) -> ?",
          "isItemFocused": "fn(item: Object) -> ?",
          "isItemHovered": "fn(item: Object) -> ?",
          "isItemMoveEnabled": "fn(item: Object, rendererKind: String) -> ?",
          "isItemResizeEnabled": "fn(item: Object, rendererKind: String) -> ?",
          "isItemSelected": "fn(item: ?) -> ?",
          "isLeftToRight": "fn() -> ?",
          "isOverlapping": "fn(renderData: Object, start1: Date, end1: Date, start2: Date, end2: Date, includeLimits: bool) -> ?",
          "isSameDay": "fn(date1: Date, date2: Date) -> ?",
          "isStartOfDay": "fn(d: Date) -> ?",
          "isToday": "fn(date: Date) -> ?",
          "isWeekEnd": "fn(date: Date) -> ?",
          "itemToRenderItem": "fn(item: Object, store: dojo.store.api.Store) -> ?",
          "newDate": "fn(obj: Object) -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "refreshRendering": "fn()",
          "renderItemToItem": "fn(renderItem: Object, store: dojo.store.api.Store) -> ?",
          "resize": "fn(e: ?)",
          "scrollView": "fn(dir: number)",
          "selectFromEvent": "fn(e: ?, item: ?, renderer: ?, dispatch: ?)",
          "setItemSelected": "fn(item: ?, value: ?)",
          "startup": "fn()",
          "styleColumnHeaderCell": "fn(node: HTMLElement, date: Date, renderData: Object)",
          "styleGridCell": "fn(node: HTMLElement, date: Date, renderData: Object)",
          "styleRowHeaderCell": "fn(node: HTMLElement, date: Date, renderData: Object)",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "updateRenderers": "fn(obj: Object, stateOnly: bool)",
          "validateRendering": "fn()",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn()",
          "onExpandAnimationEnd": "fn(expand: bool)",
          "onExpandRendererClick": "fn(e: Object)",
          "onFocus": "fn()",
          "onGridClick": "fn(e: Object)",
          "onGridDoubleClick": "fn(e: Object)",
          "onItemClick": "fn(e: Object)",
          "onItemContextMenu": "fn(e: Object)",
          "onItemDoubleClick": "fn(e: Object)",
          "onItemEditBegin": "fn(e: ?)",
          "onItemEditBeginGesture": "fn(e: Object)",
          "onItemEditEnd": "fn(e: ?)",
          "onItemEditEndGesture": "fn(e: Object)",
          "onItemEditMoveGesture": "fn(e: Object)",
          "onItemEditResizeGesture": "fn(e: Object)",
          "onRendererCreated": "fn(e: Object)",
          "onRendererDestroyed": "fn(e: Object)",
          "onRendererRecycled": "fn(e: Object)",
          "onRendererReused": "fn(e: Object)",
          "onRenderersLayoutDone": "fn(view: ?)",
          "onRowHeaderClick": "fn(e: Object)"
        }
      },
      "ColumnView": {
        "!type": "fn()",
        "prototype": {
          "allDayAttr": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret554",
          "allowResizeLessThan24H": "bool",
          "allowStartEndSwap": "bool",
          "allowSubColumnMove": "bool",
          "attachScope": "Object",
          "attributeMap": "Object",
          "autoScroll": "bool",
          "baseClass": "string",
          "class": "string",
          "columnCount": "number",
          "columnHeaderDatePattern": "string",
          "containerNode": "HTMLElement",
          "createOnGridClick": "bool",
          "cssClassFunc": "Function",
          "datePackage": "Object",
          "decodeDate": "Object",
          "dir": "string",
          "displayedItemsInvalidated": "bool",
          "domNode": "HTMLElement",
          "doubleTapDelay": "number",
          "editable": "bool",
          "encodeDate": "Object",
          "endTimeAttr": "string",
          "focused": "bool",
          "formatItemTimeFunc": "Function",
          "headerPadding": "number",
          "horizontalGap": "number",
          "hourSize": "number",
          "hoveredItem": "Object",
          "id": "string",
          "invalidatingProperties": "Object",
          "invalidRendering": "bool",
          "itemToRenderer": "Object",
          "itemToRendererKindFunc": "Function",
          "lang": "string",
          "layoutPriorityFunction": "Function",
          "liveLayout": "bool",
          "maxHours": "number",
          "minColumnWidth": "number",
          "minDurationSteps": "number",
          "minDurationUnit": "string",
          "minHours": "number",
          "moveEnabled": "bool",
          "ownerDocument": "Object",
          "percentOverlap": "number",
          "query": "Object",
          "queryOptions": "Object",
          "renderData": "Object",
          "rendererList": "[?]",
          "rendererPool": "[?]",
          "resizeCursor": "string",
          "resizeEnabled": "bool",
          "rowHeaderFirstLabelOffset": "number",
          "rowHeaderGridSlotDuration": "number",
          "rowHeaderLabelOffset": "number",
          "rowHeaderLabelSlotDuration": "number",
          "rowHeaderTimePattern": "string",
          "scrollable": "bool",
          "scrollBarRTLPosition": "string",
          "scrollMethod": "string",
          "searchContainerNode": "bool",
          "secondarySheetProps": "Object",
          "selectedItem": "Object",
          "selectedItems": "Object",
          "selectionMode": "string",
          "showTimeIndicator": "bool",
          "snapSteps": "number",
          "snapUnit": "string",
          "srcNodeRef": "HTMLElement",
          "startDate": "Date",
          "startTimeAttr": "string",
          "startTimeOfDay": "Object",
          "stayInView": "bool",
          "store": "Object",
          "style": "string",
          "styleGridCellFunc": "Function",
          "subColumnAttr": "string",
          "subColumns": "Object",
          "summaryAttr": "string",
          "templatePath": "string",
          "templateString": "string",
          "timeIndicatorRefreshInterval": "number",
          "timeSlotDuration": "number",
          "title": "string",
          "tooltip": "string",
          "verticalRenderer": "Object",
          "viewKind": "string",
          "addInvalidatingProperties": "fn(properties: [String])",
          "afterActivate": "fn()",
          "afterDeactivate": "fn()",
          "applyRendererZIndex": "fn(item: Object, renderer: Object, hovered: bool, selected: bool, edited: bool, focused: bool)",
          "beforeActivate": "fn()",
          "beforeDeactivate": "fn()",
          "buildRendering": "fn()",
          "computeOverlapping": "fn(layoutItems: [Object], func: ?) -> ?",
          "computeProjectionOnDate": "fn(renderData: Object, refDate: Date, date: [Date], max: number) -> ?",
          "computeRangeOverlap": "fn(renderData: Object, start1: Date, end1: Date, start2: Date, end2: Date, includeLimits: bool) -> ?",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "createItemFunc": "fn(view: dojox.calendar.ViewBase, d: Date, e: MouseEvent)",
          "defaultStyleGridCell": "fn(node: HTMLElement, date: Date, hours: number, minutes: number, renderData: Object) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: ?)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "dispatchChange": "fn(oldSelectedItem: Object, newSelectedItem: Object, renderer: Object, triggerEvent: Event)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "ensureMinimalDuration": "fn(renderData: Object, item: Object, unit: String, steps: number, editKind: String)",
          "ensureVisibility": "fn(start: Date, end: Date, margin: number, visibilityTarget: String, duration: number)",
          "floorDate": "fn(date: Date, unit: String, steps: number, reuse: bool) -> ?",
          "floorToDay": "fn(date: Date, reuse: bool) -> ?",
          "floorToMonth": "fn(date: Date, reuse: bool) -> ?",
          "getChildren": "fn() -> [?]",
          "getCSSPrefix": "fn() -> String",
          "getIdentity": "fn(item: ?) -> ?",
          "getItemStoreState": "fn(item: ?) -> ?",
          "getParent": "fn() -> ?",
          "getRenderers": "fn(item: Object) -> ?",
          "getSecondarySheet": "fn() -> ?",
          "getSubColumn": "fn(e: Event, x: number, y: number, touchIndex: number) -> ?",
          "getSubColumnIndex": "fn(value: String) -> number",
          "getTime": "fn(e: Event, x: number, y: number, touchIndex: number) -> ?",
          "getTimeOfDay": "fn(pos: number, rd: Object) -> Object",
          "getWeekNumberLabel": "fn(date: Date) -> ?",
          "invalidateRendering": "fn()",
          "isAscendantHasClass": "fn(node: HTMLElement, ancestor: HTMLElement, className: String) -> ?",
          "isFocusable": "fn() -> ?",
          "isItemBeingEdited": "fn(item: Object) -> ?",
          "isItemEditable": "fn(item: Object, rendererKind: String) -> ?",
          "isItemFocused": "fn(item: Object) -> ?",
          "isItemHovered": "fn(item: Object) -> ?",
          "isItemMoveEnabled": "fn(item: Object, rendererKind: String) -> ?",
          "isItemResizeEnabled": "fn(item: Object, rendererKind: String) -> ?",
          "isItemSelected": "fn(item: ?) -> ?",
          "isLeftToRight": "fn() -> ?",
          "isOverlapping": "fn(renderData: Object, start1: Date, end1: Date, start2: Date, end2: Date, includeLimits: bool) -> ?",
          "isSameDay": "fn(date1: Date, date2: Date) -> ?",
          "isStartOfDay": "fn(d: Date) -> ?",
          "isToday": "fn(date: Date) -> ?",
          "isWeekEnd": "fn(date: Date) -> ?",
          "itemToRenderItem": "fn(item: Object, store: dojo.store.api.Store) -> ?",
          "newDate": "fn(obj: Object) -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "postscript": "fn()",
          "refreshRendering": "fn()",
          "renderItemToItem": "fn(renderItem: Object, store: dojo.store.api.Store) -> ?",
          "resizeSecondarySheet": "fn(height: number)",
          "scrollView": "fn(dir: number)",
          "scrollViewHorizontal": "fn(dir: number)",
          "secondarySheetClass": "fn()",
          "selectFromEvent": "fn(e: ?, item: ?, renderer: ?, dispatch: ?)",
          "setItemSelected": "fn(item: ?, value: ?)",
          "startup": "fn()",
          "styleColumnHeaderCell": "fn(node: HTMLElement, date: Date, renderData: Object)",
          "styleGridCell": "fn(node: HTMLElement, date: Date, hours: ?, minutes: ?, renderData: Object)",
          "styleRowHeaderCell": "fn(node: HTMLElement, h: number, m: ?, renderData: Object)",
          "styleSubColumnHeaderCell": "fn(node: HTMLElement, date: ?, renderData: Object)",
          "subColumnLabelFunc": "fn(value: ?) -> ?",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "updateRenderers": "fn(obj: ?, stateOnly: ?)",
          "validateRendering": "fn()",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn()",
          "onColumnHeaderClick": "fn(e: Object)",
          "onFocus": "fn()",
          "onGridClick": "fn(e: Object)",
          "onGridDoubleClick": "fn(e: Object)",
          "onItemClick": "fn(e: Object)",
          "onItemContextMenu": "fn(e: Object)",
          "onItemDoubleClick": "fn(e: Object)",
          "onItemEditBegin": "fn(e: ?)",
          "onItemEditBeginGesture": "fn(e: Object)",
          "onItemEditEnd": "fn(e: ?)",
          "onItemEditEndGesture": "fn(e: Object)",
          "onItemEditMoveGesture": "fn(e: Object)",
          "onItemEditResizeGesture": "fn(e: Object)",
          "onRendererCreated": "fn(e: Object)",
          "onRendererDestroyed": "fn(e: Object)",
          "onRendererRecycled": "fn(e: Object)",
          "onRendererReused": "fn(e: Object)",
          "onRenderersLayoutDone": "fn(view: ?)",
          "onRowHeaderClick": "fn(e: ?)"
        }
      },
      "MatrixView": {
        "!type": "fn()",
        "prototype": {
          "allDayAttr": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret642",
          "allowResizeLessThan24H": "bool",
          "allowStartEndSwap": "bool",
          "allowSubColumnMove": "bool",
          "attachScope": "Object",
          "attributeMap": "Object",
          "autoScroll": "bool",
          "baseClass": "string",
          "cellHeaderLongPattern": "string",
          "cellHeaderShortPattern": "string",
          "cellPaddingTop": "number",
          "class": "string",
          "columnCount": "number",
          "containerNode": "HTMLElement",
          "createOnGridClick": "bool",
          "cssClassFunc": "Function",
          "datePackage": "Object",
          "decodeDate": "Object",
          "dir": "string",
          "displayedItemsInvalidated": "bool",
          "domNode": "HTMLElement",
          "doubleTapDelay": "number",
          "editable": "bool",
          "encodeDate": "Object",
          "endTimeAttr": "string",
          "expandDuration": "number",
          "expandEasing": "Function",
          "expandRenderer": "Object",
          "expandRendererHeight": "number",
          "focused": "bool",
          "formatItemTimeFunc": "Function",
          "horizontalRenderer": "Object",
          "horizontalRendererHeight": "number",
          "hoveredItem": "Object",
          "id": "string",
          "invalidatingProperties": "Object",
          "invalidRendering": "bool",
          "itemToRenderer": "Object",
          "itemToRendererKindFunc": "Function",
          "labelRenderer": "Object",
          "labelRendererHeight": "number",
          "lang": "string",
          "layoutDuringResize": "bool",
          "layoutPriorityFunction": "Function",
          "liveLayout": "bool",
          "minDurationSteps": "number",
          "minDurationUnit": "string",
          "moveEnabled": "bool",
          "naturalRowsHeight": "Object",
          "ownerDocument": "Object",
          "percentOverlap": "number",
          "query": "Object",
          "queryOptions": "Object",
          "refEndTime": "Object",
          "refStartTime": "Object",
          "renderData": "Object",
          "rendererList": "[?]",
          "rendererPool": "[?]",
          "resizeAnimationDuration": "number",
          "resizeCursor": "string",
          "resizeEnabled": "bool",
          "roundToDay": "bool",
          "rowCount": "number",
          "scrollable": "bool",
          "scrollMethod": "string",
          "searchContainerNode": "bool",
          "selectedItem": "Object",
          "selectedItems": "Object",
          "selectionMode": "string",
          "showCellLabel": "bool",
          "snapSteps": "number",
          "snapUnit": "string",
          "srcNodeRef": "HTMLElement",
          "startDate": "Date",
          "startTimeAttr": "string",
          "stayInView": "bool",
          "store": "Object",
          "style": "string",
          "styleGridCellFunc": "Function",
          "subColumnAttr": "string",
          "summaryAttr": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "triggerExtent": "number",
          "verticalGap": "number",
          "viewKind": "string",
          "addInvalidatingProperties": "fn(properties: [String])",
          "afterActivate": "fn()",
          "afterDeactivate": "fn()",
          "beforeActivate": "fn()",
          "beforeDeactivate": "fn()",
          "buildRendering": "fn()",
          "collapseRow": "fn(duration: number, easing: Function, apply: ?)",
          "computeOverlapping": "fn(layoutItems: [Object], func: ?) -> ?",
          "computeProjectionOnDate": "fn(renderData: Object, refDate: Date, date: [Date], max: number) -> ?",
          "computeRangeOverlap": "fn(renderData: Object, start1: Date, end1: Date, start2: Date, end2: Date, includeLimits: bool) -> ?",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "createItemFunc": "fn(view: dojox.calendar.ViewBase, d: Date, e: MouseEvent)",
          "defaultStyleGridCell": "fn(node: HTMLElement, date: Date, renderData: Object)",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: ?)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "dispatchChange": "fn(oldSelectedItem: Object, newSelectedItem: Object, renderer: Object, triggerEvent: Event)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "ensureMinimalDuration": "fn(renderData: Object, item: Object, unit: String, steps: number, editKind: String)",
          "ensureVisibility": "fn(start: Date, end: Date, margin: number, visibilityTarget: String, duration: number)",
          "expandRendererClickHandler": "fn(e: Event, renderer: Object)",
          "expandRow": "fn(rowIndex: number, colIndex: number, duration: number, easing: Function, apply: ?) -> number",
          "floorDate": "fn(date: Date, unit: String, steps: number, reuse: bool) -> ?",
          "floorToDay": "fn(date: Date, reuse: bool) -> ?",
          "floorToMonth": "fn(date: Date, reuse: bool) -> ?",
          "getChildren": "fn() -> [?]",
          "getCSSPrefix": "fn() -> String",
          "getExpandedRowIndex": "fn() -> number",
          "getIdentity": "fn(item: ?) -> ?",
          "getItemStoreState": "fn(item: ?) -> ?",
          "getParent": "fn() -> ?",
          "getRenderers": "fn(item: Object) -> ?",
          "getSubColumn": "fn(e: Event, x: number, y: number, touchIndex: number) -> ?",
          "getSubColumnIndex": "fn(value: String) -> number",
          "getTime": "fn(e: Event, x: number, y: number, touchIndex: number) -> ?",
          "getWeekNumberLabel": "fn(date: Date) -> ?",
          "invalidateLayout": "fn()",
          "invalidateRendering": "fn()",
          "isAscendantHasClass": "fn(node: HTMLElement, ancestor: HTMLElement, className: String) -> ?",
          "isFocusable": "fn() -> ?",
          "isItemBeingEdited": "fn(item: Object) -> ?",
          "isItemEditable": "fn(item: Object, rendererKind: String) -> ?",
          "isItemFocused": "fn(item: Object) -> ?",
          "isItemHovered": "fn(item: Object) -> ?",
          "isItemMoveEnabled": "fn(item: Object, rendererKind: String) -> ?",
          "isItemResizeEnabled": "fn(item: Object, rendererKind: String) -> ?",
          "isItemSelected": "fn(item: ?) -> ?",
          "isLeftToRight": "fn() -> ?",
          "isOverlapping": "fn(renderData: Object, start1: Date, end1: Date, start2: Date, end2: Date, includeLimits: bool) -> ?",
          "isSameDay": "fn(date1: Date, date2: Date) -> ?",
          "isStartOfDay": "fn(d: Date) -> ?",
          "isToday": "fn(date: Date) -> ?",
          "isWeekEnd": "fn(date: Date) -> ?",
          "itemToRenderItem": "fn(item: Object, store: dojo.store.api.Store) -> ?",
          "newDate": "fn(obj: Object) -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "refreshRendering": "fn()",
          "renderItemToItem": "fn(renderItem: Object, store: dojo.store.api.Store) -> ?",
          "resize": "fn(e?: ?)",
          "scrollView": "fn(dir: number)",
          "selectFromEvent": "fn(e: ?, item: ?, renderer: ?, dispatch: ?)",
          "setItemSelected": "fn(item: ?, value: ?)",
          "startup": "fn()",
          "styleColumnHeaderCell": "fn(node: HTMLElement, date: Date, renderData: Object)",
          "styleGridCell": "fn(node: HTMLElement, date: Date, renderData: Object)",
          "styleRowHeaderCell": "fn(node: HTMLElement, date: Date, renderData: Object)",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "updateRenderers": "fn(obj: Object, stateOnly: bool)",
          "validateRendering": "fn()",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn()",
          "onExpandAnimationEnd": "fn(expand: bool)",
          "onExpandRendererClick": "fn(e: Object)",
          "onFocus": "fn()",
          "onGridClick": "fn(e: Object)",
          "onGridDoubleClick": "fn(e: Object)",
          "onItemClick": "fn(e: Object)",
          "onItemContextMenu": "fn(e: Object)",
          "onItemDoubleClick": "fn(e: Object)",
          "onItemEditBegin": "fn(e: ?)",
          "onItemEditBeginGesture": "fn(e: Object)",
          "onItemEditEnd": "fn(e: ?)",
          "onItemEditEndGesture": "fn(e: Object)",
          "onItemEditMoveGesture": "fn(e: Object)",
          "onItemEditResizeGesture": "fn(e: Object)",
          "onRendererCreated": "fn(e: Object)",
          "onRendererDestroyed": "fn(e: Object)",
          "onRendererRecycled": "fn(e: Object)",
          "onRendererReused": "fn(e: Object)",
          "onRenderersLayoutDone": "fn(view: ?)",
          "onRowHeaderClick": "fn(e: Object)"
        }
      },
      "MonthColumnView": {
        "!type": "fn()",
        "prototype": {
          "allDayAttr": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret731",
          "allowResizeLessThan24H": "bool",
          "allowStartEndSwap": "bool",
          "allowSubColumnMove": "bool",
          "attachScope": "Object",
          "attributeMap": "Object",
          "autoScroll": "bool",
          "baseClass": "string",
          "class": "string",
          "columnCount": "number",
          "columnHeaderFormatLength": "string",
          "containerNode": "HTMLElement",
          "createOnGridClick": "bool",
          "cssClassFunc": "Function",
          "datePackage": "Object",
          "daySize": "number",
          "decodeDate": "Object",
          "dir": "string",
          "displayedItemsInvalidated": "bool",
          "domNode": "HTMLElement",
          "doubleTapDelay": "number",
          "editable": "bool",
          "encodeDate": "Object",
          "endTimeAttr": "string",
          "focused": "bool",
          "formatItemTimeFunc": "Function",
          "gridCellDatePattern": "string",
          "horizontalGap": "number",
          "hoveredItem": "Object",
          "id": "string",
          "invalidatingProperties": "Object",
          "invalidRendering": "bool",
          "itemToRenderer": "Object",
          "itemToRendererKindFunc": "Function",
          "lang": "string",
          "layoutPriorityFunction": "Function",
          "liveLayout": "bool",
          "minDurationSteps": "number",
          "minDurationUnit": "string",
          "moveEnabled": "bool",
          "ownerDocument": "Object",
          "percentOverlap": "number",
          "query": "Object",
          "queryOptions": "Object",
          "renderData": "Object",
          "rendererList": "[?]",
          "rendererPool": "[?]",
          "resizeCursor": "string",
          "resizeEnabled": "bool",
          "roundToDay": "bool",
          "scrollable": "bool",
          "scrollBarRTLPosition": "string",
          "scrollMethod": "string",
          "scrollPosition": "number",
          "searchContainerNode": "bool",
          "selectedItem": "Object",
          "selectedItems": "Object",
          "selectionMode": "string",
          "showCellLabel": "bool",
          "showHiddenItems": "bool",
          "snapSteps": "number",
          "snapUnit": "string",
          "srcNodeRef": "HTMLElement",
          "startDate": "Date",
          "startTimeAttr": "string",
          "stayInView": "bool",
          "store": "Object",
          "style": "string",
          "styleGridCellFunc": "Function",
          "subColumnAttr": "string",
          "summaryAttr": "string",
          "templatePath": "string",
          "templateString": "string",
          "title": "string",
          "tooltip": "string",
          "verticalRenderer": "Object",
          "viewKind": "string",
          "addInvalidatingProperties": "fn(properties: [String])",
          "afterActivate": "fn()",
          "afterDeactivate": "fn()",
          "applyRendererZIndex": "fn(item: Object, renderer: Object, hovered: bool, selected: bool, edited: bool, focused: bool)",
          "beforeActivate": "fn()",
          "beforeDeactivate": "fn()",
          "computeOverlapping": "fn(layoutItems: [Object], func: ?) -> ?",
          "computeProjectionOnDate": "fn(renderData: Object, refDate: Date, date: [Date], max: number) -> ?",
          "computeRangeOverlap": "fn(renderData: Object, start1: Date, end1: Date, start2: Date, end2: Date, includeLimits: bool) -> ?",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "createItemFunc": "fn(view: dojox.calendar.ViewBase, d: Date, e: MouseEvent)",
          "defaultStyleGridCell": "fn(node: HTMLElement, date: Date, col: number, row: number, renderData: Object)",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: ?)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "dispatchChange": "fn(oldSelectedItem: Object, newSelectedItem: Object, renderer: Object, triggerEvent: Event)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "ensureMinimalDuration": "fn(renderData: Object, item: Object, unit: String, steps: number, editKind: String)",
          "ensureVisibility": "fn(start: Date, end: Date, margin: number, visibilityTarget: String, duration: number)",
          "floorDate": "fn(date: Date, unit: String, steps: number, reuse: bool) -> ?",
          "floorToDay": "fn(date: Date, reuse: bool) -> ?",
          "floorToMonth": "fn(date: Date, reuse: bool) -> ?",
          "getChildren": "fn() -> [?]",
          "getCSSPrefix": "fn() -> String",
          "getIdentity": "fn(item: ?) -> ?",
          "getItemStoreState": "fn(item: ?) -> ?",
          "getParent": "fn() -> ?",
          "getRenderers": "fn(item: Object) -> ?",
          "getSubColumn": "fn(e: Event, x: number, y: number, touchIndex: number) -> ?",
          "getSubColumnIndex": "fn(value: String) -> number",
          "getTime": "fn(e: Event, x: number, y: number, touchIndex: number) -> ?",
          "getWeekNumberLabel": "fn(date: Date) -> ?",
          "invalidateLayout": "fn()",
          "invalidateRendering": "fn()",
          "isAscendantHasClass": "fn(node: HTMLElement, ancestor: HTMLElement, className: String) -> ?",
          "isFocusable": "fn() -> ?",
          "isItemBeingEdited": "fn(item: Object) -> ?",
          "isItemEditable": "fn(item: Object, rendererKind: String) -> ?",
          "isItemFocused": "fn(item: Object) -> ?",
          "isItemHovered": "fn(item: Object) -> ?",
          "isItemMoveEnabled": "fn(item: Object, rendererKind: String) -> ?",
          "isItemResizeEnabled": "fn(item: Object, rendererKind: String) -> ?",
          "isItemSelected": "fn(item: ?) -> ?",
          "isLeftToRight": "fn() -> ?",
          "isOverlapping": "fn(renderData: Object, start1: Date, end1: Date, start2: Date, end2: Date, includeLimits: bool) -> ?",
          "isSameDay": "fn(date1: Date, date2: Date) -> ?",
          "isStartOfDay": "fn(d: Date) -> ?",
          "isToday": "fn(date: Date) -> ?",
          "isWeekEnd": "fn(date: Date) -> ?",
          "itemToRenderItem": "fn(item: Object, store: dojo.store.api.Store) -> ?",
          "newDate": "fn(obj: Object) -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "postscript": "fn()",
          "refreshRendering": "fn()",
          "renderItemToItem": "fn(renderItem: Object, store: dojo.store.api.Store) -> ?",
          "resize": "fn()",
          "scrollView": "fn(dir: number)",
          "selectFromEvent": "fn(e: ?, item: ?, renderer: ?, dispatch: ?)",
          "setItemSelected": "fn(item: ?, value: ?)",
          "startup": "fn()",
          "styleColumnHeaderCell": "fn(node: HTMLElement, date: Date, renderData: Object)",
          "styleGridCell": "fn(node: HTMLElement, date: Date, col: number, row: number, renderData: Object)",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "updateRenderers": "fn(obj: Object, stateOnly: bool)",
          "validateRendering": "fn()",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn()",
          "onColumnHeaderClick": "fn(e: Object)",
          "onFocus": "fn()",
          "onGridClick": "fn(e: Object)",
          "onGridDoubleClick": "fn(e: Object)",
          "onItemClick": "fn(e: Object)",
          "onItemContextMenu": "fn(e: Object)",
          "onItemDoubleClick": "fn(e: Object)",
          "onItemEditBegin": "fn(e: ?)",
          "onItemEditBeginGesture": "fn(e: Object)",
          "onItemEditEnd": "fn(e: ?)",
          "onItemEditEndGesture": "fn(e: Object)",
          "onItemEditMoveGesture": "fn(e: Object)",
          "onItemEditResizeGesture": "fn(e: Object)",
          "onRendererCreated": "fn(e: Object)",
          "onRendererDestroyed": "fn(e: Object)",
          "onRendererRecycled": "fn(e: Object)",
          "onRendererReused": "fn(e: Object)",
          "onRenderersLayoutDone": "fn(view: ?)"
        }
      },
      "SimpleColumnView": {
        "!type": "fn()",
        "prototype": {
          "allDayAttr": "string",
          "set": "fn(property: string, value: string)",
          "get": "fn(property: string) -> string",
          "watch": "fn(property: string, callback: ?) -> ret809",
          "allowResizeLessThan24H": "bool",
          "allowStartEndSwap": "bool",
          "allowSubColumnMove": "bool",
          "attachScope": "Object",
          "attributeMap": "Object",
          "autoScroll": "bool",
          "baseClass": "string",
          "class": "string",
          "columnCount": "number",
          "columnHeaderDatePattern": "string",
          "containerNode": "HTMLElement",
          "createOnGridClick": "bool",
          "cssClassFunc": "Function",
          "datePackage": "Object",
          "decodeDate": "Object",
          "dir": "string",
          "displayedItemsInvalidated": "bool",
          "domNode": "HTMLElement",
          "doubleTapDelay": "number",
          "editable": "bool",
          "encodeDate": "Object",
          "endTimeAttr": "string",
          "focused": "bool",
          "formatItemTimeFunc": "Function",
          "horizontalGap": "number",
          "hourSize": "number",
          "hoveredItem": "Object",
          "id": "string",
          "invalidatingProperties": "Object",
          "invalidRendering": "bool",
          "itemToRenderer": "Object",
          "itemToRendererKindFunc": "Function",
          "lang": "string",
          "layoutPriorityFunction": "Function",
          "liveLayout": "bool",
          "maxHours": "number",
          "minColumnWidth": "number",
          "minDurationSteps": "number",
          "minDurationUnit": "string",
          "minHours": "number",
          "moveEnabled": "bool",
          "ownerDocument": "Object",
          "percentOverlap": "number",
          "query": "Object",
          "queryOptions": "Object",
          "renderData": "Object",
          "rendererList": "[?]",
          "rendererPool": "[?]",
          "resizeCursor": "string",
          "resizeEnabled": "bool",
          "rowHeaderFirstLabelOffset": "number",
          "rowHeaderGridSlotDuration": "number",
          "rowHeaderLabelOffset": "number",
          "rowHeaderLabelSlotDuration": "number",
          "rowHeaderTimePattern": "string",
          "scrollable": "bool",
          "scrollBarRTLPosition": "string",
          "scrollMethod": "string",
          "searchContainerNode": "bool",
          "selectedItem": "Object",
          "selectedItems": "Object",
          "selectionMode": "string",
          "showTimeIndicator": "bool",
          "snapSteps": "number",
          "snapUnit": "string",
          "srcNodeRef": "HTMLElement",
          "startDate": "Date",
          "startTimeAttr": "string",
          "startTimeOfDay": "Object",
          "stayInView": "bool",
          "store": "Object",
          "style": "string",
          "styleGridCellFunc": "Function",
          "subColumnAttr": "string",
          "subColumns": "Object",
          "summaryAttr": "string",
          "templatePath": "string",
          "templateString": "string",
          "timeIndicatorRefreshInterval": "number",
          "timeSlotDuration": "number",
          "title": "string",
          "tooltip": "string",
          "verticalRenderer": "Object",
          "viewKind": "string",
          "addInvalidatingProperties": "fn(properties: [String])",
          "afterActivate": "fn()",
          "afterDeactivate": "fn()",
          "applyRendererZIndex": "fn(item: Object, renderer: Object, hovered: bool, selected: bool, edited: bool, focused: bool)",
          "beforeActivate": "fn()",
          "beforeDeactivate": "fn()",
          "buildRendering": "fn()",
          "computeOverlapping": "fn(layoutItems: [Object], func: ?) -> ?",
          "computeProjectionOnDate": "fn(renderData: Object, refDate: Date, date: [Date], max: number) -> ?",
          "computeRangeOverlap": "fn(renderData: Object, start1: Date, end1: Date, start2: Date, end2: Date, includeLimits: bool) -> ?",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "createItemFunc": "fn(view: dojox.calendar.ViewBase, d: Date, e: MouseEvent)",
          "defaultStyleGridCell": "fn(node: HTMLElement, date: Date, hours: number, minutes: number, renderData: Object) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn(preserveDom?: ?)",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "dispatchChange": "fn(oldSelectedItem: Object, newSelectedItem: Object, renderer: Object, triggerEvent: Event)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "ensureMinimalDuration": "fn(renderData: Object, item: Object, unit: String, steps: number, editKind: String)",
          "ensureVisibility": "fn(start: Date, end: Date, margin: number, visibilityTarget: String, duration: number)",
          "floorDate": "fn(date: Date, unit: String, steps: number, reuse: bool) -> ?",
          "floorToDay": "fn(date: Date, reuse: bool) -> ?",
          "floorToMonth": "fn(date: Date, reuse: bool) -> ?",
          "getChildren": "fn() -> [?]",
          "getCSSPrefix": "fn() -> String",
          "getIdentity": "fn(item: ?) -> ?",
          "getItemStoreState": "fn(item: ?) -> ?",
          "getParent": "fn() -> ?",
          "getRenderers": "fn(item: Object) -> ?",
          "getSubColumn": "fn(e: Event, x: number, y: number, touchIndex: number) -> ?",
          "getSubColumnIndex": "fn(value: String) -> number",
          "getTime": "fn(e: Event, x: number, y: number, touchIndex: number) -> ?",
          "getTimeOfDay": "fn(pos: number, rd: Object) -> Object",
          "getWeekNumberLabel": "fn(date: Date) -> ?",
          "invalidateLayout": "fn()",
          "invalidateRendering": "fn()",
          "isAscendantHasClass": "fn(node: HTMLElement, ancestor: HTMLElement, className: String) -> ?",
          "isFocusable": "fn() -> ?",
          "isItemBeingEdited": "fn(item: Object) -> ?",
          "isItemEditable": "fn(item: Object, rendererKind: String) -> ?",
          "isItemFocused": "fn(item: Object) -> ?",
          "isItemHovered": "fn(item: Object) -> ?",
          "isItemMoveEnabled": "fn(item: Object, rendererKind: String) -> ?",
          "isItemResizeEnabled": "fn(item: Object, rendererKind: String) -> ?",
          "isItemSelected": "fn(item: ?) -> ?",
          "isLeftToRight": "fn() -> ?",
          "isOverlapping": "fn(renderData: Object, start1: Date, end1: Date, start2: Date, end2: Date, includeLimits: bool) -> ?",
          "isSameDay": "fn(date1: Date, date2: Date) -> ?",
          "isStartOfDay": "fn(d: Date) -> ?",
          "isToday": "fn(date: Date) -> ?",
          "isWeekEnd": "fn(date: Date) -> ?",
          "itemToRenderItem": "fn(item: Object, store: dojo.store.api.Store) -> ?",
          "newDate": "fn(obj: Object) -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "postscript": "fn()",
          "refreshRendering": "fn()",
          "renderItemToItem": "fn(renderItem: Object, store: dojo.store.api.Store) -> ?",
          "resize": "fn(e?: ?)",
          "scrollView": "fn(dir: number)",
          "scrollViewHorizontal": "fn(dir: number)",
          "selectFromEvent": "fn(e: ?, item: ?, renderer: ?, dispatch: ?)",
          "setItemSelected": "fn(item: ?, value: ?)",
          "startup": "fn()",
          "styleColumnHeaderCell": "fn(node: HTMLElement, date: Date, renderData: Object)",
          "styleGridCell": "fn(node: HTMLElement, date: Date, hours: ?, minutes: ?, renderData: Object)",
          "styleRowHeaderCell": "fn(node: HTMLElement, h: number, m: ?, renderData: Object)",
          "styleSubColumnHeaderCell": "fn(node: HTMLElement, date: ?, renderData: Object)",
          "subColumnLabelFunc": "fn(value: ?) -> ?",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "updateRenderers": "fn(obj: Object, stateOnly: bool)",
          "validateRendering": "fn()",
          "getCachedTemplate": "fn() -> ?",
          "onBlur": "fn()",
          "onChange": "fn()",
          "onColumnHeaderClick": "fn(e: Object)",
          "onFocus": "fn()",
          "onGridClick": "fn(e: Object)",
          "onGridDoubleClick": "fn(e: Object)",
          "onItemClick": "fn(e: Object)",
          "onItemContextMenu": "fn(e: Object)",
          "onItemDoubleClick": "fn(e: Object)",
          "onItemEditBegin": "fn(e: ?)",
          "onItemEditBeginGesture": "fn(e: Object)",
          "onItemEditEnd": "fn(e: ?)",
          "onItemEditEndGesture": "fn(e: Object)",
          "onItemEditMoveGesture": "fn(e: Object)",
          "onItemEditResizeGesture": "fn(e: Object)",
          "onRendererCreated": "fn(e: Object)",
          "onRendererDestroyed": "fn(e: Object)",
          "onRendererRecycled": "fn(e: Object)",
          "onRendererReused": "fn(e: Object)",
          "onRenderersLayoutDone": "fn(view: ?)"
        }
      },
      "time": {
        "floor": "fn(date: Date, unit: String, steps: number, reuse: bool, dateClassObj: Object) -> Date",
        "floorToDay": "fn(d: ?, reuse: bool, dateClassObj: Object) -> Date",
        "floorToMonth": "fn(d: ?, reuse: bool, dateClassObj: Object) -> Date",
        "floorToWeek": "fn(d: Date, dateClassObj: Object, dateModule: Object, firstDayOfWeek: number, locale: String) -> ?",
        "isStartOfDay": "fn(d: Date, dateClassObj: Object, dateModule: Object) -> bool",
        "isToday": "fn(d: Date, dateClassObj: Object) -> bool",
        "newDate": "fn(obj: Object, dateClassObj: Object) -> ?"
      }
    }
  },
  "dojox/calendar/time": "exp",
  "dojox/calendar/_RendererMixin": "exp",
  "dojox/calendar/_ScrollBarBase": "exp",
  "dojox/calendar/ExpandRenderer": "exp",
  "dojox/calendar/HorizontalRenderer": "exp",
  "dojox/calendar/Calendar": "exp",
  "dojox/calendar/Keyboard": "exp",
  "dojox/calendar/CalendarBase": "exp",
  "dojox/calendar/LabelRenderer": "exp",
  "dojox/calendar/MobileHorizontalRenderer": "exp",
  "dojox/calendar/MobileVerticalRenderer": "exp",
  "dojox/calendar/Mouse": "exp",
  "dojox/calendar/MobileCalendar": "exp",
  "dojox/calendar/StoreMixin": "exp",
  "dojox/calendar/Touch": "exp",
  "dojox/calendar/MatrixView": "exp",
  "dojox/calendar/VerticalRenderer": "exp",
  "dojox/calendar/MonthColumnView": "exp",
  "dojox/calendar/SimpleColumnView": "exp",
  "dojox/calendar/ViewBase": "exp",
  "dojox/calendar/ColumnView": "exp",
  "dojox/calendar/ColumnViewSecondarySheet": "exp",
  "!name": "dojox.calendar",
  "!define": {
    "ret": {
      "unwatch": "fn()"
    },
    "ret1": {
      "unwatch": "fn()"
    },
    "ret2": {
      "unwatch": "fn()"
    },
    "ret3": {
      "unwatch": "fn()"
    },
    "ret4": {
      "unwatch": "fn()"
    },
    "ret5": {
      "unwatch": "fn()"
    },
    "ret6": {
      "unwatch": "fn()"
    },
    "ret7": {
      "unwatch": "fn()"
    },
    "ret8": {
      "unwatch": "fn()"
    },
    "ret9": {
      "unwatch": "fn()"
    },
    "ret10": {
      "unwatch": "fn()"
    },
    "ret11": {
      "unwatch": "fn()"
    },
    "ret12": {
      "unwatch": "fn()"
    },
    "ret13": {
      "unwatch": "fn()"
    },
    "ret14": {
      "unwatch": "fn()"
    },
    "ret15": {
      "unwatch": "fn()"
    },
    "ret16": {
      "unwatch": "fn()"
    },
    "ret17": {
      "unwatch": "fn()"
    },
    "ret18": {
      "unwatch": "fn()"
    },
    "ret19": {
      "unwatch": "fn()"
    },
    "ret20": {
      "unwatch": "fn()"
    },
    "ret21": {
      "unwatch": "fn()"
    },
    "ret22": {
      "unwatch": "fn()"
    },
    "ret23": {
      "unwatch": "fn()"
    },
    "ret24": {
      "unwatch": "fn()"
    },
    "ret25": {
      "unwatch": "fn()"
    },
    "ret26": {
      "unwatch": "fn()"
    },
    "ret27": {
      "unwatch": "fn()"
    },
    "ret28": {
      "unwatch": "fn()"
    },
    "ret29": {
      "unwatch": "fn()"
    },
    "ret30": {
      "unwatch": "fn()"
    },
    "ret31": {
      "unwatch": "fn()"
    },
    "ret32": {
      "unwatch": "fn()"
    },
    "ret33": {
      "unwatch": "fn()"
    },
    "ret34": {
      "unwatch": "fn()"
    },
    "ret35": {
      "unwatch": "fn()"
    },
    "ret36": {
      "unwatch": "fn()"
    },
    "ret37": {
      "unwatch": "fn()"
    },
    "ret38": {
      "unwatch": "fn()"
    },
    "ret39": {
      "unwatch": "fn()"
    },
    "ret40": {
      "unwatch": "fn()"
    },
    "ret41": {
      "unwatch": "fn()"
    },
    "ret42": {
      "unwatch": "fn()"
    },
    "ret43": {
      "unwatch": "fn()"
    },
    "ret44": {
      "unwatch": "fn()"
    },
    "ret45": {
      "unwatch": "fn()"
    },
    "ret46": {
      "unwatch": "fn()"
    },
    "ret47": {
      "unwatch": "fn()"
    },
    "ret48": {
      "unwatch": "fn()"
    },
    "ret49": {
      "unwatch": "fn()"
    },
    "ret50": {
      "unwatch": "fn()"
    },
    "ret51": {
      "unwatch": "fn()"
    },
    "ret52": {
      "unwatch": "fn()"
    },
    "ret53": {
      "unwatch": "fn()"
    },
    "ret54": {
      "unwatch": "fn()"
    },
    "ret55": {
      "unwatch": "fn()"
    },
    "ret56": {
      "unwatch": "fn()"
    },
    "ret57": {
      "unwatch": "fn()"
    },
    "ret58": {
      "unwatch": "fn()"
    },
    "ret59": {
      "unwatch": "fn()"
    },
    "ret60": {
      "unwatch": "fn()"
    },
    "ret61": {
      "unwatch": "fn()"
    },
    "ret62": {
      "unwatch": "fn()"
    },
    "ret63": {
      "unwatch": "fn()"
    },
    "ret64": {
      "unwatch": "fn()"
    },
    "ret65": {
      "unwatch": "fn()"
    },
    "ret66": {
      "unwatch": "fn()"
    },
    "ret67": {
      "unwatch": "fn()"
    },
    "ret68": {
      "unwatch": "fn()"
    },
    "ret69": {
      "unwatch": "fn()"
    },
    "ret70": {
      "unwatch": "fn()"
    },
    "ret71": {
      "unwatch": "fn()"
    },
    "ret72": {
      "unwatch": "fn()"
    },
    "ret73": {
      "unwatch": "fn()"
    },
    "ret74": {
      "unwatch": "fn()"
    },
    "ret75": {
      "unwatch": "fn()"
    },
    "ret76": {
      "unwatch": "fn()"
    },
    "ret77": {
      "unwatch": "fn()"
    },
    "ret78": {
      "unwatch": "fn()"
    },
    "ret79": {
      "unwatch": "fn()"
    },
    "ret80": {
      "unwatch": "fn()"
    },
    "ret81": {
      "unwatch": "fn()"
    },
    "ret82": {
      "unwatch": "fn()"
    },
    "ret83": {
      "unwatch": "fn()"
    },
    "ret84": {
      "unwatch": "fn()"
    },
    "ret85": {
      "unwatch": "fn()"
    },
    "ret86": {
      "unwatch": "fn()"
    },
    "ret87": {
      "unwatch": "fn()"
    },
    "ret88": {
      "unwatch": "fn()"
    },
    "ret89": {
      "unwatch": "fn()"
    },
    "ret90": {
      "unwatch": "fn()"
    },
    "ret91": {
      "unwatch": "fn()"
    },
    "ret92": {
      "unwatch": "fn()"
    },
    "ret93": {
      "unwatch": "fn()"
    },
    "ret94": {
      "unwatch": "fn()"
    },
    "ret95": {
      "unwatch": "fn()"
    },
    "ret96": {
      "unwatch": "fn()"
    },
    "ret97": {
      "unwatch": "fn()"
    },
    "ret98": {
      "unwatch": "fn()"
    },
    "ret99": {
      "unwatch": "fn()"
    },
    "ret100": {
      "unwatch": "fn()"
    },
    "ret101": {
      "unwatch": "fn()"
    },
    "ret102": {
      "unwatch": "fn()"
    },
    "ret103": {
      "unwatch": "fn()"
    },
    "ret104": {
      "unwatch": "fn()"
    },
    "ret105": {
      "unwatch": "fn()"
    },
    "ret106": {
      "unwatch": "fn()"
    },
    "ret107": {
      "unwatch": "fn()"
    },
    "ret108": {
      "unwatch": "fn()"
    },
    "ret109": {
      "unwatch": "fn()"
    },
    "ret110": {
      "unwatch": "fn()"
    },
    "ret111": {
      "unwatch": "fn()"
    },
    "ret112": {
      "unwatch": "fn()"
    },
    "ret113": {
      "unwatch": "fn()"
    },
    "ret114": {
      "unwatch": "fn()"
    },
    "ret115": {
      "unwatch": "fn()"
    },
    "ret116": {
      "unwatch": "fn()"
    },
    "ret117": {
      "unwatch": "fn()"
    },
    "ret118": {
      "unwatch": "fn()"
    },
    "ret119": {
      "unwatch": "fn()"
    },
    "ret120": {
      "unwatch": "fn()"
    },
    "ret121": {
      "unwatch": "fn()"
    },
    "ret122": {
      "unwatch": "fn()"
    },
    "ret123": {
      "unwatch": "fn()"
    },
    "ret124": {
      "unwatch": "fn()"
    },
    "ret125": {
      "unwatch": "fn()"
    },
    "ret126": {
      "unwatch": "fn()"
    },
    "ret127": {
      "unwatch": "fn()"
    },
    "ret128": {
      "unwatch": "fn()"
    },
    "ret129": {
      "unwatch": "fn()"
    },
    "ret130": {
      "unwatch": "fn()"
    },
    "ret131": {
      "unwatch": "fn()"
    },
    "ret132": {
      "unwatch": "fn()"
    },
    "ret133": {
      "unwatch": "fn()"
    },
    "ret134": {
      "unwatch": "fn()"
    },
    "ret135": {
      "unwatch": "fn()"
    },
    "ret136": {
      "unwatch": "fn()"
    },
    "ret137": {
      "unwatch": "fn()"
    },
    "ret138": {
      "unwatch": "fn()"
    },
    "ret139": {
      "unwatch": "fn()"
    },
    "ret140": {
      "unwatch": "fn()"
    },
    "ret141": {
      "unwatch": "fn()"
    },
    "ret142": {
      "unwatch": "fn()"
    },
    "ret143": {
      "unwatch": "fn()"
    },
    "ret144": {
      "unwatch": "fn()"
    },
    "ret145": {
      "unwatch": "fn()"
    },
    "ret146": {
      "unwatch": "fn()"
    },
    "ret147": {
      "unwatch": "fn()"
    },
    "ret148": {
      "unwatch": "fn()"
    },
    "ret149": {
      "unwatch": "fn()"
    },
    "ret150": {
      "unwatch": "fn()"
    },
    "ret151": {
      "unwatch": "fn()"
    },
    "ret152": {
      "unwatch": "fn()"
    },
    "ret153": {
      "unwatch": "fn()"
    },
    "ret154": {
      "unwatch": "fn()"
    },
    "ret155": {
      "unwatch": "fn()"
    },
    "ret156": {
      "unwatch": "fn()"
    },
    "ret157": {
      "unwatch": "fn()"
    },
    "ret158": {
      "unwatch": "fn()"
    },
    "ret159": {
      "unwatch": "fn()"
    },
    "ret160": {
      "unwatch": "fn()"
    },
    "ret161": {
      "unwatch": "fn()"
    },
    "ret162": {
      "unwatch": "fn()"
    },
    "ret163": {
      "unwatch": "fn()"
    },
    "ret164": {
      "unwatch": "fn()"
    },
    "ret165": {
      "unwatch": "fn()"
    },
    "ret166": {
      "unwatch": "fn()"
    },
    "ret167": {
      "unwatch": "fn()"
    },
    "ret168": {
      "unwatch": "fn()"
    },
    "ret169": {
      "unwatch": "fn()"
    },
    "ret170": {
      "unwatch": "fn()"
    },
    "ret171": {
      "unwatch": "fn()"
    },
    "ret172": {
      "unwatch": "fn()"
    },
    "ret173": {
      "unwatch": "fn()"
    },
    "ret174": {
      "unwatch": "fn()"
    },
    "ret175": {
      "unwatch": "fn()"
    },
    "ret176": {
      "unwatch": "fn()"
    },
    "ret177": {
      "unwatch": "fn()"
    },
    "ret178": {
      "unwatch": "fn()"
    },
    "ret179": {
      "unwatch": "fn()"
    },
    "ret180": {
      "unwatch": "fn()"
    },
    "ret181": {
      "unwatch": "fn()"
    },
    "ret182": {
      "unwatch": "fn()"
    },
    "ret183": {
      "unwatch": "fn()"
    },
    "ret184": {
      "unwatch": "fn()"
    },
    "ret185": {
      "unwatch": "fn()"
    },
    "ret186": {
      "unwatch": "fn()"
    },
    "ret187": {
      "unwatch": "fn()"
    },
    "ret188": {
      "unwatch": "fn()"
    },
    "ret189": {
      "unwatch": "fn()"
    },
    "ret190": {
      "unwatch": "fn()"
    },
    "ret191": {
      "unwatch": "fn()"
    },
    "ret192": {
      "unwatch": "fn()"
    },
    "ret193": {
      "unwatch": "fn()"
    },
    "ret194": {
      "unwatch": "fn()"
    },
    "ret195": {
      "unwatch": "fn()"
    },
    "ret196": {
      "unwatch": "fn()"
    },
    "ret197": {
      "unwatch": "fn()"
    },
    "ret198": {
      "unwatch": "fn()"
    },
    "ret199": {
      "unwatch": "fn()"
    },
    "ret200": {
      "unwatch": "fn()"
    },
    "ret201": {
      "unwatch": "fn()"
    },
    "ret202": {
      "unwatch": "fn()"
    },
    "ret203": {
      "unwatch": "fn()"
    },
    "ret204": {
      "unwatch": "fn()"
    },
    "ret205": {
      "unwatch": "fn()"
    },
    "ret206": {
      "unwatch": "fn()"
    },
    "ret207": {
      "unwatch": "fn()"
    },
    "ret208": {
      "unwatch": "fn()"
    },
    "ret209": {
      "unwatch": "fn()"
    },
    "ret210": {
      "unwatch": "fn()"
    },
    "ret211": {
      "unwatch": "fn()"
    },
    "ret212": {
      "unwatch": "fn()"
    },
    "ret213": {
      "unwatch": "fn()"
    },
    "ret214": {
      "unwatch": "fn()"
    },
    "ret215": {
      "unwatch": "fn()"
    },
    "ret216": {
      "unwatch": "fn()"
    },
    "ret217": {
      "unwatch": "fn()"
    },
    "ret218": {
      "unwatch": "fn()"
    },
    "ret219": {
      "unwatch": "fn()"
    },
    "ret220": {
      "unwatch": "fn()"
    },
    "ret221": {
      "unwatch": "fn()"
    },
    "ret222": {
      "unwatch": "fn()"
    },
    "ret223": {
      "unwatch": "fn()"
    },
    "ret224": {
      "unwatch": "fn()"
    },
    "ret225": {
      "unwatch": "fn()"
    },
    "ret226": {
      "unwatch": "fn()"
    },
    "ret227": {
      "unwatch": "fn()"
    },
    "ret228": {
      "unwatch": "fn()"
    },
    "ret229": {
      "unwatch": "fn()"
    },
    "ret230": {
      "unwatch": "fn()"
    },
    "ret231": {
      "unwatch": "fn()"
    },
    "ret232": {
      "unwatch": "fn()"
    },
    "ret233": {
      "unwatch": "fn()"
    },
    "ret234": {
      "unwatch": "fn()"
    },
    "ret235": {
      "unwatch": "fn()"
    },
    "ret236": {
      "unwatch": "fn()"
    },
    "ret237": {
      "unwatch": "fn()"
    },
    "ret238": {
      "unwatch": "fn()"
    },
    "ret239": {
      "unwatch": "fn()"
    },
    "ret240": {
      "unwatch": "fn()"
    },
    "ret241": {
      "unwatch": "fn()"
    },
    "ret242": {
      "unwatch": "fn()"
    },
    "ret243": {
      "unwatch": "fn()"
    },
    "ret244": {
      "unwatch": "fn()"
    },
    "ret245": {
      "unwatch": "fn()"
    },
    "ret246": {
      "unwatch": "fn()"
    },
    "ret247": {
      "unwatch": "fn()"
    },
    "ret248": {
      "unwatch": "fn()"
    },
    "ret249": {
      "unwatch": "fn()"
    },
    "ret250": {
      "unwatch": "fn()"
    },
    "ret251": {
      "unwatch": "fn()"
    },
    "ret252": {
      "unwatch": "fn()"
    },
    "ret253": {
      "unwatch": "fn()"
    },
    "ret254": {
      "unwatch": "fn()"
    },
    "ret255": {
      "unwatch": "fn()"
    },
    "ret256": {
      "unwatch": "fn()"
    },
    "ret257": {
      "unwatch": "fn()"
    },
    "ret258": {
      "unwatch": "fn()"
    },
    "ret259": {
      "unwatch": "fn()"
    },
    "ret260": {
      "unwatch": "fn()"
    },
    "ret261": {
      "unwatch": "fn()"
    },
    "ret262": {
      "unwatch": "fn()"
    },
    "ret263": {
      "unwatch": "fn()"
    },
    "ret264": {
      "unwatch": "fn()"
    },
    "ret265": {
      "unwatch": "fn()"
    },
    "ret266": {
      "unwatch": "fn()"
    },
    "ret267": {
      "unwatch": "fn()"
    },
    "ret268": {
      "unwatch": "fn()"
    },
    "ret269": {
      "unwatch": "fn()"
    },
    "ret270": {
      "unwatch": "fn()"
    },
    "ret271": {
      "unwatch": "fn()"
    },
    "ret272": {
      "unwatch": "fn()"
    },
    "ret273": {
      "unwatch": "fn()"
    },
    "ret274": {
      "unwatch": "fn()"
    },
    "ret275": {
      "unwatch": "fn()"
    },
    "ret276": {
      "unwatch": "fn()"
    },
    "ret277": {
      "unwatch": "fn()"
    },
    "ret278": {
      "unwatch": "fn()"
    },
    "ret279": {
      "unwatch": "fn()"
    },
    "ret280": {
      "unwatch": "fn()"
    },
    "ret281": {
      "unwatch": "fn()"
    },
    "ret282": {
      "unwatch": "fn()"
    },
    "ret283": {
      "unwatch": "fn()"
    },
    "ret284": {
      "unwatch": "fn()"
    },
    "ret285": {
      "unwatch": "fn()"
    },
    "ret286": {
      "unwatch": "fn()"
    },
    "ret287": {
      "unwatch": "fn()"
    },
    "ret288": {
      "unwatch": "fn()"
    },
    "ret289": {
      "unwatch": "fn()"
    },
    "ret290": {
      "unwatch": "fn()"
    },
    "ret291": {
      "unwatch": "fn()"
    },
    "ret292": {
      "unwatch": "fn()"
    },
    "ret293": {
      "unwatch": "fn()"
    },
    "ret294": {
      "unwatch": "fn()"
    },
    "ret295": {
      "unwatch": "fn()"
    },
    "ret296": {
      "unwatch": "fn()"
    },
    "ret297": {
      "unwatch": "fn()"
    },
    "ret298": {
      "unwatch": "fn()"
    },
    "ret299": {
      "unwatch": "fn()"
    },
    "ret300": {
      "unwatch": "fn()"
    },
    "ret301": {
      "unwatch": "fn()"
    },
    "ret302": {
      "unwatch": "fn()"
    },
    "ret303": {
      "unwatch": "fn()"
    },
    "ret304": {
      "unwatch": "fn()"
    },
    "ret305": {
      "unwatch": "fn()"
    },
    "ret306": {
      "unwatch": "fn()"
    },
    "ret307": {
      "unwatch": "fn()"
    },
    "ret308": {
      "unwatch": "fn()"
    },
    "ret309": {
      "unwatch": "fn()"
    },
    "ret310": {
      "unwatch": "fn()"
    },
    "ret311": {
      "unwatch": "fn()"
    },
    "ret312": {
      "unwatch": "fn()"
    },
    "ret313": {
      "unwatch": "fn()"
    },
    "ret314": {
      "unwatch": "fn()"
    },
    "ret315": {
      "unwatch": "fn()"
    },
    "ret316": {
      "unwatch": "fn()"
    },
    "ret317": {
      "unwatch": "fn()"
    },
    "ret318": {
      "unwatch": "fn()"
    },
    "ret319": {
      "unwatch": "fn()"
    },
    "ret320": {
      "unwatch": "fn()"
    },
    "ret321": {
      "unwatch": "fn()"
    },
    "ret322": {
      "unwatch": "fn()"
    },
    "ret323": {
      "unwatch": "fn()"
    },
    "ret324": {
      "unwatch": "fn()"
    },
    "ret325": {
      "unwatch": "fn()"
    },
    "ret326": {
      "unwatch": "fn()"
    },
    "ret327": {
      "unwatch": "fn()"
    },
    "ret328": {
      "unwatch": "fn()"
    },
    "ret329": {
      "unwatch": "fn()"
    },
    "ret330": {
      "unwatch": "fn()"
    },
    "ret331": {
      "unwatch": "fn()"
    },
    "ret332": {
      "unwatch": "fn()"
    },
    "ret333": {
      "unwatch": "fn()"
    },
    "ret334": {
      "unwatch": "fn()"
    },
    "ret335": {
      "unwatch": "fn()"
    },
    "ret336": {
      "unwatch": "fn()"
    },
    "ret337": {
      "unwatch": "fn()"
    },
    "ret338": {
      "unwatch": "fn()"
    },
    "ret339": {
      "unwatch": "fn()"
    },
    "ret340": {
      "unwatch": "fn()"
    },
    "ret341": {
      "unwatch": "fn()"
    },
    "ret342": {
      "unwatch": "fn()"
    },
    "ret343": {
      "unwatch": "fn()"
    },
    "ret344": {
      "unwatch": "fn()"
    },
    "ret345": {
      "unwatch": "fn()"
    },
    "ret346": {
      "unwatch": "fn()"
    },
    "ret347": {
      "unwatch": "fn()"
    },
    "ret348": {
      "unwatch": "fn()"
    },
    "ret349": {
      "unwatch": "fn()"
    },
    "ret350": {
      "unwatch": "fn()"
    },
    "ret351": {
      "unwatch": "fn()"
    },
    "ret352": {
      "unwatch": "fn()"
    },
    "ret353": {
      "unwatch": "fn()"
    },
    "ret354": {
      "unwatch": "fn()"
    },
    "ret355": {
      "unwatch": "fn()"
    },
    "ret356": {
      "unwatch": "fn()"
    },
    "ret357": {
      "unwatch": "fn()"
    },
    "ret358": {
      "unwatch": "fn()"
    },
    "ret359": {
      "unwatch": "fn()"
    },
    "ret360": {
      "unwatch": "fn()"
    },
    "ret361": {
      "unwatch": "fn()"
    },
    "ret362": {
      "unwatch": "fn()"
    },
    "ret363": {
      "unwatch": "fn()"
    },
    "ret364": {
      "unwatch": "fn()"
    },
    "ret365": {
      "unwatch": "fn()"
    },
    "ret366": {
      "unwatch": "fn()"
    },
    "ret367": {
      "unwatch": "fn()"
    },
    "ret368": {
      "unwatch": "fn()"
    },
    "ret369": {
      "unwatch": "fn()"
    },
    "ret370": {
      "unwatch": "fn()"
    },
    "ret371": {
      "unwatch": "fn()"
    },
    "ret372": {
      "unwatch": "fn()"
    },
    "ret373": {
      "unwatch": "fn()"
    },
    "ret374": {
      "unwatch": "fn()"
    },
    "ret375": {
      "unwatch": "fn()"
    },
    "ret376": {
      "unwatch": "fn()"
    },
    "ret377": {
      "unwatch": "fn()"
    },
    "ret378": {
      "unwatch": "fn()"
    },
    "ret379": {
      "unwatch": "fn()"
    },
    "ret380": {
      "unwatch": "fn()"
    },
    "ret381": {
      "unwatch": "fn()"
    },
    "ret382": {
      "unwatch": "fn()"
    },
    "ret383": {
      "unwatch": "fn()"
    },
    "ret384": {
      "unwatch": "fn()"
    },
    "ret385": {
      "unwatch": "fn()"
    },
    "ret386": {
      "unwatch": "fn()"
    },
    "ret387": {
      "unwatch": "fn()"
    },
    "ret388": {
      "unwatch": "fn()"
    },
    "ret389": {
      "unwatch": "fn()"
    },
    "ret390": {
      "unwatch": "fn()"
    },
    "ret391": {
      "unwatch": "fn()"
    },
    "ret392": {
      "unwatch": "fn()"
    },
    "ret393": {
      "unwatch": "fn()"
    },
    "ret394": {
      "unwatch": "fn()"
    },
    "ret395": {
      "unwatch": "fn()"
    },
    "ret396": {
      "unwatch": "fn()"
    },
    "ret397": {
      "unwatch": "fn()"
    },
    "ret398": {
      "unwatch": "fn()"
    },
    "ret399": {
      "unwatch": "fn()"
    },
    "ret400": {
      "unwatch": "fn()"
    },
    "ret401": {
      "unwatch": "fn()"
    },
    "ret402": {
      "unwatch": "fn()"
    },
    "ret403": {
      "unwatch": "fn()"
    },
    "ret404": {
      "unwatch": "fn()"
    },
    "ret405": {
      "unwatch": "fn()"
    },
    "ret406": {
      "unwatch": "fn()"
    },
    "ret407": {
      "unwatch": "fn()"
    },
    "ret408": {
      "unwatch": "fn()"
    },
    "ret409": {
      "unwatch": "fn()"
    },
    "ret410": {
      "unwatch": "fn()"
    },
    "ret411": {
      "unwatch": "fn()"
    },
    "ret412": {
      "unwatch": "fn()"
    },
    "ret413": {
      "unwatch": "fn()"
    },
    "ret414": {
      "unwatch": "fn()"
    },
    "ret415": {
      "unwatch": "fn()"
    },
    "ret416": {
      "unwatch": "fn()"
    },
    "ret417": {
      "unwatch": "fn()"
    },
    "ret418": {
      "unwatch": "fn()"
    },
    "ret419": {
      "unwatch": "fn()"
    },
    "ret420": {
      "unwatch": "fn()"
    },
    "ret421": {
      "unwatch": "fn()"
    },
    "ret422": {
      "unwatch": "fn()"
    },
    "ret423": {
      "unwatch": "fn()"
    },
    "ret424": {
      "unwatch": "fn()"
    },
    "ret425": {
      "unwatch": "fn()"
    },
    "ret426": {
      "unwatch": "fn()"
    },
    "ret427": {
      "unwatch": "fn()"
    },
    "ret428": {
      "unwatch": "fn()"
    },
    "ret429": {
      "unwatch": "fn()"
    },
    "ret430": {
      "unwatch": "fn()"
    },
    "ret431": {
      "unwatch": "fn()"
    },
    "ret432": {
      "unwatch": "fn()"
    },
    "ret433": {
      "unwatch": "fn()"
    },
    "ret434": {
      "unwatch": "fn()"
    },
    "ret435": {
      "unwatch": "fn()"
    },
    "ret436": {
      "unwatch": "fn()"
    },
    "ret437": {
      "unwatch": "fn()"
    },
    "ret438": {
      "unwatch": "fn()"
    },
    "ret439": {
      "unwatch": "fn()"
    },
    "ret440": {
      "unwatch": "fn()"
    },
    "ret441": {
      "unwatch": "fn()"
    },
    "ret442": {
      "unwatch": "fn()"
    },
    "ret443": {
      "unwatch": "fn()"
    },
    "ret444": {
      "unwatch": "fn()"
    },
    "ret445": {
      "unwatch": "fn()"
    },
    "ret446": {
      "unwatch": "fn()"
    },
    "ret447": {
      "unwatch": "fn()"
    },
    "ret448": {
      "unwatch": "fn()"
    },
    "ret449": {
      "unwatch": "fn()"
    },
    "ret450": {
      "unwatch": "fn()"
    },
    "ret451": {
      "unwatch": "fn()"
    },
    "ret452": {
      "unwatch": "fn()"
    },
    "ret453": {
      "unwatch": "fn()"
    },
    "ret454": {
      "unwatch": "fn()"
    },
    "ret455": {
      "unwatch": "fn()"
    },
    "ret456": {
      "unwatch": "fn()"
    },
    "ret457": {
      "unwatch": "fn()"
    },
    "ret458": {
      "unwatch": "fn()"
    },
    "ret459": {
      "unwatch": "fn()"
    },
    "ret460": {
      "unwatch": "fn()"
    },
    "ret461": {
      "unwatch": "fn()"
    },
    "ret462": {
      "unwatch": "fn()"
    },
    "ret463": {
      "unwatch": "fn()"
    },
    "ret464": {
      "unwatch": "fn()"
    },
    "ret465": {
      "unwatch": "fn()"
    },
    "ret466": {
      "unwatch": "fn()"
    },
    "ret467": {
      "unwatch": "fn()"
    },
    "ret468": {
      "unwatch": "fn()"
    },
    "ret469": {
      "unwatch": "fn()"
    },
    "ret470": {
      "unwatch": "fn()"
    },
    "ret471": {
      "unwatch": "fn()"
    },
    "ret472": {
      "unwatch": "fn()"
    },
    "ret473": {
      "unwatch": "fn()"
    },
    "ret474": {
      "unwatch": "fn()"
    },
    "ret475": {
      "unwatch": "fn()"
    },
    "ret476": {
      "unwatch": "fn()"
    },
    "ret477": {
      "unwatch": "fn()"
    },
    "ret478": {
      "unwatch": "fn()"
    },
    "ret479": {
      "unwatch": "fn()"
    },
    "ret480": {
      "unwatch": "fn()"
    },
    "ret481": {
      "unwatch": "fn()"
    },
    "ret482": {
      "unwatch": "fn()"
    },
    "ret483": {
      "unwatch": "fn()"
    },
    "ret484": {
      "unwatch": "fn()"
    },
    "ret485": {
      "unwatch": "fn()"
    },
    "ret486": {
      "unwatch": "fn()"
    },
    "ret487": {
      "unwatch": "fn()"
    },
    "ret488": {
      "unwatch": "fn()"
    },
    "ret489": {
      "unwatch": "fn()"
    },
    "ret490": {
      "unwatch": "fn()"
    },
    "ret491": {
      "unwatch": "fn()"
    },
    "ret492": {
      "unwatch": "fn()"
    },
    "ret493": {
      "unwatch": "fn()"
    },
    "ret494": {
      "unwatch": "fn()"
    },
    "ret495": {
      "unwatch": "fn()"
    },
    "ret496": {
      "unwatch": "fn()"
    },
    "ret497": {
      "unwatch": "fn()"
    },
    "ret498": {
      "unwatch": "fn()"
    },
    "ret499": {
      "unwatch": "fn()"
    },
    "ret500": {
      "unwatch": "fn()"
    },
    "ret501": {
      "unwatch": "fn()"
    },
    "ret502": {
      "unwatch": "fn()"
    },
    "ret503": {
      "unwatch": "fn()"
    },
    "ret504": {
      "unwatch": "fn()"
    },
    "ret505": {
      "unwatch": "fn()"
    },
    "ret506": {
      "unwatch": "fn()"
    },
    "ret507": {
      "unwatch": "fn()"
    },
    "ret508": {
      "unwatch": "fn()"
    },
    "ret509": {
      "unwatch": "fn()"
    },
    "ret510": {
      "unwatch": "fn()"
    },
    "ret511": {
      "unwatch": "fn()"
    },
    "ret512": {
      "unwatch": "fn()"
    },
    "ret513": {
      "unwatch": "fn()"
    },
    "ret514": {
      "unwatch": "fn()"
    },
    "ret515": {
      "unwatch": "fn()"
    },
    "ret516": {
      "unwatch": "fn()"
    },
    "ret517": {
      "unwatch": "fn()"
    },
    "ret518": {
      "unwatch": "fn()"
    },
    "ret519": {
      "unwatch": "fn()"
    },
    "ret520": {
      "unwatch": "fn()"
    },
    "ret521": {
      "unwatch": "fn()"
    },
    "ret522": {
      "unwatch": "fn()"
    },
    "ret523": {
      "unwatch": "fn()"
    },
    "ret524": {
      "unwatch": "fn()"
    },
    "ret525": {
      "unwatch": "fn()"
    },
    "ret526": {
      "unwatch": "fn()"
    },
    "ret527": {
      "unwatch": "fn()"
    },
    "ret528": {
      "unwatch": "fn()"
    },
    "ret529": {
      "unwatch": "fn()"
    },
    "ret530": {
      "unwatch": "fn()"
    },
    "ret531": {
      "unwatch": "fn()"
    },
    "ret532": {
      "unwatch": "fn()"
    },
    "ret533": {
      "unwatch": "fn()"
    },
    "ret534": {
      "unwatch": "fn()"
    },
    "ret535": {
      "unwatch": "fn()"
    },
    "ret536": {
      "unwatch": "fn()"
    },
    "ret537": {
      "unwatch": "fn()"
    },
    "ret538": {
      "unwatch": "fn()"
    },
    "ret539": {
      "unwatch": "fn()"
    },
    "ret540": {
      "unwatch": "fn()"
    },
    "ret541": {
      "unwatch": "fn()"
    },
    "ret542": {
      "unwatch": "fn()"
    },
    "ret543": {
      "unwatch": "fn()"
    },
    "ret544": {
      "unwatch": "fn()"
    },
    "ret545": {
      "unwatch": "fn()"
    },
    "ret546": {
      "unwatch": "fn()"
    },
    "ret547": {
      "unwatch": "fn()"
    },
    "ret548": {
      "unwatch": "fn()"
    },
    "ret549": {
      "unwatch": "fn()"
    },
    "ret550": {
      "unwatch": "fn()"
    },
    "ret551": {
      "unwatch": "fn()"
    },
    "ret552": {
      "unwatch": "fn()"
    },
    "ret553": {
      "unwatch": "fn()"
    },
    "ret554": {
      "unwatch": "fn()"
    },
    "ret555": {
      "unwatch": "fn()"
    },
    "ret556": {
      "unwatch": "fn()"
    },
    "ret557": {
      "unwatch": "fn()"
    },
    "ret558": {
      "unwatch": "fn()"
    },
    "ret559": {
      "unwatch": "fn()"
    },
    "ret560": {
      "unwatch": "fn()"
    },
    "ret561": {
      "unwatch": "fn()"
    },
    "ret562": {
      "unwatch": "fn()"
    },
    "ret563": {
      "unwatch": "fn()"
    },
    "ret564": {
      "unwatch": "fn()"
    },
    "ret565": {
      "unwatch": "fn()"
    },
    "ret566": {
      "unwatch": "fn()"
    },
    "ret567": {
      "unwatch": "fn()"
    },
    "ret568": {
      "unwatch": "fn()"
    },
    "ret569": {
      "unwatch": "fn()"
    },
    "ret570": {
      "unwatch": "fn()"
    },
    "ret571": {
      "unwatch": "fn()"
    },
    "ret572": {
      "unwatch": "fn()"
    },
    "ret573": {
      "unwatch": "fn()"
    },
    "ret574": {
      "unwatch": "fn()"
    },
    "ret575": {
      "unwatch": "fn()"
    },
    "ret576": {
      "unwatch": "fn()"
    },
    "ret577": {
      "unwatch": "fn()"
    },
    "ret578": {
      "unwatch": "fn()"
    },
    "ret579": {
      "unwatch": "fn()"
    },
    "ret580": {
      "unwatch": "fn()"
    },
    "ret581": {
      "unwatch": "fn()"
    },
    "ret582": {
      "unwatch": "fn()"
    },
    "ret583": {
      "unwatch": "fn()"
    },
    "ret584": {
      "unwatch": "fn()"
    },
    "ret585": {
      "unwatch": "fn()"
    },
    "ret586": {
      "unwatch": "fn()"
    },
    "ret587": {
      "unwatch": "fn()"
    },
    "ret588": {
      "unwatch": "fn()"
    },
    "ret589": {
      "unwatch": "fn()"
    },
    "ret590": {
      "unwatch": "fn()"
    },
    "ret591": {
      "unwatch": "fn()"
    },
    "ret592": {
      "unwatch": "fn()"
    },
    "ret593": {
      "unwatch": "fn()"
    },
    "ret594": {
      "unwatch": "fn()"
    },
    "ret595": {
      "unwatch": "fn()"
    },
    "ret596": {
      "unwatch": "fn()"
    },
    "ret597": {
      "unwatch": "fn()"
    },
    "ret598": {
      "unwatch": "fn()"
    },
    "ret599": {
      "unwatch": "fn()"
    },
    "ret600": {
      "unwatch": "fn()"
    },
    "ret601": {
      "unwatch": "fn()"
    },
    "ret602": {
      "unwatch": "fn()"
    },
    "ret603": {
      "unwatch": "fn()"
    },
    "ret604": {
      "unwatch": "fn()"
    },
    "ret605": {
      "unwatch": "fn()"
    },
    "ret606": {
      "unwatch": "fn()"
    },
    "ret607": {
      "unwatch": "fn()"
    },
    "ret608": {
      "unwatch": "fn()"
    },
    "ret609": {
      "unwatch": "fn()"
    },
    "ret610": {
      "unwatch": "fn()"
    },
    "ret611": {
      "unwatch": "fn()"
    },
    "ret612": {
      "unwatch": "fn()"
    },
    "ret613": {
      "unwatch": "fn()"
    },
    "ret614": {
      "unwatch": "fn()"
    },
    "ret615": {
      "unwatch": "fn()"
    },
    "ret616": {
      "unwatch": "fn()"
    },
    "ret617": {
      "unwatch": "fn()"
    },
    "ret618": {
      "unwatch": "fn()"
    },
    "ret619": {
      "unwatch": "fn()"
    },
    "ret620": {
      "unwatch": "fn()"
    },
    "ret621": {
      "unwatch": "fn()"
    },
    "ret622": {
      "unwatch": "fn()"
    },
    "ret623": {
      "unwatch": "fn()"
    },
    "ret624": {
      "unwatch": "fn()"
    },
    "ret625": {
      "unwatch": "fn()"
    },
    "ret626": {
      "unwatch": "fn()"
    },
    "ret627": {
      "unwatch": "fn()"
    },
    "ret628": {
      "unwatch": "fn()"
    },
    "ret629": {
      "unwatch": "fn()"
    },
    "ret630": {
      "unwatch": "fn()"
    },
    "ret631": {
      "unwatch": "fn()"
    },
    "ret632": {
      "unwatch": "fn()"
    },
    "ret633": {
      "unwatch": "fn()"
    },
    "ret634": {
      "unwatch": "fn()"
    },
    "ret635": {
      "unwatch": "fn()"
    },
    "ret636": {
      "unwatch": "fn()"
    },
    "ret637": {
      "unwatch": "fn()"
    },
    "ret638": {
      "unwatch": "fn()"
    },
    "ret639": {
      "unwatch": "fn()"
    },
    "ret640": {
      "unwatch": "fn()"
    },
    "ret641": {
      "unwatch": "fn()"
    },
    "ret642": {
      "unwatch": "fn()"
    },
    "ret643": {
      "unwatch": "fn()"
    },
    "ret644": {
      "unwatch": "fn()"
    },
    "ret645": {
      "unwatch": "fn()"
    },
    "ret646": {
      "unwatch": "fn()"
    },
    "ret647": {
      "unwatch": "fn()"
    },
    "ret648": {
      "unwatch": "fn()"
    },
    "ret649": {
      "unwatch": "fn()"
    },
    "ret650": {
      "unwatch": "fn()"
    },
    "ret651": {
      "unwatch": "fn()"
    },
    "ret652": {
      "unwatch": "fn()"
    },
    "ret653": {
      "unwatch": "fn()"
    },
    "ret654": {
      "unwatch": "fn()"
    },
    "ret655": {
      "unwatch": "fn()"
    },
    "ret656": {
      "unwatch": "fn()"
    },
    "ret657": {
      "unwatch": "fn()"
    },
    "ret658": {
      "unwatch": "fn()"
    },
    "ret659": {
      "unwatch": "fn()"
    },
    "ret660": {
      "unwatch": "fn()"
    },
    "ret661": {
      "unwatch": "fn()"
    },
    "ret662": {
      "unwatch": "fn()"
    },
    "ret663": {
      "unwatch": "fn()"
    },
    "ret664": {
      "unwatch": "fn()"
    },
    "ret665": {
      "unwatch": "fn()"
    },
    "ret666": {
      "unwatch": "fn()"
    },
    "ret667": {
      "unwatch": "fn()"
    },
    "ret668": {
      "unwatch": "fn()"
    },
    "ret669": {
      "unwatch": "fn()"
    },
    "ret670": {
      "unwatch": "fn()"
    },
    "ret671": {
      "unwatch": "fn()"
    },
    "ret672": {
      "unwatch": "fn()"
    },
    "ret673": {
      "unwatch": "fn()"
    },
    "ret674": {
      "unwatch": "fn()"
    },
    "ret675": {
      "unwatch": "fn()"
    },
    "ret676": {
      "unwatch": "fn()"
    },
    "ret677": {
      "unwatch": "fn()"
    },
    "ret678": {
      "unwatch": "fn()"
    },
    "ret679": {
      "unwatch": "fn()"
    },
    "ret680": {
      "unwatch": "fn()"
    },
    "ret681": {
      "unwatch": "fn()"
    },
    "ret682": {
      "unwatch": "fn()"
    },
    "ret683": {
      "unwatch": "fn()"
    },
    "ret684": {
      "unwatch": "fn()"
    },
    "ret685": {
      "unwatch": "fn()"
    },
    "ret686": {
      "unwatch": "fn()"
    },
    "ret687": {
      "unwatch": "fn()"
    },
    "ret688": {
      "unwatch": "fn()"
    },
    "ret689": {
      "unwatch": "fn()"
    },
    "ret690": {
      "unwatch": "fn()"
    },
    "ret691": {
      "unwatch": "fn()"
    },
    "ret692": {
      "unwatch": "fn()"
    },
    "ret693": {
      "unwatch": "fn()"
    },
    "ret694": {
      "unwatch": "fn()"
    },
    "ret695": {
      "unwatch": "fn()"
    },
    "ret696": {
      "unwatch": "fn()"
    },
    "ret697": {
      "unwatch": "fn()"
    },
    "ret698": {
      "unwatch": "fn()"
    },
    "ret699": {
      "unwatch": "fn()"
    },
    "ret700": {
      "unwatch": "fn()"
    },
    "ret701": {
      "unwatch": "fn()"
    },
    "ret702": {
      "unwatch": "fn()"
    },
    "ret703": {
      "unwatch": "fn()"
    },
    "ret704": {
      "unwatch": "fn()"
    },
    "ret705": {
      "unwatch": "fn()"
    },
    "ret706": {
      "unwatch": "fn()"
    },
    "ret707": {
      "unwatch": "fn()"
    },
    "ret708": {
      "unwatch": "fn()"
    },
    "ret709": {
      "unwatch": "fn()"
    },
    "ret710": {
      "unwatch": "fn()"
    },
    "ret711": {
      "unwatch": "fn()"
    },
    "ret712": {
      "unwatch": "fn()"
    },
    "ret713": {
      "unwatch": "fn()"
    },
    "ret714": {
      "unwatch": "fn()"
    },
    "ret715": {
      "unwatch": "fn()"
    },
    "ret716": {
      "unwatch": "fn()"
    },
    "ret717": {
      "unwatch": "fn()"
    },
    "ret718": {
      "unwatch": "fn()"
    },
    "ret719": {
      "unwatch": "fn()"
    },
    "ret720": {
      "unwatch": "fn()"
    },
    "ret721": {
      "unwatch": "fn()"
    },
    "ret722": {
      "unwatch": "fn()"
    },
    "ret723": {
      "unwatch": "fn()"
    },
    "ret724": {
      "unwatch": "fn()"
    },
    "ret725": {
      "unwatch": "fn()"
    },
    "ret726": {
      "unwatch": "fn()"
    },
    "ret727": {
      "unwatch": "fn()"
    },
    "ret728": {
      "unwatch": "fn()"
    },
    "ret729": {
      "unwatch": "fn()"
    },
    "ret730": {
      "unwatch": "fn()"
    },
    "ret731": {
      "unwatch": "fn()"
    },
    "ret732": {
      "unwatch": "fn()"
    },
    "ret733": {
      "unwatch": "fn()"
    },
    "ret734": {
      "unwatch": "fn()"
    },
    "ret735": {
      "unwatch": "fn()"
    },
    "ret736": {
      "unwatch": "fn()"
    },
    "ret737": {
      "unwatch": "fn()"
    },
    "ret738": {
      "unwatch": "fn()"
    },
    "ret739": {
      "unwatch": "fn()"
    },
    "ret740": {
      "unwatch": "fn()"
    },
    "ret741": {
      "unwatch": "fn()"
    },
    "ret742": {
      "unwatch": "fn()"
    },
    "ret743": {
      "unwatch": "fn()"
    },
    "ret744": {
      "unwatch": "fn()"
    },
    "ret745": {
      "unwatch": "fn()"
    },
    "ret746": {
      "unwatch": "fn()"
    },
    "ret747": {
      "unwatch": "fn()"
    },
    "ret748": {
      "unwatch": "fn()"
    },
    "ret749": {
      "unwatch": "fn()"
    },
    "ret750": {
      "unwatch": "fn()"
    },
    "ret751": {
      "unwatch": "fn()"
    },
    "ret752": {
      "unwatch": "fn()"
    },
    "ret753": {
      "unwatch": "fn()"
    },
    "ret754": {
      "unwatch": "fn()"
    },
    "ret755": {
      "unwatch": "fn()"
    },
    "ret756": {
      "unwatch": "fn()"
    },
    "ret757": {
      "unwatch": "fn()"
    },
    "ret758": {
      "unwatch": "fn()"
    },
    "ret759": {
      "unwatch": "fn()"
    },
    "ret760": {
      "unwatch": "fn()"
    },
    "ret761": {
      "unwatch": "fn()"
    },
    "ret762": {
      "unwatch": "fn()"
    },
    "ret763": {
      "unwatch": "fn()"
    },
    "ret764": {
      "unwatch": "fn()"
    },
    "ret765": {
      "unwatch": "fn()"
    },
    "ret766": {
      "unwatch": "fn()"
    },
    "ret767": {
      "unwatch": "fn()"
    },
    "ret768": {
      "unwatch": "fn()"
    },
    "ret769": {
      "unwatch": "fn()"
    },
    "ret770": {
      "unwatch": "fn()"
    },
    "ret771": {
      "unwatch": "fn()"
    },
    "ret772": {
      "unwatch": "fn()"
    },
    "ret773": {
      "unwatch": "fn()"
    },
    "ret774": {
      "unwatch": "fn()"
    },
    "ret775": {
      "unwatch": "fn()"
    },
    "ret776": {
      "unwatch": "fn()"
    },
    "ret777": {
      "unwatch": "fn()"
    },
    "ret778": {
      "unwatch": "fn()"
    },
    "ret779": {
      "unwatch": "fn()"
    },
    "ret780": {
      "unwatch": "fn()"
    },
    "ret781": {
      "unwatch": "fn()"
    },
    "ret782": {
      "unwatch": "fn()"
    },
    "ret783": {
      "unwatch": "fn()"
    },
    "ret784": {
      "unwatch": "fn()"
    },
    "ret785": {
      "unwatch": "fn()"
    },
    "ret786": {
      "unwatch": "fn()"
    },
    "ret787": {
      "unwatch": "fn()"
    },
    "ret788": {
      "unwatch": "fn()"
    },
    "ret789": {
      "unwatch": "fn()"
    },
    "ret790": {
      "unwatch": "fn()"
    },
    "ret791": {
      "unwatch": "fn()"
    },
    "ret792": {
      "unwatch": "fn()"
    },
    "ret793": {
      "unwatch": "fn()"
    },
    "ret794": {
      "unwatch": "fn()"
    },
    "ret795": {
      "unwatch": "fn()"
    },
    "ret796": {
      "unwatch": "fn()"
    },
    "ret797": {
      "unwatch": "fn()"
    },
    "ret798": {
      "unwatch": "fn()"
    },
    "ret799": {
      "unwatch": "fn()"
    },
    "ret800": {
      "unwatch": "fn()"
    },
    "ret801": {
      "unwatch": "fn()"
    },
    "ret802": {
      "unwatch": "fn()"
    },
    "ret803": {
      "unwatch": "fn()"
    },
    "ret804": {
      "unwatch": "fn()"
    },
    "ret805": {
      "unwatch": "fn()"
    },
    "ret806": {
      "unwatch": "fn()"
    },
    "ret807": {
      "unwatch": "fn()"
    },
    "ret808": {
      "unwatch": "fn()"
    },
    "ret809": {
      "unwatch": "fn()"
    },
    "ret810": {
      "unwatch": "fn()"
    },
    "ret811": {
      "unwatch": "fn()"
    },
    "ret812": {
      "unwatch": "fn()"
    },
    "ret813": {
      "unwatch": "fn()"
    },
    "ret814": {
      "unwatch": "fn()"
    },
    "ret815": {
      "unwatch": "fn()"
    },
    "ret816": {
      "unwatch": "fn()"
    },
    "ret817": {
      "unwatch": "fn()"
    },
    "ret818": {
      "unwatch": "fn()"
    },
    "ret819": {
      "unwatch": "fn()"
    },
    "ret820": {
      "unwatch": "fn()"
    },
    "ret821": {
      "unwatch": "fn()"
    },
    "ret822": {
      "unwatch": "fn()"
    },
    "ret823": {
      "unwatch": "fn()"
    },
    "ret824": {
      "unwatch": "fn()"
    },
    "ret825": {
      "unwatch": "fn()"
    },
    "ret826": {
      "unwatch": "fn()"
    },
    "ret827": {
      "unwatch": "fn()"
    },
    "ret828": {
      "unwatch": "fn()"
    },
    "ret829": {
      "unwatch": "fn()"
    },
    "ret830": {
      "unwatch": "fn()"
    },
    "ret831": {
      "unwatch": "fn()"
    },
    "ret832": {
      "unwatch": "fn()"
    },
    "ret833": {
      "unwatch": "fn()"
    },
    "ret834": {
      "unwatch": "fn()"
    },
    "ret835": {
      "unwatch": "fn()"
    },
    "ret836": {
      "unwatch": "fn()"
    },
    "ret837": {
      "unwatch": "fn()"
    },
    "ret838": {
      "unwatch": "fn()"
    },
    "ret839": {
      "unwatch": "fn()"
    },
    "ret840": {
      "unwatch": "fn()"
    },
    "ret841": {
      "unwatch": "fn()"
    },
    "ret842": {
      "unwatch": "fn()"
    },
    "ret843": {
      "unwatch": "fn()"
    },
    "ret844": {
      "unwatch": "fn()"
    },
    "ret845": {
      "unwatch": "fn()"
    },
    "ret846": {
      "unwatch": "fn()"
    },
    "ret847": {
      "unwatch": "fn()"
    },
    "ret848": {
      "unwatch": "fn()"
    },
    "ret849": {
      "unwatch": "fn()"
    },
    "ret850": {
      "unwatch": "fn()"
    },
    "ret851": {
      "unwatch": "fn()"
    },
    "ret852": {
      "unwatch": "fn()"
    },
    "ret853": {
      "unwatch": "fn()"
    },
    "ret854": {
      "unwatch": "fn()"
    },
    "ret855": {
      "unwatch": "fn()"
    },
    "ret856": {
      "unwatch": "fn()"
    },
    "ret857": {
      "unwatch": "fn()"
    },
    "ret858": {
      "unwatch": "fn()"
    },
    "ret859": {
      "unwatch": "fn()"
    },
    "ret860": {
      "unwatch": "fn()"
    },
    "ret861": {
      "unwatch": "fn()"
    },
    "ret862": {
      "unwatch": "fn()"
    },
    "ret863": {
      "unwatch": "fn()"
    },
    "ret864": {
      "unwatch": "fn()"
    },
    "ret865": {
      "unwatch": "fn()"
    },
    "ret866": {
      "unwatch": "fn()"
    },
    "ret867": {
      "unwatch": "fn()"
    },
    "ret868": {
      "unwatch": "fn()"
    },
    "ret869": {
      "unwatch": "fn()"
    },
    "ret870": {
      "unwatch": "fn()"
    },
    "ret871": {
      "unwatch": "fn()"
    },
    "ret872": {
      "unwatch": "fn()"
    },
    "ret873": {
      "unwatch": "fn()"
    },
    "ret874": {
      "unwatch": "fn()"
    },
    "ret875": {
      "unwatch": "fn()"
    },
    "ret876": {
      "unwatch": "fn()"
    },
    "ret877": {
      "unwatch": "fn()"
    },
    "ret878": {
      "unwatch": "fn()"
    },
    "ret879": {
      "unwatch": "fn()"
    },
    "ret880": {
      "unwatch": "fn()"
    },
    "ret881": {
      "unwatch": "fn()"
    },
    "ret882": {
      "unwatch": "fn()"
    },
    "ret883": {
      "unwatch": "fn()"
    },
    "ret884": {
      "unwatch": "fn()"
    },
    "ret885": {
      "unwatch": "fn()"
    },
    "ret886": {
      "unwatch": "fn()"
    },
    "ret887": {
      "unwatch": "fn()"
    },
    "ret888": {
      "unwatch": "fn()"
    },
    "ret889": {
      "unwatch": "fn()"
    },
    "ret890": {
      "unwatch": "fn()"
    },
    "ret891": {
      "unwatch": "fn()"
    },
    "ret892": {
      "unwatch": "fn()"
    },
    "ret893": {
      "unwatch": "fn()"
    },
    "ret894": {
      "unwatch": "fn()"
    }
  }
}
