{
  "Hammer": "HammerStatic",
  "HammerStatic": {
    "VERSION": "number",
    "HAS_POINTEREVENTS": "bool",
    "HAS_TOUCHEVENTS": "bool",
    "UPDATE_VELOCITY_INTERVAL": "number",
    "POINTER_MOUSE": "HammerPointerType",
    "POINTER_TOUCH": "HammerPointerType",
    "POINTER_PEN": "HammerPointerType",
    "DIRECTION_UP": "HammerDirectionType",
    "DIRECTION_DOWN": "HammerDirectionType",
    "DIRECTION_LEFT": "HammerDirectionType",
    "DIRECTION_RIGH": "HammerDirectionType",
    "EVENT_START": "HammerTouchEventState",
    "EVENT_MOVE": "HammerTouchEventState",
    "EVENT_END": "HammerTouchEventState",
    "plugins": "?",
    "gestures": "?",
    "READY": "bool"
  },
  "HammerInstance": {
    "!type": "fn(element: ?, options?: HammerOptions)",
    "prototype": {
      "on": "fn(gesture: string, handler: fn(event: HammerEvent)) -> HammerInstance",
      "off": "fn(gesture: string, handler: fn(event: HammerEvent)) -> HammerInstance",
      "enable": "fn(toggle: bool) -> HammerInstance",
      "trigger": "fn(gesture: string, eventData: HammerGestureEventData) -> HammerInstance"
    }
  },
  "HammerOptions": {
    "behavior": {
      "contentZooming": "string",
      "tapHighlightColor": "string",
      "touchAction": "string",
      "touchCallout": "string",
      "userDrag": "string",
      "userSelect": "string"
    },
    "doubleTapDistance": "number",
    "doubleTapInterval": "number",
    "drag": "bool",
    "dragBlockHorizontal": "bool",
    "dragBlockVertical": "bool",
    "dragDistanceCorrection": "bool",
    "dragLockMinDistance": "number",
    "dragLockToAxis": "bool",
    "dragMaxTouches": "number",
    "dragMinDistance": "number",
    "gesture": "bool",
    "hold": "bool",
    "holdThreshold": "number",
    "holdTimeout": "number",
    "preventDefault": "bool",
    "preventMouse": "bool",
    "release": "bool",
    "showTouches": "bool",
    "swipe": "bool",
    "swipeMaxTouches": "number",
    "swipeMinTouches": "number",
    "swipeVelocityX": "number",
    "swipeVelocityY": "number",
    "tap": "bool",
    "tapAlways": "bool",
    "tapMaxDistance": "number",
    "tapMaxTime": "number",
    "touch": "bool",
    "transform": "bool",
    "transformMinRotation": "number",
    "transformMinScale": "number"
  },
  "HammerGestureEventData": {
    "timestamp": "number",
    "target": "HTMLElement",
    "touches": "[HammerPoint]",
    "pointerType": "HammerPointerType",
    "center": "HammerPoint",
    "deltaTime": "number",
    "deltaX": "number",
    "deltaY": "number",
    "velocityX": "number",
    "velocityY": "number",
    "angle": "number",
    "interimAngle": "number",
    "direction": "HammerDirectionType",
    "interimDirection": "HammerDirectionType",
    "distance": "number",
    "scale": "number",
    "rotation": "number",
    "eventType": "HammerTouchEventState",
    "srcEvent": "?",
    "startEvent": "?",
    "stopPropagation": "fn()",
    "preventDefault": "fn()",
    "stopDetect": "fn()"
  },
  "HammerPoint": {
    "clientX": "number",
    "clientY": "number",
    "pageX": "number",
    "pageY": "number"
  },
  "HammerEvent": {
    "type": "string",
    "gesture": "HammerGestureEventData",
    "stopPropagation": "fn()",
    "preventDefault": "fn()"
  },
  "HammerPointerType": "number",
  "HammerDirectionType": "number",
  "HammerTouchEventState": "number",
  "JQuery": {
    "hammer": "fn(options?: HammerOptions) -> JQuery"
  },
  "!name": "hammerjs-1.1.3"
}
