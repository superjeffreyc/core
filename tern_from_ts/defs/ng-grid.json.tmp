{
  "ngGridReorderable": {
    "!type": "fn()",
    "prototype": {}
  },
  "ngStyleProvider": "ngGrid.IStyleProviderStatic",
  "ngSearchProvider": "ngGrid.ISearchProviderStatic",
  "ngSelectionProvider": "ngGrid.ISelectionProviderStatic",
  "ngEventProvider": "ngGrid.IEventProviderStatic",
  "ngAggregate": "ngGrid.IAggregateStatic",
  "ngRenderedRange": "ngGrid.IRenderedRangeStatic",
  "ngDimension": "ngGrid.IDimensionStatic",
  "ngRow": "ngGrid.IRowStatic",
  "ngColumn": "ngGrid.IColumnStatic",
  "ngFooter": "ngGrid.IFooterStatic",
  "ngGrid": {
    "IDomAccessProvider": {
      "previousColumn": "IColumn",
      "grid": "IGridInstance",
      "changeUserSelect": "fn(elm: angular.IAugmentedJQuery, value: string)",
      "focusCellElement": "fn($scope: IGridScope, index: number)",
      "selectionHandlers": "fn($scope: IGridScope, elm: angular.IAugmentedJQuery)"
    },
    "IStyleProviderStatic": {},
    "IStyleProvider": {},
    "ISearchProviderStatic": {},
    "ISearchProvider": {
      "fieldMap": "?",
      "extFilter": "bool",
      "evalFilter": "fn()"
    },
    "ISelectionProviderStatic": {},
    "ISelectionProvider": {
      "multi": "bool",
      "selectedItems": "[?]",
      "selectedIndex": "number",
      "lastClickedRow": "?",
      "ignoreSelectedItemChanges": "bool",
      "pKeyParser": "angular.ICompiledExpression",
      "ChangeSelection": "fn(rowItem: ?, event: ?)",
      "getSelection": "fn(entity: ?) -> number",
      "getSelectionIndex": "fn(entity: ?) -> number",
      "setSelection": "fn(rowItem: IRow, isSelected: bool)",
      "toggleSelectAll": "fn(checkAll: bool, bypass: bool, selectFiltered: bool)"
    },
    "IEventProviderStatic": {},
    "IEventProvider": {
      "colToMove": "IColumn",
      "groupToMove": "?",
      "assignEvents": "fn()",
      "assignGridEventHandlers": "fn()",
      "dragStart": "fn(event: ?)",
      "dragOver": "fn(event: ?)",
      "setDraggables": "fn()",
      "onGroupMouseDown": "fn(event: ?)",
      "onGroupDrop": "fn(event: ?)",
      "onHeaderMouseDown": "fn(event: ?)",
      "onHeaderDrop": "fn(event: ?)"
    },
    "IAggregateStatic": {},
    "IAggregate": {
      "rowIndex": "number",
      "offsetTop": "number",
      "entity": "?",
      "label": "string",
      "field": "string",
      "depth": "number",
      "parent": "?",
      "children": "[?]",
      "aggChildren": "[?]",
      "aggIndex": "number",
      "collapsed": "bool",
      "groupInitState": "bool",
      "rowFactory": "IRowFactory",
      "rowHeight": "number",
      "isAggRow": "bool",
      "offsetLeft": "number",
      "aggLabelFilter": "?"
    },
    "IRowConfig": {
      "enableCellSelection": "bool",
      "enableRowSelection": "bool",
      "jqueryUITheme": "bool",
      "rowClasses": "[string]",
      "rowHeight": "number",
      "selectWithCheckboxOnly": "bool",
      "selectedItems": "[?]",
      "afterSelectionChangeCallback": "fn()",
      "beforeSelectionChangeCallback": "fn()"
    },
    "IRenderedRangeStatic": {},
    "IRenderedRange": {
      "bottomRow": "number",
      "topRow": "number"
    },
    "IRowFactory": {
      "aggCache": "?",
      "dataChanged": "bool",
      "groupedData": "?",
      "numberOfAggregates": "number",
      "parentCache": "[?]",
      "parsedData": "[?]",
      "renderedRange": "IRenderedRange",
      "rowConfig": "IRowConfig",
      "rowHeight": "number",
      "selectionProvider": "ISelectionProvider",
      "UpdateViewableRange": "fn(newRange: IRenderedRange)",
      "buildAggregateRow": "fn(aggEntity: ?, rowIndex: number) -> IAggregate",
      "buildEntityRow": "fn(entity: ?, rowIndex: number) -> IRow",
      "filteredRowsChanged": "fn()",
      "fixRowCache": "fn()",
      "getGrouping": "fn(groups: ?)",
      "parseGroupData": "fn(groupData: ?)",
      "renderedChange": "fn()",
      "renderedChangeNoGroups": "fn()"
    },
    "IDimensionStatic": {},
    "IDimension": {
      "outerHeight": "number",
      "outerWidth": "number",
      "autoFitHeight": "bool"
    },
    "IElementDimension": {
      "rootMaxH": "number",
      "rootMaxW": "number",
      "rowIndexCellW": "number",
      "rowSelectedCellW": "number",
      "scrollH": "number",
      "scrollW": "number"
    },
    "IRowStatic": {},
    "IRow": {
      "entity": "?",
      "config": "IRowConfig",
      "selectionProvider": "ISelectionProvider",
      "rowIndex": "number",
      "utils": "?",
      "selected": "bool",
      "cursor": "string",
      "offsetTop": "number",
      "rowDisplayIndex": "number",
      "afterSelectionChange": "fn()",
      "beforeSelectionChange": "fn()",
      "setSelection": "fn(isSelected: bool)",
      "continueSelection": "fn(event: ?)",
      "ensureEntity": "fn(expected: ?)",
      "toggleSelected": "fn(event: ?) -> bool",
      "alternatingRowClass": "fn()",
      "getProperty": "fn(path: string) -> ?",
      "copy": "fn() -> IRow",
      "setVars": "fn(fromRow: IRow)"
    },
    "IColumnStatic": {},
    "IColumn": {
      "colDef": "IColumnDef",
      "width": "number",
      "groupIndex": "number",
      "isGroupedBy": "bool",
      "minWidth": "number",
      "maxWidth": "number",
      "enableCellEdit": "bool",
      "cellEditableCondition": "?",
      "headerRowHeight": "number",
      "displayName": "string",
      "index": "number",
      "isAggCol": "bool",
      "cellClass": "string",
      "sortPriority": "number",
      "cellFilter": "?",
      "field": "string",
      "aggLabelFilter": "?",
      "visible": "bool",
      "sortable": "bool",
      "resizable": "bool",
      "pinnable": "bool",
      "pinned": "bool",
      "originalIndex": "number",
      "groupable": "bool",
      "sortDirection": "string",
      "sortingAlgorithm": "Function",
      "headerClass": "string",
      "cursor": "string",
      "headerCellTemplate": "string",
      "cellTemplate": "string",
      "groupedByClass": "fn() -> string",
      "toggleVisible": "fn()",
      "showSortButtonUp": "fn() -> bool",
      "showSortButtonDown": "fn() -> bool",
      "noSortVisible": "fn() -> bool",
      "sort": "fn(event: ?) -> bool",
      "gripClick": "fn() -> ?",
      "gripOnMouseDown": "fn(event: ?) -> ?",
      "onMouseMove": "fn(event: ?)",
      "gripOnMouseUp": "fn(event: ?)",
      "copy": "fn() -> IColumn",
      "setVars": "fn(fromCol: IColumn)"
    },
    "IGridScope": {
      "elementsNeedMeasuring": "bool",
      "columns": "[?]",
      "renderedRows": "[?]",
      "renderedColumns": "[?]",
      "headerRow": "?",
      "rowHeight": "number",
      "jqueryUITheme": "?",
      "showSelectionCheckbox": "bool",
      "enableCellSelection": "bool",
      "enableCellEditOnFocus": "bool",
      "footer": "IFooter",
      "selectedItems": "[?]",
      "multiSelect": "bool",
      "showFooter": "bool",
      "footerRowHeight": "number",
      "showColumnMenu": "bool",
      "forceSyncScrolling": "bool",
      "showMenu": "bool",
      "configGroups": "[?]",
      "gridId": "string",
      "enablePaging": "bool",
      "pagingOptions": "IPagingOptions",
      "i18n": "?",
      "selectionProvider": "ISelectionProvider",
      "adjustScrollLeft": "fn(scrollLeft: number)",
      "adjustScrollTop": "fn(scrollTop: number, force: bool)",
      "toggleShowMenu": "fn()",
      "toggleSelectAll": "fn()",
      "totalFilteredItemsLength": "fn() -> number",
      "showGroupPanel": "fn() -> ?",
      "topPanelHeight": "fn() -> number",
      "viewportDimHeight": "fn() -> number",
      "groupBy": "fn(col: IColumn)",
      "removeGroup": "fn(index: number)",
      "togglePin": "fn(col: IColumn)",
      "totalRowWidth": "fn() -> number",
      "headerScrollerDim": "fn() -> ?"
    },
    "IGridInstance": {
      "$canvas": "angular.IAugmentedJQuery",
      "$viewport": "angular.IAugmentedJQuery",
      "$groupPanel": "angular.IAugmentedJQuery",
      "$footerPanel": "angular.IAugmentedJQuery",
      "$headerScroller": "angular.IAugmentedJQuery",
      "$headerContainer": "angular.IAugmentedJQuery",
      "$headers": "angular.IAugmentedJQuery",
      "$topPanel": "angular.IAugmentedJQuery",
      "$root": "angular.IAugmentedJQuery",
      "config": "IGridOptions",
      "data": "?",
      "elementDims": "IElementDimension",
      "eventProvider": "IEventProvider",
      "filteredRows": "[IRow]",
      "footerController": "?",
      "gridId": "string",
      "lastSortedColumns": "[IColumn]",
      "lateBindColumns": "bool",
      "maxCanvasHt": "number",
      "prevScrollIndex": "number",
      "prevScrollTop": "number",
      "rootDim": "IDimension",
      "rowCache": "[IRow]",
      "rowFactory": "IRowFactory",
      "rowMap": "[IRow]",
      "searchProvider": "ISearchProvider",
      "styleProvider": "IStyleProvider",
      "buildColumnDefsFromData": "fn()",
      "buildColumns": "fn()",
      "calcMaxCanvasHeight": "fn()",
      "clearSortingData": "fn()",
      "configureColumnWidths": "fn()",
      "fixColumnIndexes": "fn()",
      "fixGroupIndexes": "fn()",
      "getTemplate": "fn(key: string) -> ?",
      "init": "fn() -> ?",
      "initTemplates": "fn() -> ?",
      "minRowsToRender": "fn()",
      "refreshDomSizes": "fn()",
      "resizeOnData": "fn(col: IColumn)",
      "setRenderedRows": "fn(newRows: [IRow])",
      "sortActual": "fn()",
      "sortColumnsInit": "fn()",
      "sortData": "fn(col: IColumn, event: ?)"
    },
    "IFooterStatic": {},
    "IFooter": {},
    "IGridOptions": {
      "aggregateTemplate": "string",
      "afterSelectionChange": "fn(rowItem?: IRow, event?: ?)",
      "beforeSelectionChange": "fn(rowItem?: IRow, event?: ?)",
      "checkboxCellTemplate": "string",
      "checkboxHeaderTemplate": "string",
      "columnDefs": "[IColumnDef]",
      "data": "?",
      "dataUpdated": "Function",
      "enableCellEdit": "bool",
      "enableCellSelection": "bool",
      "enableColumnResize": "bool",
      "enableColumnReordering": "bool",
      "enableColumnHeavyVirt": "bool",
      "enablePaging": "bool",
      "enablePinning": "bool",
      "enableRowReordering": "bool",
      "enableRowSelection": "bool",
      "enableSorting": "bool",
      "excludeProperties": "?",
      "filterOptions": "IFilterOptions",
      "footerRowHeight": "number",
      "groups": "[string]",
      "headerRowHeight": "number",
      "headerRowTemplate": "string",
      "jqueryUIDraggable": "bool",
      "jqueryUITheme": "bool",
      "keepLastSelected": "bool",
      "maintainColumnRatios": "bool",
      "multiSelect": "bool",
      "pagingOptions": "IPagingOptions",
      "pinSelectionCheckbox": "bool",
      "plugins": "[?]",
      "rowHeight": "number",
      "rowTemplate": "string",
      "selectedItems": "[?]",
      "selectItem": "fn(idx: number, state: bool)",
      "selectWithCheckboxOnly": "bool",
      "showColumnMenu": "bool",
      "showFilter": "bool",
      "showFooter": "bool",
      "showGroupPanel": "bool",
      "showSelectionCheckbox": "bool",
      "sortInfo": "?",
      "tabIndex": "number",
      "useExternalSorting": "bool",
      "i18n": "string",
      "virtualizationThreshold": "number",
      "enableHighlighting": "bool"
    },
    "IColumnDef": {
      "width": "?",
      "minWidth": "?",
      "visible": "bool",
      "field": "string",
      "displayName": "string",
      "sortable": "bool",
      "resizable": "bool",
      "groupable": "bool",
      "pinnable": "bool",
      "editableCellTemplate": "string",
      "enableCellEdit": "bool",
      "cellEditableCondition": "string",
      "sortFn": "fn(a: ?, b: ?)",
      "cellTemplate": "string",
      "cellClass": "string",
      "headerClass": "string",
      "headerCellTemplate": "string",
      "cellFilter": "string",
      "aggLabelFilter": "string",
      "pinned": "bool"
    },
    "IFilterOptions": {
      "filterText": "string",
      "useExternalFilter": "bool"
    },
    "IPagingOptions": {
      "pageSizes": "[number]",
      "pageSize": "number",
      "totalServerItems": "number",
      "currentPage": "number"
    },
    "IPlugin": {
      "init": "fn(childScope: IGridScope, gridInstance: IGridInstance, services: ?)"
    },
    "service": {
      "IDomUtilityService": {
        "eventStorage": "?",
        "numberOfGrids": "number",
        "immediate": "number",
        "AssignGridContainers": "fn($scope: IGridScope, rootel: angular.IAugmentedJQuery, grid: IGridInstance)",
        "getRealWidth": "fn(obj: IDimension) -> number",
        "UpdateGridLayout": "fn($scope: IGridScope, grid: IGridInstance)",
        "setStyleText": "fn(grid: IGridInstance, css: string)",
        "BuildStyles": "fn($scope: IGridScope, grid: IGridInstance, digest: bool)",
        "setColLeft": "fn(col: IColumn, colLeft: number, grid: IGridInstance)",
        "RebuildGrid": "fn($scope: IGridScope, grid: IGridInstance)",
        "digest": "fn($scope: IGridScope)",
        "ScrollH": "number",
        "ScrollW": "number",
        "LetterW": "number"
      },
      "ISortInfo": {
        "fields": "[string]"
      },
      "ISortService": {
        "colSortFnCache": "?",
        "isCustomSort": "bool",
        "isSorting": "bool",
        "guessSortFn": "fn(item: ?) -> fn(a: ?, b: ?)",
        "basicSort": "fn(a: ?, b: ?) -> number",
        "sortNumber": "fn(a: number, b: number) -> number",
        "sortNumberStr": "fn(a: string, b: string) -> number",
        "sortAlpha": "fn(a: string, b: string) -> number",
        "sortDate": "fn(a: Date, b: Date) -> number",
        "sortBool": "fn(a: bool, b: bool) -> number",
        "sortData": "fn(sortInfo: ISortInfo, data: ?)",
        "Sort": "fn(sortInfo: ISortInfo, data: ?)",
        "getSortFn": "fn(col: IColumn, data: ?) -> fn(a: ?, b: ?)"
      },
      "IUtilityService": {
        "visualLength": "fn(node: ?) -> number",
        "forIn": "fn(obj: ?, action: fn(value: ?, property: string))",
        "evalProperty": "fn(entity: ?, path: string) -> ?",
        "endsWith": "fn(str: string, suffix: string) -> bool",
        "isNullOrUndefined": "fn(obj: ?) -> bool",
        "getElementsByClassName": "fn(cl: string) -> [?]",
        "newId": "fn() -> string",
        "seti18n": "fn($scope: IGridScope, language: string)",
        "getInstanceType": "fn(o: ?) -> string"
      }
    }
  },
  "!name": "ng-grid.d.ts"
}
