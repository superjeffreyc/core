{
  "GoogleAppsScript": {
    "Drive": {
      "Access": "number",
      "DriveApp": {
        "Access": "Access",
        "Permission": "Permission",
        "addFile": "fn(child: File) -> Folder",
        "addFolder": "fn(child: Folder) -> Folder",
        "continueFileIterator": "fn(continuationToken: string) -> FileIterator",
        "continueFolderIterator": "fn(continuationToken: string) -> FolderIterator",
        "createFile": "fn(blob: Base.BlobSource) -> File",
        "createFolder": "fn(name: string) -> Folder",
        "getFileById": "fn(id: string) -> File",
        "getFiles": "fn() -> FileIterator",
        "getFilesByName": "fn(name: string) -> FileIterator",
        "getFilesByType": "fn(mimeType: string) -> FileIterator",
        "getFolderById": "fn(id: string) -> Folder",
        "getFolders": "fn() -> FolderIterator",
        "getFoldersByName": "fn(name: string) -> FolderIterator",
        "getRootFolder": "fn() -> Folder",
        "getStorageLimit": "fn() -> Integer",
        "getStorageUsed": "fn() -> Integer",
        "getTrashedFiles": "fn() -> FileIterator",
        "getTrashedFolders": "fn() -> FolderIterator",
        "removeFile": "fn(child: File) -> Folder",
        "removeFolder": "fn(child: Folder) -> Folder",
        "searchFiles": "fn(params: string) -> FileIterator",
        "searchFolders": "fn(params: string) -> FolderIterator"
      },
      "File": {
        "addCommenter": "fn(emailAddress: string) -> File",
        "addCommenters": "fn(emailAddresses: [String]) -> File",
        "addEditor": "fn(emailAddress: string) -> File",
        "addEditors": "fn(emailAddresses: [String]) -> File",
        "addViewer": "fn(emailAddress: string) -> File",
        "addViewers": "fn(emailAddresses: [String]) -> File",
        "getAccess": "fn(email: string) -> Permission",
        "getAs": "fn(contentType: string) -> Base.Blob",
        "getBlob": "fn() -> Base.Blob",
        "getDateCreated": "fn() -> Date",
        "getDescription": "fn() -> string",
        "getDownloadUrl": "fn() -> string",
        "getEditors": "fn() -> [User]",
        "getId": "fn() -> string",
        "getLastUpdated": "fn() -> Date",
        "getMimeType": "fn() -> string",
        "getName": "fn() -> string",
        "getOwner": "fn() -> User",
        "getParents": "fn() -> FolderIterator",
        "getSharingAccess": "fn() -> Access",
        "getSharingPermission": "fn() -> Permission",
        "getSize": "fn() -> Integer",
        "getThumbnail": "fn() -> Base.Blob",
        "getUrl": "fn() -> string",
        "getViewers": "fn() -> [User]",
        "isShareableByEditors": "fn() -> bool",
        "isStarred": "fn() -> bool",
        "isTrashed": "fn() -> bool",
        "makeCopy": "fn() -> File",
        "removeCommenter": "fn(emailAddress: string) -> File",
        "removeEditor": "fn(emailAddress: string) -> File",
        "removeViewer": "fn(emailAddress: string) -> File",
        "revokePermissions": "fn(user: string) -> File",
        "setContent": "fn(content: string) -> File",
        "setDescription": "fn(description: string) -> File",
        "setName": "fn(name: string) -> File",
        "setOwner": "fn(emailAddress: string) -> File",
        "setShareableByEditors": "fn(shareable: bool) -> File",
        "setSharing": "fn(accessType: Access, permissionType: Permission) -> File",
        "setStarred": "fn(starred: bool) -> File",
        "setTrashed": "fn(trashed: bool) -> File"
      },
      "FileIterator": {
        "getContinuationToken": "fn() -> string",
        "hasNext": "fn() -> bool",
        "next": "fn() -> File"
      },
      "Folder": {
        "addEditor": "fn(emailAddress: string) -> Folder",
        "addEditors": "fn(emailAddresses: [String]) -> Folder",
        "addFile": "fn(child: File) -> Folder",
        "addFolder": "fn(child: Folder) -> Folder",
        "addViewer": "fn(emailAddress: string) -> Folder",
        "addViewers": "fn(emailAddresses: [String]) -> Folder",
        "createFile": "fn(blob: Base.BlobSource) -> File",
        "createFolder": "fn(name: string) -> Folder",
        "getAccess": "fn(email: string) -> Permission",
        "getDateCreated": "fn() -> Date",
        "getDescription": "fn() -> string",
        "getEditors": "fn() -> [User]",
        "getFiles": "fn() -> FileIterator",
        "getFilesByName": "fn(name: string) -> FileIterator",
        "getFilesByType": "fn(mimeType: string) -> FileIterator",
        "getFolders": "fn() -> FolderIterator",
        "getFoldersByName": "fn(name: string) -> FolderIterator",
        "getId": "fn() -> string",
        "getLastUpdated": "fn() -> Date",
        "getName": "fn() -> string",
        "getOwner": "fn() -> User",
        "getParents": "fn() -> FolderIterator",
        "getSharingAccess": "fn() -> Access",
        "getSharingPermission": "fn() -> Permission",
        "getSize": "fn() -> Integer",
        "getUrl": "fn() -> string",
        "getViewers": "fn() -> [User]",
        "isShareableByEditors": "fn() -> bool",
        "isStarred": "fn() -> bool",
        "isTrashed": "fn() -> bool",
        "removeEditor": "fn(emailAddress: string) -> Folder",
        "removeFile": "fn(child: File) -> Folder",
        "removeFolder": "fn(child: Folder) -> Folder",
        "removeViewer": "fn(emailAddress: string) -> Folder",
        "revokePermissions": "fn(user: string) -> Folder",
        "searchFiles": "fn(params: string) -> FileIterator",
        "searchFolders": "fn(params: string) -> FolderIterator",
        "setDescription": "fn(description: string) -> Folder",
        "setName": "fn(name: string) -> Folder",
        "setOwner": "fn(emailAddress: string) -> Folder",
        "setShareableByEditors": "fn(shareable: bool) -> Folder",
        "setSharing": "fn(accessType: Access, permissionType: Permission) -> Folder",
        "setStarred": "fn(starred: bool) -> Folder",
        "setTrashed": "fn(trashed: bool) -> Folder"
      },
      "FolderIterator": {
        "getContinuationToken": "fn() -> string",
        "hasNext": "fn() -> bool",
        "next": "fn() -> Folder"
      },
      "Permission": "number",
      "User": {
        "getDomain": "fn() -> string",
        "getEmail": "fn() -> string",
        "getName": "fn() -> string",
        "getPhotoUrl": "fn() -> string",
        "getUserLoginId": "fn() -> string"
      }
    }
  },
  "DriveApp": "GoogleAppsScript.Drive.DriveApp",
  "!name": "google-apps-script.drive"
}
