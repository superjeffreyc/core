{
  "dojox": {
    "av": {
      "_Media": {
        "!type": "fn()",
        "prototype": {
          "allowFullScreen": "bool",
          "allowNetworking": "string",
          "allowScriptAccess": "string",
          "autoPlay": "Object",
          "bufferTime": "Object",
          "flashMedia": "Object",
          "id": "Object",
          "initialVolume": "Object",
          "isDebug": "Object",
          "mediaUrl": "string",
          "minBufferTime": "number",
          "percentDownloaded": "number",
          "updateTime": "number",
          "wmode": "string",
          "destroy": "fn()",
          "getTime": "fn() -> ?",
          "onBuffer": "fn(isBuffering: bool)",
          "onClick": "fn(evt: Object)",
          "onDownloaded": "fn(percent: number)",
          "onEnd": "fn(data: Object)",
          "onError": "fn(data: Object, url: String)",
          "onLoad": "fn(mov: Object)",
          "onMetaData": "fn(data: Object, evt: Object)",
          "onPause": "fn(data: Object)",
          "onPlay": "fn(data: Object)",
          "onPlayerStatus": "fn(data: Object)",
          "onPosition": "fn(time: number)",
          "onResize": "fn()",
          "onStart": "fn(data: Object)",
          "onStatus": "fn(data: Object)",
          "onStop": "fn()",
          "onSwfSized": "fn(data: Object)"
        }
      },
      "FLAudio": {
        "!type": "fn(options: Object)",
        "prototype": {
          "allowNetworking": "string",
          "allowScriptAccess": "string",
          "id": "Object",
          "initialPan": "number",
          "initialVolume": "number",
          "isDebug": "Object",
          "statusInterval": "number",
          "destroy": "fn()",
          "doPlay": "fn(options: Object)",
          "getPan": "fn(options: Object) -> ?",
          "getPosition": "fn(options: Object) -> ?",
          "getVolume": "fn(options: Object) -> ?",
          "init": "fn()",
          "load": "fn(options: Object) -> ?",
          "pause": "fn(options: Object)",
          "setPan": "fn(options: Object)",
          "setVolume": "fn(options: Object)",
          "stop": "fn(options: Object)",
          "onAllLoaded": "fn()",
          "onComplete": "fn(events: [?])",
          "onError": "fn(msg: ?)",
          "onID3": "fn(evt: ?)",
          "onLoad": "fn()",
          "onLoadStatus": "fn(events: [?])",
          "onPlayStatus": "fn(events: [?])"
        }
      },
      "FLVideo": {
        "!type": "fn(options: Object)",
        "prototype": {
          "allowFullScreen": "bool",
          "set": "fn(property: string, value: bool)",
          "get": "fn(property: string) -> bool",
          "watch": "fn(property: string, callback: ?) -> ret",
          "allowNetworking": "string",
          "allowScriptAccess": "string",
          "attributeMap": "Object",
          "autoPlay": "Object",
          "baseClass": "string",
          "bufferTime": "Object",
          "class": "string",
          "containerNode": "HTMLElement",
          "dir": "string",
          "domNode": "HTMLElement",
          "flashMedia": "Object",
          "focused": "bool",
          "id": "string",
          "initialVolume": "Object",
          "isDebug": "Object",
          "lang": "string",
          "mediaUrl": "string",
          "minBufferTime": "number",
          "ownerDocument": "Object",
          "percentDownloaded": "number",
          "srcNodeRef": "HTMLElement",
          "style": "string",
          "title": "string",
          "tooltip": "string",
          "updateTime": "number",
          "wmode": "string",
          "attr": "fn(name: String, value: Object) -> ?",
          "buildRendering": "fn()",
          "connect": "fn(obj: Object, event: String, method: String) -> ?",
          "defer": "fn(fcn: Function, delay: number) -> Object",
          "destroy": "fn()",
          "destroyDescendants": "fn(preserveDom: bool)",
          "destroyRecursive": "fn(preserveDom: bool)",
          "destroyRendering": "fn(preserveDom?: bool)",
          "disconnect": "fn(handle: ?)",
          "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
          "getChildren": "fn() -> [?]",
          "getDescendants": "fn() -> [?]",
          "getParent": "fn() -> ?",
          "getTime": "fn() -> ?",
          "isFocusable": "fn() -> ?",
          "isLeftToRight": "fn() -> ?",
          "on": "fn(type: String, func: Function) -> ?",
          "own": "fn() -> ?",
          "pause": "fn()",
          "placeAt": "fn(reference: String, position: String) -> ?",
          "play": "fn(newUrl: String)",
          "postCreate": "fn()",
          "postMixInProperties": "fn()",
          "seek": "fn(time: number)",
          "setAttribute": "fn(attr: String, value: ?)",
          "startup": "fn()",
          "subscribe": "fn(t: String, method: Function) -> ?",
          "uninitialize": "fn() -> bool",
          "unsubscribe": "fn(handle: Object)",
          "volume": "fn(vol: number) -> ?",
          "onBlur": "fn()",
          "onBuffer": "fn(isBuffering: ?)",
          "onClick": "fn(evt: ?)",
          "onClose": "fn() -> bool",
          "onDblClick": "fn(event: ?)",
          "onDownloaded": "fn(percent: ?)",
          "onEnd": "fn(data: ?)",
          "onError": "fn(data: ?, url: ?)",
          "onFocus": "fn()",
          "onHide": "fn()",
          "onKeyDown": "fn(event: ?)",
          "onKeyPress": "fn(event: ?)",
          "onKeyUp": "fn(event: ?)",
          "onLoad": "fn(mov: ?)",
          "onMetaData": "fn(data: ?, evt: ?)",
          "onMouseDown": "fn(event: ?)",
          "onMouseEnter": "fn(event: ?)",
          "onMouseLeave": "fn(event: ?)",
          "onMouseMove": "fn(event: ?)",
          "onMouseOut": "fn(event: ?)",
          "onMouseOver": "fn(event: ?)",
          "onMouseUp": "fn(event: ?)",
          "onPause": "fn(data: ?)",
          "onPlay": "fn(data: ?)",
          "onPlayerStatus": "fn(data: ?)",
          "onPosition": "fn(time: ?)",
          "onResize": "fn()",
          "onShow": "fn()",
          "onStart": "fn(data: ?)",
          "onStatus": "fn(data: ?)",
          "onStop": "fn()",
          "onSwfSized": "fn(data: ?)"
        }
      },
      "widget": {
        "PlayButton": {
          "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
          "prototype": {
            "attachScope": "Object",
            "set": "fn(property: string, value: Object)",
            "get": "fn(property: string) -> Object",
            "watch": "fn(property: string, callback: ?) -> ret28",
            "attributeMap": "Object",
            "baseClass": "string",
            "class": "string",
            "containerNode": "HTMLElement",
            "dir": "string",
            "domNode": "HTMLElement",
            "focused": "bool",
            "id": "string",
            "lang": "string",
            "ownerDocument": "Object",
            "searchContainerNode": "bool",
            "srcNodeRef": "HTMLElement",
            "style": "string",
            "templatePath": "string",
            "templateString": "string",
            "title": "string",
            "tooltip": "string",
            "attr": "fn(name: String, value: Object) -> ?",
            "buildRendering": "fn()",
            "connect": "fn(obj: Object, event: String, method: String) -> ?",
            "defer": "fn(fcn: Function, delay: number) -> Object",
            "destroy": "fn(preserveDom?: bool)",
            "destroyDescendants": "fn(preserveDom: bool)",
            "destroyRecursive": "fn(preserveDom: bool)",
            "destroyRendering": "fn(preserveDom?: bool)",
            "disconnect": "fn(handle: ?)",
            "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
            "getChildren": "fn() -> [?]",
            "getDescendants": "fn() -> [?]",
            "getParent": "fn() -> ?",
            "isFocusable": "fn() -> ?",
            "isLeftToRight": "fn() -> ?",
            "on": "fn(type: String, func: Function) -> ?",
            "own": "fn() -> ?",
            "placeAt": "fn(reference: String, position: String) -> ?",
            "postCreate": "fn()",
            "postMixInProperties": "fn()",
            "setAttribute": "fn(attr: String, value: ?)",
            "setMedia": "fn(med: Object)",
            "showPause": "fn()",
            "showPlay": "fn()",
            "startup": "fn()",
            "subscribe": "fn(t: String, method: Function) -> ?",
            "uninitialize": "fn() -> bool",
            "unsubscribe": "fn(handle: Object)",
            "getCachedTemplate": "fn() -> ?",
            "onBlur": "fn()",
            "onClick": "fn()",
            "onClose": "fn() -> bool",
            "onDblClick": "fn(event: ?)",
            "onFocus": "fn()",
            "onHide": "fn()",
            "onKeyDown": "fn(event: ?)",
            "onKeyPress": "fn(event: ?)",
            "onKeyUp": "fn(event: ?)",
            "onMouseDown": "fn(event: ?)",
            "onMouseEnter": "fn(event: ?)",
            "onMouseLeave": "fn(event: ?)",
            "onMouseMove": "fn(event: ?)",
            "onMouseOut": "fn(event: ?)",
            "onMouseOver": "fn(event: ?)",
            "onMouseUp": "fn(event: ?)",
            "onPause": "fn()",
            "onPlay": "fn()",
            "onShow": "fn()"
          }
        },
        "ProgressSlider": {
          "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
          "prototype": {
            "attachScope": "Object",
            "set": "fn(property: string, value: Object)",
            "get": "fn(property: string) -> Object",
            "watch": "fn(property: string, callback: ?) -> ret47",
            "attributeMap": "Object",
            "baseClass": "string",
            "class": "string",
            "containerNode": "HTMLElement",
            "dir": "string",
            "domNode": "HTMLElement",
            "focused": "bool",
            "id": "string",
            "lang": "string",
            "ownerDocument": "Object",
            "searchContainerNode": "bool",
            "srcNodeRef": "HTMLElement",
            "style": "string",
            "templatePath": "string",
            "templateString": "string",
            "title": "string",
            "tooltip": "string",
            "attr": "fn(name: String, value: Object) -> ?",
            "buildRendering": "fn()",
            "connect": "fn(obj: Object, event: String, method: String) -> ?",
            "defer": "fn(fcn: Function, delay: number) -> Object",
            "destroy": "fn(preserveDom?: bool)",
            "destroyDescendants": "fn(preserveDom: bool)",
            "destroyRecursive": "fn(preserveDom: bool)",
            "destroyRendering": "fn(preserveDom?: bool)",
            "disconnect": "fn(handle: ?)",
            "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
            "endDrag": "fn()",
            "getChildren": "fn() -> [?]",
            "getDescendants": "fn() -> [?]",
            "getParent": "fn() -> ?",
            "handleOut": "fn()",
            "handleOver": "fn()",
            "isFocusable": "fn() -> ?",
            "isLeftToRight": "fn() -> ?",
            "on": "fn(type: String, func: Function) -> ?",
            "own": "fn() -> ?",
            "placeAt": "fn(reference: String, position: String) -> ?",
            "postCreate": "fn()",
            "postMixInProperties": "fn()",
            "setAttribute": "fn(attr: String, value: ?)",
            "setHandle": "fn(time: ?)",
            "setLoadedPosition": "fn(decimal: ?)",
            "setMedia": "fn(med: Object, playerWidget: ?)",
            "startDrag": "fn()",
            "startup": "fn()",
            "subscribe": "fn(t: String, method: Function) -> ?",
            "uninitialize": "fn() -> bool",
            "unsubscribe": "fn(handle: Object)",
            "getCachedTemplate": "fn() -> ?",
            "onBlur": "fn()",
            "onClick": "fn(event: ?)",
            "onClose": "fn() -> bool",
            "onDblClick": "fn(event: ?)",
            "onDrag": "fn(evt: Event)",
            "onFocus": "fn()",
            "onHide": "fn()",
            "onKeyDown": "fn(event: ?)",
            "onKeyPress": "fn(event: ?)",
            "onKeyUp": "fn(event: ?)",
            "onMouseDown": "fn(event: ?)",
            "onMouseEnter": "fn(event: ?)",
            "onMouseLeave": "fn(event: ?)",
            "onMouseMove": "fn(event: ?)",
            "onMouseOut": "fn(event: ?)",
            "onMouseOver": "fn(event: ?)",
            "onMouseUp": "fn(event: ?)",
            "onResize": "fn(playerDimensions: ?)",
            "onShow": "fn()"
          }
        },
        "Player": {
          "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
          "prototype": {
            "attachScope": "Object",
            "set": "fn(property: string, value: Object)",
            "get": "fn(property: string) -> Object",
            "watch": "fn(property: string, callback: ?) -> ret66",
            "attributeMap": "Object",
            "baseClass": "string",
            "class": "string",
            "containerNode": "HTMLElement",
            "dir": "string",
            "domNode": "HTMLElement",
            "focused": "bool",
            "id": "string",
            "lang": "string",
            "ownerDocument": "Object",
            "playerWidth": "number",
            "searchContainerNode": "bool",
            "srcNodeRef": "HTMLElement",
            "style": "string",
            "templatePath": "string",
            "templateString": "string",
            "title": "string",
            "tooltip": "string",
            "widgetsInTemplate": "bool",
            "attr": "fn(name: String, value: Object) -> ?",
            "buildRendering": "fn()",
            "connect": "fn(obj: Object, event: String, method: String) -> ?",
            "defer": "fn(fcn: Function, delay: number) -> Object",
            "destroy": "fn(preserveDom?: bool)",
            "destroyDescendants": "fn(preserveDom: bool)",
            "destroyRecursive": "fn(preserveDom: bool)",
            "destroyRendering": "fn(preserveDom?: bool)",
            "disconnect": "fn(handle: ?)",
            "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
            "getChildren": "fn() -> [?]",
            "getDescendants": "fn() -> [?]",
            "getParent": "fn() -> ?",
            "isFocusable": "fn() -> ?",
            "isLeftToRight": "fn() -> ?",
            "on": "fn(type: String, func: Function) -> ?",
            "own": "fn() -> ?",
            "placeAt": "fn(reference: String, position: String) -> ?",
            "postCreate": "fn()",
            "postMixInProperties": "fn()",
            "setAttribute": "fn(attr: String, value: ?)",
            "startup": "fn()",
            "subscribe": "fn(t: String, method: Function) -> ?",
            "uninitialize": "fn() -> bool",
            "unsubscribe": "fn(handle: Object)",
            "getCachedTemplate": "fn() -> ?",
            "onBlur": "fn()",
            "onClick": "fn(event: ?)",
            "onClose": "fn() -> bool",
            "onDblClick": "fn(event: ?)",
            "onFocus": "fn()",
            "onHide": "fn()",
            "onKeyDown": "fn(event: ?)",
            "onKeyPress": "fn(event: ?)",
            "onKeyUp": "fn(event: ?)",
            "onMouseDown": "fn(event: ?)",
            "onMouseEnter": "fn(event: ?)",
            "onMouseLeave": "fn(event: ?)",
            "onMouseMove": "fn(event: ?)",
            "onMouseOut": "fn(event: ?)",
            "onMouseOver": "fn(event: ?)",
            "onMouseUp": "fn(event: ?)",
            "onResize": "fn(evt: ?)",
            "onShow": "fn()"
          }
        },
        "Status": {
          "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
          "prototype": {
            "attachScope": "Object",
            "set": "fn(property: string, value: Object)",
            "get": "fn(property: string) -> Object",
            "watch": "fn(property: string, callback: ?) -> ret87",
            "attributeMap": "Object",
            "baseClass": "string",
            "class": "string",
            "containerNode": "HTMLElement",
            "dir": "string",
            "domNode": "HTMLElement",
            "focused": "bool",
            "id": "string",
            "lang": "string",
            "ownerDocument": "Object",
            "searchContainerNode": "bool",
            "srcNodeRef": "HTMLElement",
            "style": "string",
            "templatePath": "string",
            "templateString": "string",
            "title": "string",
            "tooltip": "string",
            "attr": "fn(name: String, value: Object) -> ?",
            "buildRendering": "fn()",
            "connect": "fn(obj: Object, event: String, method: String) -> ?",
            "defer": "fn(fcn: Function, delay: number) -> Object",
            "destroy": "fn(preserveDom?: bool)",
            "destroyDescendants": "fn(preserveDom: bool)",
            "destroyRecursive": "fn(preserveDom: bool)",
            "destroyRendering": "fn(preserveDom?: bool)",
            "disconnect": "fn(handle: ?)",
            "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
            "getChildren": "fn() -> [?]",
            "getDescendants": "fn() -> [?]",
            "getParent": "fn() -> ?",
            "isFocusable": "fn() -> ?",
            "isLeftToRight": "fn() -> ?",
            "on": "fn(type: String, func: Function) -> ?",
            "own": "fn() -> ?",
            "placeAt": "fn(reference: String, position: String) -> ?",
            "postCreate": "fn()",
            "postMixInProperties": "fn()",
            "setAttribute": "fn(attr: String, value: ?)",
            "setMedia": "fn(med: Object)",
            "setStatus": "fn(str: ?, isError: ?)",
            "startup": "fn()",
            "subscribe": "fn(t: String, method: Function) -> ?",
            "toSeconds": "fn(time: ?) -> ?",
            "uninitialize": "fn() -> bool",
            "unsubscribe": "fn(handle: Object)",
            "getCachedTemplate": "fn() -> ?",
            "onBlur": "fn()",
            "onBuffer": "fn(isBuffering: ?)",
            "onClick": "fn(event: ?)",
            "onClose": "fn() -> bool",
            "onDblClick": "fn(event: ?)",
            "onEnd": "fn()",
            "onError": "fn(evt: ?)",
            "onFocus": "fn()",
            "onHide": "fn()",
            "onKeyDown": "fn(event: ?)",
            "onKeyPress": "fn(event: ?)",
            "onKeyUp": "fn(event: ?)",
            "onLoad": "fn()",
            "onMetaData": "fn(data: ?)",
            "onMouseDown": "fn(event: ?)",
            "onMouseEnter": "fn(event: ?)",
            "onMouseLeave": "fn(event: ?)",
            "onMouseMove": "fn(event: ?)",
            "onMouseOut": "fn(event: ?)",
            "onMouseOver": "fn(event: ?)",
            "onMouseUp": "fn(event: ?)",
            "onPaused": "fn()",
            "onPlay": "fn()",
            "onPosition": "fn(time: ?)",
            "onShow": "fn()",
            "onStart": "fn()",
            "onStop": "fn()"
          }
        },
        "VolumeButton": {
          "!type": "fn(params?: Object, srcNodeRef?: HTMLElement)",
          "prototype": {
            "attachScope": "Object",
            "set": "fn(property: string, value: Object)",
            "get": "fn(property: string) -> Object",
            "watch": "fn(property: string, callback: ?) -> ret106",
            "attributeMap": "Object",
            "baseClass": "string",
            "class": "string",
            "containerNode": "HTMLElement",
            "dir": "string",
            "domNode": "HTMLElement",
            "focused": "bool",
            "id": "string",
            "lang": "string",
            "ownerDocument": "Object",
            "searchContainerNode": "bool",
            "srcNodeRef": "HTMLElement",
            "style": "string",
            "templatePath": "string",
            "templateString": "string",
            "title": "string",
            "tooltip": "string",
            "attr": "fn(name: String, value: Object) -> ?",
            "buildRendering": "fn()",
            "connect": "fn(obj: Object, event: String, method: String) -> ?",
            "defer": "fn(fcn: Function, delay: number) -> Object",
            "destroy": "fn(preserveDom?: bool)",
            "destroyDescendants": "fn(preserveDom: bool)",
            "destroyRecursive": "fn(preserveDom: bool)",
            "destroyRendering": "fn(preserveDom?: bool)",
            "disconnect": "fn(handle: ?)",
            "emit": "fn(type: String, eventObj: Object, callbackArgs: [?]) -> ?",
            "endDrag": "fn()",
            "getChildren": "fn() -> [?]",
            "getDescendants": "fn() -> [?]",
            "getParent": "fn() -> ?",
            "handleOut": "fn()",
            "handleOver": "fn()",
            "isFocusable": "fn() -> ?",
            "isLeftToRight": "fn() -> ?",
            "on": "fn(type: String, func: Function) -> ?",
            "own": "fn() -> ?",
            "placeAt": "fn(reference: String, position: String) -> ?",
            "postCreate": "fn()",
            "postMixInProperties": "fn()",
            "setAttribute": "fn(attr: String, value: ?)",
            "setMedia": "fn(med: Object)",
            "startDrag": "fn()",
            "startup": "fn()",
            "subscribe": "fn(t: String, method: Function) -> ?",
            "uninitialize": "fn() -> bool",
            "unsubscribe": "fn(handle: Object)",
            "updateIcon": "fn(vol: number)",
            "getCachedTemplate": "fn() -> ?",
            "onBlur": "fn()",
            "onClick": "fn(event: ?)",
            "onClose": "fn() -> bool",
            "onDblClick": "fn(event: ?)",
            "onDocClick": "fn(evt: Event)",
            "onDrag": "fn(evt: Event)",
            "onFocus": "fn()",
            "onHide": "fn()",
            "onHideVolume": "fn()",
            "onKeyDown": "fn(event: ?)",
            "onKeyPress": "fn(event: ?)",
            "onKeyUp": "fn(event: ?)",
            "onMouseDown": "fn(event: ?)",
            "onMouseEnter": "fn(event: ?)",
            "onMouseLeave": "fn(event: ?)",
            "onMouseMove": "fn(event: ?)",
            "onMouseOut": "fn(event: ?)",
            "onMouseOver": "fn(event: ?)",
            "onMouseUp": "fn(event: ?)",
            "onResize": "fn(playerDimensions: Object)",
            "onShow": "fn()",
            "onShowVolume": "fn(evt: Event)"
          }
        }
      }
    }
  },
  "dojox/av/_Media": "exp",
  "dojox/av/FLAudio": "exp",
  "dojox/av/FLVideo": "exp",
  "dojox/av/widget/Player": "exp",
  "dojox/av/widget/ProgressSlider": "exp",
  "dojox/av/widget/PlayButton": "exp",
  "dojox/av/widget/Status": "exp",
  "dojox/av/widget/VolumeButton": "exp",
  "!name": "dojox.av.d.ts",
  "!define": {
    "ret": {
      "unwatch": "fn()"
    },
    "ret1": {
      "unwatch": "fn()"
    },
    "ret2": {
      "unwatch": "fn()"
    },
    "ret3": {
      "unwatch": "fn()"
    },
    "ret4": {
      "unwatch": "fn()"
    },
    "ret5": {
      "unwatch": "fn()"
    },
    "ret6": {
      "unwatch": "fn()"
    },
    "ret7": {
      "unwatch": "fn()"
    },
    "ret8": {
      "unwatch": "fn()"
    },
    "ret9": {
      "unwatch": "fn()"
    },
    "ret10": {
      "unwatch": "fn()"
    },
    "ret11": {
      "unwatch": "fn()"
    },
    "ret12": {
      "unwatch": "fn()"
    },
    "ret13": {
      "unwatch": "fn()"
    },
    "ret14": {
      "unwatch": "fn()"
    },
    "ret15": {
      "unwatch": "fn()"
    },
    "ret16": {
      "unwatch": "fn()"
    },
    "ret17": {
      "unwatch": "fn()"
    },
    "ret18": {
      "unwatch": "fn()"
    },
    "ret19": {
      "unwatch": "fn()"
    },
    "ret20": {
      "unwatch": "fn()"
    },
    "ret21": {
      "unwatch": "fn()"
    },
    "ret22": {
      "unwatch": "fn()"
    },
    "ret23": {
      "unwatch": "fn()"
    },
    "ret24": {
      "unwatch": "fn()"
    },
    "ret25": {
      "unwatch": "fn()"
    },
    "ret26": {
      "unwatch": "fn()"
    },
    "ret27": {
      "unwatch": "fn()"
    },
    "ret28": {
      "unwatch": "fn()"
    },
    "ret29": {
      "unwatch": "fn()"
    },
    "ret30": {
      "unwatch": "fn()"
    },
    "ret31": {
      "unwatch": "fn()"
    },
    "ret32": {
      "unwatch": "fn()"
    },
    "ret33": {
      "unwatch": "fn()"
    },
    "ret34": {
      "unwatch": "fn()"
    },
    "ret35": {
      "unwatch": "fn()"
    },
    "ret36": {
      "unwatch": "fn()"
    },
    "ret37": {
      "unwatch": "fn()"
    },
    "ret38": {
      "unwatch": "fn()"
    },
    "ret39": {
      "unwatch": "fn()"
    },
    "ret40": {
      "unwatch": "fn()"
    },
    "ret41": {
      "unwatch": "fn()"
    },
    "ret42": {
      "unwatch": "fn()"
    },
    "ret43": {
      "unwatch": "fn()"
    },
    "ret44": {
      "unwatch": "fn()"
    },
    "ret45": {
      "unwatch": "fn()"
    },
    "ret46": {
      "unwatch": "fn()"
    },
    "ret47": {
      "unwatch": "fn()"
    },
    "ret48": {
      "unwatch": "fn()"
    },
    "ret49": {
      "unwatch": "fn()"
    },
    "ret50": {
      "unwatch": "fn()"
    },
    "ret51": {
      "unwatch": "fn()"
    },
    "ret52": {
      "unwatch": "fn()"
    },
    "ret53": {
      "unwatch": "fn()"
    },
    "ret54": {
      "unwatch": "fn()"
    },
    "ret55": {
      "unwatch": "fn()"
    },
    "ret56": {
      "unwatch": "fn()"
    },
    "ret57": {
      "unwatch": "fn()"
    },
    "ret58": {
      "unwatch": "fn()"
    },
    "ret59": {
      "unwatch": "fn()"
    },
    "ret60": {
      "unwatch": "fn()"
    },
    "ret61": {
      "unwatch": "fn()"
    },
    "ret62": {
      "unwatch": "fn()"
    },
    "ret63": {
      "unwatch": "fn()"
    },
    "ret64": {
      "unwatch": "fn()"
    },
    "ret65": {
      "unwatch": "fn()"
    },
    "ret66": {
      "unwatch": "fn()"
    },
    "ret67": {
      "unwatch": "fn()"
    },
    "ret68": {
      "unwatch": "fn()"
    },
    "ret69": {
      "unwatch": "fn()"
    },
    "ret70": {
      "unwatch": "fn()"
    },
    "ret71": {
      "unwatch": "fn()"
    },
    "ret72": {
      "unwatch": "fn()"
    },
    "ret73": {
      "unwatch": "fn()"
    },
    "ret74": {
      "unwatch": "fn()"
    },
    "ret75": {
      "unwatch": "fn()"
    },
    "ret76": {
      "unwatch": "fn()"
    },
    "ret77": {
      "unwatch": "fn()"
    },
    "ret78": {
      "unwatch": "fn()"
    },
    "ret79": {
      "unwatch": "fn()"
    },
    "ret80": {
      "unwatch": "fn()"
    },
    "ret81": {
      "unwatch": "fn()"
    },
    "ret82": {
      "unwatch": "fn()"
    },
    "ret83": {
      "unwatch": "fn()"
    },
    "ret84": {
      "unwatch": "fn()"
    },
    "ret85": {
      "unwatch": "fn()"
    },
    "ret86": {
      "unwatch": "fn()"
    },
    "ret87": {
      "unwatch": "fn()"
    },
    "ret88": {
      "unwatch": "fn()"
    },
    "ret89": {
      "unwatch": "fn()"
    },
    "ret90": {
      "unwatch": "fn()"
    },
    "ret91": {
      "unwatch": "fn()"
    },
    "ret92": {
      "unwatch": "fn()"
    },
    "ret93": {
      "unwatch": "fn()"
    },
    "ret94": {
      "unwatch": "fn()"
    },
    "ret95": {
      "unwatch": "fn()"
    },
    "ret96": {
      "unwatch": "fn()"
    },
    "ret97": {
      "unwatch": "fn()"
    },
    "ret98": {
      "unwatch": "fn()"
    },
    "ret99": {
      "unwatch": "fn()"
    },
    "ret100": {
      "unwatch": "fn()"
    },
    "ret101": {
      "unwatch": "fn()"
    },
    "ret102": {
      "unwatch": "fn()"
    },
    "ret103": {
      "unwatch": "fn()"
    },
    "ret104": {
      "unwatch": "fn()"
    },
    "ret105": {
      "unwatch": "fn()"
    },
    "ret106": {
      "unwatch": "fn()"
    },
    "ret107": {
      "unwatch": "fn()"
    },
    "ret108": {
      "unwatch": "fn()"
    },
    "ret109": {
      "unwatch": "fn()"
    },
    "ret110": {
      "unwatch": "fn()"
    },
    "ret111": {
      "unwatch": "fn()"
    },
    "ret112": {
      "unwatch": "fn()"
    },
    "ret113": {
      "unwatch": "fn()"
    },
    "ret114": {
      "unwatch": "fn()"
    },
    "ret115": {
      "unwatch": "fn()"
    },
    "ret116": {
      "unwatch": "fn()"
    },
    "ret117": {
      "unwatch": "fn()"
    },
    "ret118": {
      "unwatch": "fn()"
    },
    "ret119": {
      "unwatch": "fn()"
    },
    "ret120": {
      "unwatch": "fn()"
    },
    "ret121": {
      "unwatch": "fn()"
    },
    "ret122": {
      "unwatch": "fn()"
    },
    "ret123": {
      "unwatch": "fn()"
    },
    "ret124": {
      "unwatch": "fn()"
    }
  }
}
