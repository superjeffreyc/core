{
  "JQueryAjaxSettings": {
    "accepts": "?",
    "async": "bool",
    "beforeSend": "fn(jqXHR: JQueryXHR, settings: JQueryAjaxSettings) -> ?",
    "cache": "bool",
    "complete": "fn(jqXHR: JQueryXHR, textStatus: string) -> ?",
    "contents": {},
    "contentType": "?",
    "context": "?",
    "converters": {},
    "crossDomain": "bool",
    "data": "?",
    "dataFilter": "fn(data: ?, ty: ?) -> ?",
    "dataType": "string",
    "error": "fn(jqXHR: JQueryXHR, textStatus: string, errorThrown: string) -> ?",
    "global": "bool",
    "headers": {},
    "ifModified": "bool",
    "isLocal": "bool",
    "jsonp": "?",
    "jsonpCallback": "?",
    "method": "string",
    "mimeType": "string",
    "password": "string",
    "processData": "bool",
    "scriptCharset": "string",
    "statusCode": {},
    "success": "fn(data: ?, textStatus: string, jqXHR: JQueryXHR) -> ?",
    "timeout": "number",
    "traditional": "bool",
    "type": "string",
    "url": "string",
    "username": "string",
    "xhr": "?",
    "xhrFields": {}
  },
  "JQueryXHR": {
    "overrideMimeType": "fn(mimeType: string) -> ?",
    "abort": "fn(statusText?: string)",
    "then": "fn(doneCallback: fn(data: ?, textStatus: string, jqXHR: JQueryXHR), failCallback?: fn(jqXHR: JQueryXHR, textStatus: string, errorThrown: ?)) -> ?",
    "responseJSON": "?",
    "error": "fn(xhr: JQueryXHR, textStatus: string, errorThrown: string)"
  },
  "JQueryCallback": {
    "add": "fn(callbacks: Function) -> JQueryCallback",
    "disable": "fn() -> JQueryCallback",
    "disabled": "fn() -> bool",
    "empty": "fn() -> JQueryCallback",
    "fire": "fn(arguments: [?]) -> JQueryCallback",
    "fired": "fn() -> bool",
    "fireWith": "fn(context?: ?, args?: [?]) -> JQueryCallback",
    "has": "fn(callback: Function) -> bool",
    "lock": "fn() -> JQueryCallback",
    "locked": "fn() -> bool",
    "remove": "fn(callbacks: Function) -> JQueryCallback"
  },
  "JQueryGenericPromise": {
    "then": "fn(doneFilter: fn(value?: T, values: [?]), JQueryPromise: ?, failFilter?: fn(reasons: [?]), progressFilter?: fn(progression: [?])) -> ?"
  },
  "JQueryPromiseCallback": {},
  "JQueryPromiseOperator": {},
  "JQueryPromise": {
    "state": "fn() -> string",
    "always": "fn(alwaysCallback1?: ?, JQueryPromiseCallback: ?, alwaysCallbacksN: ?, JQueryPromiseCallback: ?) -> ?",
    "done": "fn(doneCallback1?: ?, JQueryPromiseCallback: ?, doneCallbackN: ?, JQueryPromiseCallback: ?) -> ?",
    "fail": "fn(failCallback1?: ?, JQueryPromiseCallback: ?, failCallbacksN: ?, JQueryPromiseCallback: ?) -> ?",
    "progress": "fn(progressCallback1?: ?, JQueryPromiseCallback: ?, progressCallbackN: ?, JQueryPromiseCallback: ?) -> ?",
    "pipe": "fn(doneFilter?: fn(x: ?), failFilter?: fn(x: ?), progressFilter?: fn(x: ?)) -> ?"
  },
  "JQueryDeferred": {
    "state": "fn() -> string",
    "always": "fn(alwaysCallback1?: ?, JQueryPromiseCallback: ?, alwaysCallbacksN: ?, JQueryPromiseCallback: ?) -> ?",
    "done": "fn(doneCallback1?: ?, JQueryPromiseCallback: ?, doneCallbackN: ?, JQueryPromiseCallback: ?) -> ?",
    "fail": "fn(failCallback1?: ?, JQueryPromiseCallback: ?, failCallbacksN: ?, JQueryPromiseCallback: ?) -> ?",
    "progress": "fn(progressCallback1?: ?, JQueryPromiseCallback: ?, progressCallbackN: ?, JQueryPromiseCallback: ?) -> ?",
    "notify": "fn(value?: ?, args: [?]) -> ?",
    "notifyWith": "fn(context: ?, value?: [?]) -> ?",
    "reject": "fn(value?: ?, args: [?]) -> ?",
    "rejectWith": "fn(context: ?, value?: [?]) -> ?",
    "resolve": "fn(value?: T, args: [?]) -> ?",
    "resolveWith": "fn(context: ?, value?: [T]) -> ?",
    "promise": "fn(target?: ?) -> ?",
    "pipe": "fn(doneFilter?: fn(x: ?), failFilter?: fn(x: ?), progressFilter?: fn(x: ?)) -> ?"
  },
  "BaseJQueryEventObject": {
    "data": "?",
    "delegateTarget": "Element",
    "isDefaultPrevented": "fn() -> bool",
    "isImmediatePropagationStopped": "fn() -> bool",
    "isPropagationStopped": "fn() -> bool",
    "namespace": "string",
    "originalEvent": "Event",
    "preventDefault": "fn() -> ?",
    "relatedTarget": "Element",
    "result": "?",
    "stopImmediatePropagation": "fn()",
    "stopPropagation": "fn()",
    "target": "Element",
    "pageX": "number",
    "pageY": "number",
    "which": "number",
    "metaKey": "bool"
  },
  "JQueryInputEventObject": {
    "altKey": "bool",
    "ctrlKey": "bool",
    "metaKey": "bool",
    "shiftKey": "bool"
  },
  "JQueryMouseEventObject": {
    "button": "number",
    "clientX": "number",
    "clientY": "number",
    "offsetX": "number",
    "offsetY": "number",
    "pageX": "number",
    "pageY": "number",
    "screenX": "number",
    "screenY": "number"
  },
  "JQueryKeyEventObject": {
    "char": "?",
    "charCode": "number",
    "key": "?",
    "keyCode": "number"
  },
  "JQueryEventObject": {},
  "JQuerySupport": {
    "ajax": "bool",
    "boxModel": "bool",
    "changeBubbles": "bool",
    "checkClone": "bool",
    "checkOn": "bool",
    "cors": "bool",
    "cssFloat": "bool",
    "hrefNormalized": "bool",
    "htmlSerialize": "bool",
    "leadingWhitespace": "bool",
    "noCloneChecked": "bool",
    "noCloneEvent": "bool",
    "opacity": "bool",
    "optDisabled": "bool",
    "optSelected": "bool",
    "scriptEval": "fn() -> bool",
    "style": "bool",
    "submitBubbles": "bool",
    "tbody": "bool"
  },
  "JQueryParam": {},
  "JQueryEventConstructor": {},
  "JQueryCoordinates": {
    "left": "number",
    "top": "number"
  },
  "JQuerySerializeArrayElement": {
    "name": "string",
    "value": "string"
  },
  "JQueryAnimationOptions": {
    "duration": "?",
    "easing": "string",
    "complete": "Function",
    "step": "fn(now: number, tween: ?)",
    "progress": "fn(animation: ?, progress: number, remainingMs: number)",
    "start": "fn(animation: ?)",
    "done": "fn(animation: ?, jumpedToEnd: bool)",
    "fail": "fn(animation: ?, jumpedToEnd: bool)",
    "always": "fn(animation: ?, jumpedToEnd: bool)",
    "queue": "?",
    "specialEasing": "Object"
  },
  "JQueryStatic": {
    "ajax": "fn(settings: JQueryAjaxSettings) -> JQueryXHR",
    "ajaxPrefilter": "fn(dataTypes: string, handler: fn(opts: ?, originalOpts: JQueryAjaxSettings, jqXHR: JQueryXHR))",
    "ajaxSettings": "JQueryAjaxSettings",
    "ajaxSetup": "fn(options: JQueryAjaxSettings)",
    "get": "fn(url: string, success?: fn(data: ?, textStatus: string, jqXHR: JQueryXHR), dataType?: string) -> JQueryXHR",
    "getJSON": "fn(url: string, success?: fn(data: ?, textStatus: string, jqXHR: JQueryXHR)) -> JQueryXHR",
    "getScript": "fn(url: string, success?: fn(script: string, textStatus: string, jqXHR: JQueryXHR)) -> JQueryXHR",
    "param": "JQueryParam",
    "post": "fn(url: string, success?: fn(data: ?, textStatus: string, jqXHR: JQueryXHR), dataType?: string) -> JQueryXHR",
    "Callbacks": "fn(flags?: string) -> JQueryCallback",
    "holdReady": "fn(hold: bool)",
    "noConflict": "fn(removeAll?: bool) -> Object",
    "when": "fn(deferreds: ?, JQueryPromise: ?) -> ?",
    "cssHooks": {},
    "cssNumber": "?",
    "data": "fn(element: Element, key: string, value: T) -> T",
    "dequeue": "fn(element: Element, queueName?: string)",
    "hasData": "fn(element: Element) -> bool",
    "queue": "fn(element: Element, queueName?: string) -> [?]",
    "removeData": "fn(element: Element, name?: string) -> JQuery",
    "Deferred": "fn(beforeStart?: fn(deferred: ?)) -> ?",
    "fx": {
      "tick": "fn()",
      "interval": "number",
      "stop": "fn()",
      "speeds": {
        "slow": "number",
        "fast": "number"
      },
      "off": "bool",
      "step": "?"
    },
    "proxy": "fn(fnction: fn(args: [?]), context: Object, additionalArguments: [?]) -> ?",
    "Event": "JQueryEventConstructor",
    "error": "fn(message: ?) -> JQuery",
    "expr": "?",
    "fn": "?",
    "isReady": "bool",
    "support": "JQuerySupport",
    "contains": "fn(container: Element, contained: Element) -> bool",
    "each": "fn(collection: [T], callback: fn(indexInArray: number, valueOfElement: T)) -> ?",
    "extend": "fn(target: ?, object1?: ?, objectN: [?]) -> ?",
    "globalEval": "fn(code: string) -> ?",
    "grep": "fn(array: [T], func: fn(elementOfArray: T, indexInArray: number), invert?: bool) -> [T]",
    "inArray": "fn(value: T, array: [T], fromIndex?: number) -> number",
    "isArray": "fn(obj: ?) -> bool",
    "isEmptyObject": "fn(obj: ?) -> bool",
    "isFunction": "fn(obj: ?) -> bool",
    "isNumeric": "fn(value: ?) -> bool",
    "isPlainObject": "fn(obj: ?) -> bool",
    "isWindow": "fn(obj: ?) -> bool",
    "isXMLDoc": "fn(node: Node) -> bool",
    "makeArray": "fn(obj: ?) -> [?]",
    "map": "fn(array: [T], callback: fn(elementOfArray: T, indexInArray: number)) -> [U]",
    "merge": "fn(first: [T], second: [T]) -> [T]",
    "noop": "fn() -> ?",
    "now": "fn() -> number",
    "parseJSON": "fn(json: string) -> ?",
    "parseXML": "fn(data: string) -> XMLDocument",
    "trim": "fn(str: string) -> string",
    "type": "fn(obj: ?) -> string",
    "unique": "fn(array: [Element]) -> [Element]",
    "parseHTML": "fn(data: string, context?: HTMLElement, keepScripts?: bool) -> [?]"
  },
  "JQuery": {
    "ajaxComplete": "fn(handler: fn(event: JQueryEventObject, XMLHttpRequest: XMLHttpRequest, ajaxOptions: ?)) -> JQuery",
    "ajaxError": "fn(handler: fn(event: JQueryEventObject, jqXHR: JQueryXHR, ajaxSettings: JQueryAjaxSettings, thrownError: ?)) -> JQuery",
    "ajaxSend": "fn(handler: fn(event: JQueryEventObject, jqXHR: JQueryXHR, ajaxOptions: JQueryAjaxSettings)) -> JQuery",
    "ajaxStart": "fn(handler: fn()) -> JQuery",
    "ajaxStop": "fn(handler: fn()) -> JQuery",
    "ajaxSuccess": "fn(handler: fn(event: JQueryEventObject, XMLHttpRequest: XMLHttpRequest, ajaxOptions: JQueryAjaxSettings)) -> JQuery",
    "load": "fn(url: string, data?: string, Object: ?, complete?: fn(responseText: string, textStatus: string, XMLHttpRequest: XMLHttpRequest)) -> JQuery",
    "serialize": "fn() -> string",
    "serializeArray": "fn() -> [JQuerySerializeArrayElement]",
    "addClass": "fn(className: string) -> JQuery",
    "addBack": "fn(selector?: string) -> JQuery",
    "attr": "fn(attributeName: string) -> string",
    "hasClass": "fn(className: string) -> bool",
    "html": "fn() -> string",
    "prop": "fn(propertyName: string) -> ?",
    "removeAttr": "fn(attributeName: string) -> JQuery",
    "removeClass": "fn(className?: string) -> JQuery",
    "removeProp": "fn(propertyName: string) -> JQuery",
    "toggleClass": "fn(className: string, swtch?: bool) -> JQuery",
    "val": "fn() -> ?",
    "css": "fn(propertyName: string) -> string",
    "height": "fn() -> number",
    "innerHeight": "fn() -> number",
    "innerWidth": "fn() -> number",
    "offset": "fn() -> JQueryCoordinates",
    "outerHeight": "fn(includeMargin?: bool) -> number",
    "outerWidth": "fn(includeMargin?: bool) -> number",
    "position": "fn() -> JQueryCoordinates",
    "scrollLeft": "fn() -> number",
    "scrollTop": "fn() -> number",
    "width": "fn() -> number",
    "clearQueue": "fn(queueName?: string) -> JQuery",
    "data": "fn(key: string, value: ?) -> JQuery",
    "dequeue": "fn(queueName?: string) -> JQuery",
    "removeData": "fn(name: string) -> JQuery",
    "promise": "fn(type?: string, target?: Object) -> ?",
    "animate": "fn(properties: Object, duration?: string, number: ?, complete?: Function) -> JQuery",
    "delay": "fn(duration: number, queueName?: string) -> JQuery",
    "fadeIn": "fn(duration?: number, string: ?, complete?: Function) -> JQuery",
    "fadeOut": "fn(duration?: number, string: ?, complete?: Function) -> JQuery",
    "fadeTo": "fn(duration: string, number: ?, opacity: number, complete?: Function) -> JQuery",
    "fadeToggle": "fn(duration?: number, string: ?, complete?: Function) -> JQuery",
    "finish": "fn(queue?: string) -> JQuery",
    "hide": "fn(duration?: number, string: ?, complete?: Function) -> JQuery",
    "show": "fn(duration?: number, string: ?, complete?: Function) -> JQuery",
    "slideDown": "fn(duration?: number, string: ?, complete?: Function) -> JQuery",
    "slideToggle": "fn(duration?: number, string: ?, complete?: Function) -> JQuery",
    "slideUp": "fn(duration?: number, string: ?, complete?: Function) -> JQuery",
    "stop": "fn(clearQueue?: bool, jumpToEnd?: bool) -> JQuery",
    "toggle": "fn(duration?: number, string: ?, complete?: Function) -> JQuery",
    "bind": "fn(eventType: string, eventData: ?, handler: fn(eventObject: JQueryEventObject)) -> JQuery",
    "blur": "fn() -> JQuery",
    "change": "fn() -> JQuery",
    "click": "fn() -> JQuery",
    "dblclick": "fn() -> JQuery",
    "delegate": "fn(selector: ?, eventType: string, handler: fn(eventObject: JQueryEventObject)) -> JQuery",
    "focus": "fn() -> JQuery",
    "focusin": "fn() -> JQuery",
    "focusout": "fn() -> JQuery",
    "hover": "fn(handlerIn: fn(eventObject: JQueryEventObject), handlerOut: fn(eventObject: JQueryEventObject)) -> JQuery",
    "keydown": "fn() -> JQuery",
    "keypress": "fn() -> JQuery",
    "keyup": "fn() -> JQuery",
    "mousedown": "fn() -> JQuery",
    "mouseenter": "fn() -> JQuery",
    "mouseleave": "fn() -> JQuery",
    "mousemove": "fn() -> JQuery",
    "mouseout": "fn() -> JQuery",
    "mouseover": "fn() -> JQuery",
    "mouseup": "fn() -> JQuery",
    "off": "fn() -> JQuery",
    "on": "fn(events: string, handler: fn(eventObject: JQueryEventObject, args: [?])) -> JQuery",
    "one": "fn(events: string, handler: fn(eventObject: JQueryEventObject)) -> JQuery",
    "ready": "fn(handler: fn(jQueryAlias?: JQueryStatic)) -> JQuery",
    "resize": "fn() -> JQuery",
    "scroll": "fn() -> JQuery",
    "select": "fn() -> JQuery",
    "submit": "fn() -> JQuery",
    "trigger": "fn(eventType: string, extraParameters?: [?], Object: ?) -> JQuery",
    "triggerHandler": "fn(eventType: string, extraParameters: [?]) -> Object",
    "unbind": "fn(eventType?: string, handler?: fn(eventObject: JQueryEventObject)) -> JQuery",
    "undelegate": "fn() -> JQuery",
    "unload": "fn(handler: fn(eventObject: JQueryEventObject)) -> JQuery",
    "context": "Element",
    "jquery": "string",
    "error": "fn(handler: fn(eventObject: JQueryEventObject)) -> JQuery",
    "pushStack": "fn(elements: [?]) -> JQuery",
    "after": "fn(content1: JQuery, any: ?, content2: [?]) -> JQuery",
    "append": "fn(content1: JQuery, any: ?, content2: [?]) -> JQuery",
    "appendTo": "fn(target: JQuery, any: ?) -> JQuery",
    "before": "fn(content1: JQuery, any: ?, content2: [?]) -> JQuery",
    "clone": "fn(withDataAndEvents?: bool, deepWithDataAndEvents?: bool) -> JQuery",
    "detach": "fn(selector?: string) -> JQuery",
    "empty": "fn() -> JQuery",
    "insertAfter": "fn(target: JQuery, any: ?) -> JQuery",
    "insertBefore": "fn(target: JQuery, any: ?) -> JQuery",
    "prepend": "fn(content1: JQuery, any: ?, content2: [?]) -> JQuery",
    "prependTo": "fn(target: JQuery, any: ?) -> JQuery",
    "remove": "fn(selector?: string) -> JQuery",
    "replaceAll": "fn(target: JQuery, any: ?) -> JQuery",
    "replaceWith": "fn(newContent: JQuery, any: ?) -> JQuery",
    "text": "fn() -> string",
    "toArray": "fn() -> [?]",
    "unwrap": "fn() -> JQuery",
    "wrap": "fn(wrappingElement: JQuery, Element: ?, string: ?) -> JQuery",
    "wrapAll": "fn(wrappingElement: JQuery, Element: ?, string: ?) -> JQuery",
    "wrapInner": "fn(wrappingElement: JQuery, Element: ?, string: ?) -> JQuery",
    "each": "fn(func: fn(index: number, elem: Element)) -> JQuery",
    "get": "fn(index: number) -> HTMLElement",
    "index": "fn() -> number",
    "length": "number",
    "selector": "string",
    "add": "fn(selector: string, context?: Element) -> JQuery",
    "children": "fn(selector?: string) -> JQuery",
    "closest": "fn(selector: string) -> JQuery",
    "contents": "fn() -> JQuery",
    "end": "fn() -> JQuery",
    "eq": "fn(index: number) -> JQuery",
    "filter": "fn(selector: string) -> JQuery",
    "find": "fn(selector: string) -> JQuery",
    "first": "fn() -> JQuery",
    "has": "fn(selector: string) -> JQuery",
    "is": "fn(selector: string) -> bool",
    "last": "fn() -> JQuery",
    "map": "fn(callback: fn(index: number, domElement: Element)) -> JQuery",
    "next": "fn(selector?: string) -> JQuery",
    "nextAll": "fn(selector?: string) -> JQuery",
    "nextUntil": "fn(selector?: string, filter?: string) -> JQuery",
    "not": "fn(selector: string) -> JQuery",
    "offsetParent": "fn() -> JQuery",
    "parent": "fn(selector?: string) -> JQuery",
    "parents": "fn(selector?: string) -> JQuery",
    "parentsUntil": "fn(selector?: string, filter?: string) -> JQuery",
    "prev": "fn(selector?: string) -> JQuery",
    "prevAll": "fn(selector?: string) -> JQuery",
    "prevUntil": "fn(selector?: string, filter?: string) -> JQuery",
    "siblings": "fn(selector?: string) -> JQuery",
    "slice": "fn(start: number, end?: number) -> JQuery",
    "queue": "fn(queueName?: string) -> [?]"
  },
  "jquery": "$",
  "jQuery": "JQueryStatic",
  "$": "JQueryStatic",
  "!name": "jquery"
}
