{
  "jasmine": {
    "Matchers": {
      "toBeAfter": "fn(otherDate: Date) -> bool",
      "toBeArray": "fn() -> bool",
      "toBeArrayOfBooleans": "fn() -> bool",
      "toBeArrayOfNumbers": "fn() -> bool",
      "toBeArrayOfObjects": "fn() -> bool",
      "toBeArrayOfSize": "fn(size: number) -> bool",
      "toBeArrayOfStrings": "fn() -> bool",
      "toBeBefore": "fn(otherDate: Date) -> bool",
      "toBeBoolean": "fn() -> bool",
      "toBeCalculable": "fn() -> bool",
      "toBeDate": "fn() -> bool",
      "toBeEmptyArray": "fn() -> bool",
      "toBeEmptyObject": "fn() -> bool",
      "toBeEmptyString": "fn() -> bool",
      "toBeEvenNumber": "fn() -> bool",
      "toBeFalse": "fn() -> bool",
      "toBeFunction": "fn() -> bool",
      "toBeHtmlString": "fn() -> bool",
      "toBeIso8601": "fn() -> bool",
      "toBeJsonString": "fn() -> bool",
      "toBeLongerThan": "fn(other: string) -> bool",
      "toBeNonEmptyArray": "fn() -> bool",
      "toBeNonEmptyObject": "fn() -> bool",
      "toBeNonEmptyString": "fn() -> bool",
      "toBeNumber": "fn() -> bool",
      "toBeObject": "fn() -> bool",
      "toBeOddNumber": "fn() -> bool",
      "toBeSameLengthAs": "fn(other: string) -> bool",
      "toBeShorterThan": "fn(other: string) -> bool",
      "toBeString": "fn() -> bool",
      "toBeTrue": "fn() -> bool",
      "toBeWhitespace": "fn() -> bool",
      "toBeWholeNumber": "fn() -> bool",
      "toBeWithinRange": "fn(floor: number, ceiling: number) -> bool",
      "toEndWith": "fn(subString: string) -> bool",
      "toHaveArray": "fn(key: string) -> bool",
      "toHaveArrayOfBooleans": "fn(key: string) -> bool",
      "toHaveArrayOfNumbers": "fn(key: string) -> bool",
      "toHaveArrayOfObjects": "fn(key: string) -> bool",
      "toHaveArrayOfSize": "fn(key: string, size?: number) -> bool",
      "toHaveArrayOfStrings": "fn(key: string) -> bool",
      "toHaveBoolean": "fn(key: string) -> bool",
      "toHaveCalculable": "fn(key: string) -> bool",
      "toHaveDate": "fn(key: string) -> bool",
      "toHaveDateAfter": "fn(key: string, otherDate: Date) -> bool",
      "toHaveDateBefore": "fn(key: string, otherDate: Date) -> bool",
      "toHaveEmptyArray": "fn(key: string) -> bool",
      "toHaveEmptyObject": "fn(key: string) -> bool",
      "toHaveEmptyString": "fn(key: string) -> bool",
      "toHaveEvenNumber": "fn(key: string) -> bool",
      "toHaveFalse": "fn(key: string) -> bool",
      "toHaveHtmlString": "fn(key: string) -> bool",
      "toHaveIso8601": "fn(key: string) -> bool",
      "toHaveJsonString": "fn(key: string) -> bool",
      "toHaveMember": "fn(key: string) -> bool",
      "toHaveMethod": "fn(key: string) -> bool",
      "toHaveNonEmptyArray": "fn(key: string) -> bool",
      "toHaveNonEmptyObject": "fn(key: string) -> bool",
      "toHaveNonEmptyString": "fn(key: string) -> bool",
      "toHaveNumber": "fn(key: string) -> bool",
      "toHaveNumberWithinRange": "fn(key: string, floor: number, ceiling: number) -> bool",
      "toHaveObject": "fn(key: string) -> bool",
      "toHaveOddNumber": "fn(key: string) -> bool",
      "toHaveString": "fn(key: string) -> bool",
      "toHaveStringLongerThan": "fn(key: string, other: string) -> bool",
      "toHaveStringSameLengthAs": "fn(key: string, other: string) -> bool",
      "toHaveStringShorterThan": "fn(key: string, other: string) -> bool",
      "toHaveTrue": "fn(key: string) -> bool",
      "toHaveWhitespaceString": "fn(key: string) -> bool",
      "toHaveWholeNumber": "fn(key: string) -> bool",
      "toImplement": "fn(api: ?) -> bool",
      "toStartWith": "fn(subString: string) -> bool",
      "toThrowAnyError": "fn() -> bool",
      "toThrowErrorOfType": "fn(type: string) -> bool"
    }
  },
  "!name": "jasmine-expect.d.ts"
}
