{
  "VictorCoordinates": {
    "x": "number",
    "y": "number"
  },
  "Victor": {
    "!type": "fn(x: number, y: number)",
    "fromArray": "fn(arr: ?) -> Victor",
    "fromObject": "fn(obj: VictorCoordinates) -> Victor",
    "prototype": {
      "x": "number",
      "y": "number",
      "clone": "fn() -> Victor",
      "copyX": "fn(vector: Victor) -> Victor",
      "copyY": "fn(vector: Victor) -> Victor",
      "copy": "fn(vector: Victor) -> Victor",
      "toArray": "fn() -> ?",
      "toObject": "fn() -> VictorCoordinates",
      "addX": "fn(vector: Victor) -> Victor",
      "addY": "fn(vector: Victor) -> Victor",
      "add": "fn(vector: Victor) -> Victor",
      "subtractX": "fn(vector: Victor) -> Victor",
      "subtractY": "fn(vector: Victor) -> Victor",
      "subtract": "fn(vector: Victor) -> Victor",
      "multiplyX": "fn(vector: Victor) -> Victor",
      "multiplyY": "fn(vector: Victor) -> Victor",
      "multiply": "fn(vector: Victor) -> Victor",
      "divideX": "fn(vector: Victor) -> Victor",
      "divideY": "fn(vector: Victor) -> Victor",
      "divide": "fn(scalar: Victor) -> Victor",
      "invertX": "fn() -> Victor",
      "invertY": "fn() -> Victor",
      "invert": "fn() -> Victor",
      "mixX": "fn(vector: Victor, ammount: number) -> Victor",
      "mixY": "fn(vector: Victor, ammount: number) -> Victor",
      "mix": "fn(vector: Victor, ammount: number) -> Victor",
      "normalize": "fn() -> Victor",
      "norm": "fn() -> Victor",
      "limit": "fn(max: number, multiplier: number) -> Victor",
      "unfloat": "fn() -> Victor",
      "rotate": "fn(angle: number) -> Victor",
      "rotateDeg": "fn(angle: number) -> Victor",
      "rotateBy": "fn(rotation: number) -> Victor",
      "rotateByDeg": "fn(rotation: number) -> Victor",
      "randomizeX": "fn(topLeft: Victor, bottomRight: Victor) -> Victor",
      "randomizeY": "fn(topLeft: Victor, bottomRight: Victor) -> Victor",
      "randomize": "fn(topLeft: Victor, bottomRight: Victor) -> Victor",
      "randomizeAny": "fn(topLeft: Victor, bottomRight: Victor) -> Victor",
      "dot": "fn(vector: Victor) -> number",
      "cross": "fn(vector: Victor) -> number",
      "length": "fn() -> number",
      "magnitude": "fn() -> number",
      "lengthSq": "fn() -> number",
      "distanceX": "fn(vector: Victor) -> number",
      "absDistanceX": "fn(vector: Victor) -> number",
      "distanceY": "fn(vector: Victor) -> number",
      "absDistanceY": "fn(vector: Victor) -> number",
      "distance": "fn(vector: Victor) -> number",
      "distanceSq": "fn(vector: Victor) -> number",
      "horizontalAngle": "fn() -> number",
      "angle": "fn() -> number",
      "direction": "fn() -> number",
      "horizontalAngleDeg": "fn() -> number",
      "angleDeg": "fn() -> number",
      "verticalAngle": "fn() -> number",
      "verticalAngleDeg": "fn() -> number"
    }
  },
  "victor": "Victor",
  "!name": "victor.d.ts"
}
